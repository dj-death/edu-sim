<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gizmox.WebGUI.Common</name>
    </assembly>
    <members>
        <member name="T:Gizmox.WebGUI.Virtualization.VirtualForest">
            <summary>
            Represents a virtual forest
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualForest.mobjDefaultForest">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualForest.mobjId">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualForest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualForest"/> class.
            </summary>
            <param name="strId">The forest id.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualForest.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualForest"/> class.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualForest.Id">
            <summary>
            Gets the forest id.
            </summary>
            <value>The forest id.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualForest.Default">
            <summary>
            Gets the default.
            </summary>
            <value>The default.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Tokens.TokenReader">
            <summary>
            The base class for all token reader
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.NullChar">
            <summary>
            The const for an empty char
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.mintReadingPosition">
            <summary>
            The current reading position
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.mobjSource">
            <summary>
            The source to tokenize
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.marrBuffer">
            <summary>
            The source buffer
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.mintBufferPosition">
            <summary>
            The source buffer position
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.mintBufferLength">
            <summary>
            The source buffer length
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.mintBufferSize">
            <summary>
            The source buffer max size
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.mobjPendingToken">
            <summary>
            A token that is waiting for reading
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.mobjCurrentTokenContext">
            <summary>
            The current token context
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.TokenReader"/> class.
            </summary>
            <param name="objSource">The source.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.PeekAtIndex(System.Int32)">
            <summary>
            Gets the char from a givven index.
            </summary>
            <param name="intIndex">The char index.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.TruncateBuffer(System.Int32)">
            <summary>
            Truncates the buffer.
            </summary>
            <param name="intPosition">The position.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.EnsureBuffer(System.Int32)">
            <summary>
            Ensures a valid buffer for a givven index.
            </summary>
            <param name="intIndex">The index to ensure buffer for.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.EnsureBuffer(System.Int32,System.Int32)">
            <summary>
            Ensures a valid buffer for a givven range.
            </summary>
            <param name="intIndex">The range index.</param>
            <param name="intLength">The range length.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.LoadBuffer(System.Int32)">
            <summary>
            Loads the buffer for a givven index.
            </summary>
            <param name="intIndex">The index to load in the buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.LoadBuffer(System.Int32,System.Int32)">
            <summary>
            Loads the buffer for a givven range.
            </summary>
            <param name="intIndex">The index of the range.</param>
            <param name="intLength">The length of the range.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.PeekBuffer(System.Int32,System.Int32)">
            <summary>
            Peeks a range from the buffer.
            </summary>
            <param name="intIndex">The index of the range.</param>
            <param name="intLength">The length of the range.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.PeekBuffer(System.Int32)">
            <summary>
            Peeks the buffer at an index.
            </summary>
            <param name="intIndex">The index of the charecter with in the buffer to read.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.ReadBuffer(System.Int32,System.Int32)">
            <summary>
            Reads a range from the buffer.
            </summary>
            <param name="intIndex">The index of the range.</param>
            <param name="intLength">The length of the range.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.ReadBuffer(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Reads a range from the buffer.
            </summary>
            <param name="intIndex">The index of the range.</param>
            <param name="intLength">The length of the range.</param>
            <param name="blnPeek">if set to <c>true</c> [BLN peek].</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.GetBufferState(System.Int32,System.Int32)">
            <summary>
            Gets buffer state for a givven index.
            </summary>
            <param name="intIndex">The index to check relative to the buffer state.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.PeekAtOffset(System.Int32)">
            <summary>
            Peeks at offset.
            </summary>
            <param name="intOffset">The int offset.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.PeekString(System.Int32)">
            <summary>
            Peeks the string.
            </summary>
            <param name="intLength"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.PeekString(System.Int32,System.Int32)">
            <summary>
            Peeks the string.
            </summary>
            <param name="intOffset">The position offset.</param>
            <param name="intLength"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.GetIndexFromOffset(System.Int32)">
            <summary>
            Gets the index from an offset.
            </summary>
            <param name="intOffset">The offset.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.Read">
            <summary>
            Reads the next token.
            </summary>
            <returns>Returns the current token or null if reached the end.</returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.Read(System.Int32)">
            <summary>
            Read and increment position
            </summary>
            <param name="intLength"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.ReadToken">
            <summary>
            Reads the token.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.mintGenericTokenStart">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.ReadGenericToken">
            <summary>
            Reads the generic token.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.PeekStringFromIndex(System.Int32,System.Int32)">
            <summary>
            Peeks a string from a givven index
            </summary>
            <param name="intIndex"></param>
            <param name="intLength"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.ReadWhitespaceToken">
            <summary>
            Reads the whitespace token.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.IsWhitespace(System.Char)">
            <summary>
            Indicates if the charecter is a whitespace
            </summary>
            <param name="chrValue"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.IsWhitespace(System.Char,System.Boolean)">
            <summary>
            Indicates if the charecter is a whitespace
            </summary>
            <param name="chrValue"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.IsEndOfLine(System.Char)">
            <summary>
            Is end of line
            </summary>
            <param name="chrValue"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.IsEndOfFileOffset(System.Int32)">
            <summary>
            If is end of file offset
            </summary>
            <param name="intOffset"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.IsStartSkinPlaceholder">
            <summary>
            Is start skin place holder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.IsStartSkinPlaceholder(System.Int32)">
            <summary>
            Is start skin place holder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.IsEndSkinPlaceholder(System.Int32)">
            <summary>
            Is end skin place holder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.ReadSkinPlaceholder">
            <summary>
            Reads the skin placeholder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.Dump(System.String)">
            <summary>
            Dumps to file.
            </summary>
            <param name="strPath">The dump file path.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.Dump(System.IO.Stream)">
            <summary>
            Dumps a test tokenized content
            </summary>
            <param name="objOutputStream">The obj output stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.Dump(System.IO.StreamWriter,Gizmox.WebGUI.Common.Tokens.TokenReader)">
            <summary>
            Dumps a test tokenized content
            </summary>
            <param name="objWriter">The writer.</param>
            <param name="objTokenReader">The token reader.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenReader.Dump(System.IO.StreamWriter,Gizmox.WebGUI.Common.Tokens.Token)">
            <summary>
            Dumps a test tokenized content
            </summary>
            <param name="objWriter">The writer.</param>
            <param name="objToken">The token.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.TokenReader.CurrentContext">
            <summary>
            Gets the current context.
            </summary>
            <value>The current context.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.TokenReader.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.TokenReader.EndOfFile">
            <summary>
            Gets a value indicating whether reached end of file.
            </summary>
            <value><c>true</c> if reached end of file; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.TokenReader.BeginingOfFile">
            <summary>
            Gets a value indicating whether at the begining of the file.
            </summary>
            <value><c>true</c> if at the begining of the file; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.TokenReader.CurrentCharecter">
            <summary>
            Gets the current charecter.
            </summary>
            <value>The current charecter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.TokenReader.NextCharecter">
            <summary>
            Gets the next charecter.
            </summary>
            <value>The next charecter.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Tokens.TokenReader.BufferIndexState">
            <summary>
            The state of the buffer compared to a givven index
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.BufferIndexState.Advanced">
            <summary>
            The buffer has passed the index tested
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.BufferIndexState.Valid">
            <summary>
            The buffer contains this index tested
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenReader.BufferIndexState.Short">
            <summary>
            The buffer is to short to contain the index tested
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.mblnIsTagName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.mblnIsInOpenTag">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.mblnIsInCloseTag">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.mblnIsAttributeValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.mstrLastAttributeName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader"/> class.
            </summary>
            <param name="objTokenContext"></param>
            <param name="objSource">The source.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.ReadToken">
            <summary>
            Reads the token.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.ReadAttributeValueToken(System.String,System.String)">
            <summary>
            Reads the attribute value token.
            </summary>
            <param name="chrCurrent">The current.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.ReadTagContentToken(System.String,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Reads the tag content token.
            </summary>
            <param name="strTagContent">The tag content.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.ReadTagContent">
            <summary>
            Reads the content of the tag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenReader.ReadAttributeValue(System.Char)">
            <summary>
            Reads the attribute value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xslt.XsltTokenReader.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Xslt.XsltTokenReader"/> class.
            </summary>
            <param name="objTokenContext"></param>
            <param name="objSource">The source.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Tokens.Token">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Token.mstrType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Token.mstrContent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Token.mintIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Token.mintLength">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Token.mobjContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Token.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Token"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Token.Type">
            <summary>
            Gets the token type.
            </summary>
            <value>The token type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Token.Content">
            <summary>
            Gets the token content.
            </summary>
            <value>The token content.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Token.Index">
            <summary>
            Gets or sets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Token.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Token.Context">
            <summary>
            Gets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Token.SubTokens">
            <summary>
            Gets the sub tokens.
            </summary>
            <value>The sub tokens.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Token.HasSubTokens">
            <summary>
            Gets a value indicating whether this instance has sub tokens.
            </summary>
            <value>
            	<c>true</c> if this instance has sub tokens; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Css.CssValueToken.mobjTokenReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssValueToken.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Css.CssValueToken"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Css.CssValueToken.SubTokens">
            <summary>
            Gets the sub tokens.
            </summary>
            <value>The sub tokens.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Css.CssToken.mobjCssTokenReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssToken.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Css.CssToken"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Css.CssToken.SubTokens">
            <summary>
            Gets the sub tokens.
            </summary>
            <value>The sub tokens.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.ScriptCollector">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.TextFileCollector">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.FileCollector">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector.mstrCollectorName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector.mobjGlobalScope">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector.Write(System.IO.Stream,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the resources to output stream.
            </summary>
            <param name="objOutputStream">The file stream.</param>
            <param name="objController">The current controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector.Write(System.Web.HttpResponse,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the resources to response.
            </summary>
            <param name="objResponse">The current response.</param>
            <param name="objController">The current controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector.WriteContent(System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the content.
            </summary>
            <param name="objStreamWriter">The stream writer.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector.WriteStart(System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Performs writing on starting collector serialization
            </summary>
            <param name="objStreamWriter">The obj stream writer.</param>
            <param name="objController">The obj controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector.WriteEnd(System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Performs writing on ending collector serialization
            </summary>
            <param name="objStreamWriter">The obj stream writer.</param>
            <param name="objController">The obj controller.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollector.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.FileCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.TextFileCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileCollector.WriteResourceContent(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource,System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the content of the resource.
            </summary>
            <param name="objScope">The scope.</param>
            <param name="objTextFileResource">The file resource.</param>
            <param name="objStreamWriter">The stream writer.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ScriptCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.ScriptCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ISessionRegistry">
            <summary>
            Summary description for ISessionRegistry.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ISessionRegistry.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ISessionRegistry.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Client.Design.IContextServices">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.GetWinObject(System.Object)">
             <summary>
            
             </summary>
             <param name="objWebObject"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.GetWebObject(System.Object)">
             <summary>
            
             </summary>
             <param name="objWinObject"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.RegisterController(Gizmox.WebGUI.Client.Design.IClientObjectController)">
             <summary>
            
             </summary>
             <param name="objController"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.UnregisterController(Gizmox.WebGUI.Client.Design.IClientObjectController)">
             <summary>
            
             </summary>
             <param name="objController"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.GetControllerByWebObject(System.Object)">
             <summary>
            
             </summary>
             <param name="objWebObject"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.GetControllerByWinObject(System.Object)">
             <summary>
            
             </summary>
             <param name="objWinObject"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.CreateControllerByWinObject(System.Object)">
             <summary>
            
             </summary>
             <param name="objWinObject"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.CreateControllerByWebObject(System.Object)">
             <summary>
            
             </summary>
             <param name="objWebObject"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.UnregisterControllerByWebObject(System.Object)">
             <summary>
            
             </summary>
             <param name="objWebObject"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.UnregisterControllerByWinObject(System.Object)">
             <summary>
            
             </summary>
             <param name="objWinObject"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IContextServices.RefreshDesigner">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.RegisteredClientAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.RegisteredClientAction.mobjTarget">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.RegisteredClientAction.mstrMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.RegisteredClientAction.mstrArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.RegisteredClientAction.mblnWithId">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredClientAction.#ctor(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.Boolean,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.RegisteredClientAction"/> class.
            </summary>
            <param name="objTarget">The target.</param>
            <param name="blnWithId">The first argument will be the id of the target.</param>
            <param name="strMethod">The method.</param>
            <param name="strArgs">The arguments.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredClientAction.Create(System.String,System.String[])">
            <summary>
            Creates the specified STR method.
            </summary>
            <param name="strMethod">The STR method.</param>
            <param name="strArgs">The STR args.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredClientAction.Create(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.String,System.String[])">
            <summary>
            Creates the specified obj target.
            </summary>
            <param name="objTarget">The obj target.</param>
            <param name="strMethod">The STR method.</param>
            <param name="strArgs">The STR args.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredClientAction.CreateWithId(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.String,System.String[])">
            <summary>
            Creates the RegisteredClientAction with id.
            </summary>
            <param name="objTarget">The obj target.</param>
            <param name="strMethod">The STR method.</param>
            <param name="strArgs">The STR args.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredClientAction.RenderAttributes(Gizmox.WebGUI.Common.Interfaces.IContextMethodInvoker,Gizmox.WebGUI.Common.Interfaces.IAttributeWriter)">
            <summary>
            Renders the attributes.
            </summary>
            <param name="objMethodInvoker">The context method invoker service.</param>
            <param name="objWriter">The attribute writer.</param>      
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredClientAction.Target">
            <summary>
            Gets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredClientAction.WithId">
            <summary>
            Gets a value indicating whether first argument is the target id.
            </summary>
            <value><c>true</c> if first argument is the target id; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredClientAction.Method">
            <summary>
            Gets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredClientAction.Arguments">
            <summary>
            Gets the arguments.
            </summary>
            <value>The arguments.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Exceptions.LogonException">
            <summary>
            Summary description for LogonException.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Exceptions.LogonException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Exceptions.LogonException"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Exceptions.LogonException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Exceptions.LogonException"/> class.
            </summary>
            <param name="strMessage">The STR message.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Exceptions.LogonException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Exceptions.LogonException"/> class.
            </summary>
            <param name="strMessage">The STR message.</param>
            <param name="objInnerException">The obj inner exception.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Exceptions.LogonException.IsLogonException(System.Exception)">
            <summary>
            Determines whether [is logon exception] [the specified obj exception].
            </summary>
            <param name="objException">The obj exception.</param>
            <returns>
            	<c>true</c> if [is logon exception] [the specified obj exception]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind">
            <summary>Specifies the data types to use when storing values in the registry, or identifies the data type of a value in the registry.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind.Binary">
            <summary>Specifies binary data in any form. This value is equivalent to the Win32 API registry data type REG_BINARY.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind.DWord">
            <summary>Specifies a 32-bit binary number. This value is equivalent to the Win32 API registry data type REG_DWORD.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind.ExpandString">
            <summary>Specifies a null-terminated string that contains unexpanded references to environment variables, such as %PATH%, that are expanded when the value is retrieved. This value is equivalent to the Win32 API registry data type REG_EXPAND_SZ.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind.MultiString">
            <summary>Specifies an array of null-terminated strings, terminated by two null characters. This value is equivalent to the Win32 API registry data type REG_MULTI_SZ.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind.QWord">
            <summary>Specifies a 64-bit binary number. This value is equivalent to the Win32 API registry data type REG_QWORD.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind.String">
            <summary>Specifies a null-terminated string. This value is equivalent to the Win32 API registry data type REG_SZ.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind.Unknown">
            <summary>Indicates an unsupported registry data type. For example, the Microsoft Win32 API registry data type REG_RESOURCE_LIST is unsupported. Use this value to specify that the <see cref="M:Gizmox.WebGUI.Virtualization.Win32.RegistryKey.SetValue(System.String,System.Object)"></see> method should determine the appropriate registry data type when storing a name/value pair.</summary>
        </member>
        <member name="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueOptions">
            <summary>Specifies optional behavior when retrieving name/value pairs from a registry key.</summary>
        </member>
        <member name="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKeyPermissionCheck">
            <summary>Specifies whether security checks are performed when opening registry keys and accessing their name/value pairs.</summary>
        </member>
        <member name="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive">
            <summary>Represents the possible values for a top-level node on a foreign machine.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive.ClassesRoot">
            <summary>Represents the HKEY_CLASSES_ROOT base key on another computer. This value can be passed to the <see cref="M:Gizmox.WebGUI.Virtualization.Win32.RegistryKey.OpenRemoteBaseKey(Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive,System.String)"></see> method, to open this node remotely.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive.CurrentConfig">
            <summary>Represents the HKEY_CURRENT_CONFIG base key on another computer. This value can be passed to the <see cref="M:Gizmox.WebGUI.Virtualization.Win32.RegistryKey.OpenRemoteBaseKey(Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive,System.String)"></see> method, to open this node remotely.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive.CurrentUser">
            <summary>Represents the HKEY_CURRENT_USER base key on another computer. This value can be passed to the <see cref="M:Gizmox.WebGUI.Virtualization.Win32.RegistryKey.OpenRemoteBaseKey(Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive,System.String)"></see> method, to open this node remotely.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive.DynData">
            <summary>Represents the HKEY_DYN_DATA base key on another computer. This value can be passed to the <see cref="M:Gizmox.WebGUI.Virtualization.Win32.RegistryKey.OpenRemoteBaseKey(Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive,System.String)"></see> method, to open this node remotely.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive.LocalMachine">
            <summary>Represents the HKEY_LOCAL_MACHINE base key on another computer. This value can be passed to the <see cref="M:Gizmox.WebGUI.Virtualization.Win32.RegistryKey.OpenRemoteBaseKey(Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive,System.String)"></see> method, to open this node remotely.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive.PerformanceData">
            <summary>Represents the HKEY_PERFORMANCE_DATA base key on another computer. This value can be passed to the <see cref="M:Gizmox.WebGUI.Virtualization.Win32.RegistryKey.OpenRemoteBaseKey(Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive,System.String)"></see> method, to open this node remotely.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive.Users">
            <summary>Represents the HKEY_USERS base key on another computer. This value can be passed to the <see cref="M:Gizmox.WebGUI.Virtualization.Win32.RegistryKey.OpenRemoteBaseKey(Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive,System.String)"></see> method, to open this node remotely.</summary>
        </member>
        <member name="T:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory">
            <summary>Exposes static methods for creating, moving, and enumerating through directories and subdirectories. This class cannot be inherited.</summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.CreateDirectory(System.String)">
            <summary>Creates all directories and subdirectories as specified by path.</summary>
            <returns>A <see cref="T:System.IO.VirtualDirectoryInfo"></see> as specified by path.</returns>
            <param name="path">The directory path to create. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The directory specified by path is read-only or is not empty.-or-A file with the same name and location specified by path exists. </exception>
            <exception cref="T:System.NotSupportedException">An attempt was made to create a directory with only the colon character (:). </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
            <summary>Creates all the directories in the specified path, applying the specified Windows security.</summary>
            <returns>A <see cref="T:System.IO.VirtualDirectoryInfo"></see> object representing the newly created directory.</returns>
            <param name="directorySecurity">The access control to apply to the directory.</param>
            <param name="path">The directory to create.</param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The directory specified by path is read-only or is not empty. -or-A file with the same name and location specified by path exists.-or-The directory is the application's current working directory.</exception>
            <exception cref="T:System.NotSupportedException">An attempt was made to create a directory using only the colon  character (:). </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.Delete(System.String)">
            <summary>Deletes an empty directory from a specified path.</summary>
            <param name="path">The name of the empty directory to remove. This directory must be writable or empty. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.VirtualIOException">A file with the same name and location specifiedby path exists.-or-The directory is the application's current working directory.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.Delete(System.String,System.Boolean)">
            <summary>Deletes the specified directory and, if indicated, any subdirectories in the directory.</summary>
            <param name="recursive">true to remove directories, subdirectories, and files in path; otherwise, false. </param>
            <param name="path">The name of the directory to remove. </param>
            <exception cref="T:System.IO.VirtualIOException">A file with the same name and location specifiedby path exists.-or-The directory specified by path is read-only, or recursive is false and path is not an empty directory.-or-The directory is the application's current working directory. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.Exists(System.String)">
            <summary>Determines whether the given path refers to an existing directory on disk.</summary>
            <returns>true if path refers to an existing directory; otherwise, false.</returns>
            <param name="path">The path to test. </param>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetAccessControl(System.String)">
            <summary>Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that encapsulates the access control list (ACL) entries for a specified directory.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that encapsulates the access control rules for the file described by the path parameter.</returns>
            <param name="path">The path to a directory containing a <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that describes the file's access control list (ACL) information.</param>
            <exception cref="T:System.UnauthorizedAccessException">The path parameter specified a directory that is read-only.-or- This operation is not supported on the current platform.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows 2000 or later.</exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the directory.</exception>
            <exception cref="T:System.SystemException">The directory could not be found.</exception>
            <exception cref="T:System.ArgumentNullException">The path parameter is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that encapsulates the specified type of access control list (ACL) entries for a specified directory.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that encapsulates the access control rules for the file described by the path parameter.</returns>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections"></see> values that specifies the type of access control list (ACL) information to receive.</param>
            <param name="path">The path to a directory containing a <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that describes the file's access control list (ACL) information.</param>
            <exception cref="T:System.UnauthorizedAccessException">The path parameter specified a directory that is read-only.-or- This operation is not supported on the current platform.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows 2000 or later.</exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the directory.</exception>
            <exception cref="T:System.SystemException">The directory could not be found.</exception>
            <exception cref="T:System.ArgumentNullException">The path parameter is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetCreationTime(System.String)">
            <summary>Gets the creation date and time of a directory.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the creation date and time for the specified directory. This value is expressed in local time.</returns>
            <param name="path">The path of the directory. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The specified path was not found. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetCreationTimeUtc(System.String)">
            <summary>Gets the creation date and time, in Coordinated Universal Time (UTC) format, of a directory.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the creation date and time for the specified directory. This value is expressed in UTC time.</returns>
            <param name="path">The path of the directory. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The specified path was not found. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetCurrentDirectory">
            <summary>Gets the current working directory of the application.</summary>
            <returns>A string containing the path of the current working directory.</returns>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">The operating system is Windows CE, which does not have current directory functionality.This method is available in the .NET Compact Framework, but is not currently supported.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetDirectories(System.String)">
            <summary>Gets the names of subdirectories in the specified directory.</summary>
            <returns>An array of type String containing the names of subdirectories in path.</returns>
            <param name="path">The path for which an array of subdirectory names is returned. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">path is a file name. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetDirectories(System.String,System.String)">
            <summary>Gets an array of directories matching the specified search pattern from the current directory.</summary>
            <returns>A String array of directories matching the search pattern.</returns>
            <param name="path">The path to search. </param>
            <param name="searchPattern">The search string to match against the names of files in path. The parameter cannot end in two periods ("..") or contain two periods ("..") followed by <see cref="F:System.IO.Path.DirectorySeparatorChar"></see> or <see cref="F:System.IO.Path.AltDirectorySeparatorChar"></see>, nor can it contain any of the characters in <see cref="F:System.IO.Path.InvalidPathChars"></see>. </param>
            <exception cref="T:System.ArgumentNullException">path or searchPattern is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">path is a file name. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>.-or- searchPattern does not contain a valid pattern. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
            <summary>Gets an array of directories matching the specified search pattern from the current directory, using a value to determine whether to search subdirectories.</summary>
            <returns>A String array of directories matching the search pattern.</returns>
            <param name="searchOption">One of the <see cref="T:System.IO.SearchOption"></see> values that specifies whether the search operation should include all subdirectories or only the current directory.</param>
            <param name="path">The path to search. </param>
            <param name="searchPattern">The search string to match against the names of files in path. The parameter cannot end in two periods ("..") or contain two periods ("..") followed by <see cref="F:System.IO.Path.DirectorySeparatorChar"></see> or <see cref="F:System.IO.Path.AltDirectorySeparatorChar"></see>, nor can it contain any of the characters in <see cref="F:System.IO.Path.InvalidPathChars"></see>. </param>
            <exception cref="T:System.ArgumentNullException">path or searchPattern is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">path is a file name. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>.-or- searchPattern does not contain a valid pattern. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetDirectoryRoot(System.String)">
            <summary>Returns the volume information, root information, or both for the specified path.</summary>
            <returns>A string containing the volume information, root information, or both for the specified path.</returns>
            <param name="path">The path of a file or directory. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetFiles(System.String)">
            <summary>Returns the names of files in the specified directory.</summary>
            <returns>A String array of file names in the specified directory. VirtualFile names include the full path.</returns>
            <param name="path">The directory from which to retrieve the files. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">path is a file name. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetFiles(System.String,System.String)">
            <summary>Returns the names of files in the specified directory that match the specified search pattern.</summary>
            <returns>A String array containing the names of files in the specified directory that match the specified search pattern. VirtualFile names include the full path.</returns>
            <param name="path">The directory to search. </param>
            <param name="searchPattern">The search string to match against the names of files in path. The parameter cannot end in two periods ("..") or contain two periods ("..") followed by <see cref="F:System.IO.Path.DirectorySeparatorChar"></see> or <see cref="F:System.IO.Path.AltDirectorySeparatorChar"></see>, nor can it contain any of the characters in <see cref="F:System.IO.Path.InvalidPathChars"></see>. </param>
            <exception cref="T:System.ArgumentNullException">path or searchPattern is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>.-or- searchPattern does not contain a valid pattern. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>Returns the names of files in the specified directory that match the specified search pattern, using a value to determine whether to search subdirectories.</summary>
            <returns>A String array containing the names of files in the specified directory that match the specified search pattern. VirtualFile names include the full path.</returns>
            <param name="searchOption">One of the <see cref="T:System.IO.SearchOption"></see> values that specifies whether the search operation should include all subdirectories or only the current directory.</param>
            <param name="path">The directory to search. </param>
            <param name="searchPattern">The search string to match against the names of files in path. The parameter cannot end in two periods ("..") or contain two periods ("..") followed by <see cref="F:System.IO.Path.DirectorySeparatorChar"></see> or <see cref="F:System.IO.Path.AltDirectorySeparatorChar"></see>, nor can it contain any of the characters in <see cref="F:System.IO.Path.InvalidPathChars"></see>. </param>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">path or searchpattern is null.</exception>
            <exception cref="T:System.IO.VirtualIOException">path is a file name. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. -or- searchPattern does not contain a valid pattern.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetFileSystemEntries(System.String)">
            <summary>Returns the names of all files and subdirectories in the specified directory.</summary>
            <returns>A String array containing the names of file system entries in the specified directory.</returns>
            <param name="path">The directory for which file and subdirectory names are returned. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">path is a file name. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetFileSystemEntries(System.String,System.String)">
            <summary>Returns an array of file system entries matching the specified search criteria.</summary>
            <returns>A String array of file system entries matching the search criteria.</returns>
            <param name="path">The path to be searched. </param>
            <param name="searchPattern">The search string to match against the names of files in path. The searchPattern parameter cannot end in two periods ("..") or contain two periods ("..") followed by <see cref="F:System.IO.Path.DirectorySeparatorChar"></see> or <see cref="F:System.IO.Path.AltDirectorySeparatorChar"></see>, nor can it contain any of the characters in <see cref="F:System.IO.Path.InvalidPathChars"></see>. </param>
            <exception cref="T:System.ArgumentNullException">path or searchPattern is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">path is a file name. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>.-or- searchPattern does not contain a valid pattern. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetLastAccessTime(System.String)">
            <summary>Returns the date and time the specified file or directory was last accessed.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the date and time the specified file or directory was last accessed. This value is expressed in local time.</returns>
            <param name="path">The file or directory for which to obtain access date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The specified path was not found. </exception>
            <exception cref="T:System.NotSupportedException">The path parameter is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetLastAccessTimeUtc(System.String)">
            <summary>Returns the date and time, in Coordinated Universal Time (UTC) format, that the specified file or directory was last accessed.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the date and time the specified file or directory was last accessed. This value is expressed in UTC time.</returns>
            <param name="path">The file or directory for which to obtain access date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The specified path was not found. </exception>
            <exception cref="T:System.NotSupportedException">The path parameter is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetLastWriteTime(System.String)">
            <summary>Returns the date and time the specified file or directory was last written to.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the date and time the specified file or directory was last written to. This value is expressed in local time.</returns>
            <param name="path">The file or directory for which to obtain modification date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The specified path was not found. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetLastWriteTimeUtc(System.String)">
            <summary>Returns the date and time, in Coordinated Universal Time (UTC) format, that the specified file or directory was last written to.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the date and time the specified file or directory was last written to. This value is expressed in UTC time.</returns>
            <param name="path">The file or directory for which to obtain modification date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The specified path was not found. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetLogicalDrives">
            <summary>Retrieves the names of the logical drives on this computer in the form "&lt;drive letter&gt;:\".</summary>
            <returns>The logical drives on this computer.</returns>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occured (for example, a disk error). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.GetParent(System.String)">
            <summary>Retrieves the parent directory of the specified path, including both absolute and relative paths.</summary>
            <returns>The parent directory, or null if path is the root directory, including the root of a UNC server or share name.</returns>
            <param name="path">The path for which to retrieve the parent directory. </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path was not found. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.VirtualIOException">The directory specified by path is read-only. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.Move(System.String,System.String)">
            <summary>Moves a file or a directory and its contents to a new location.</summary>
            <param name="sourceDirName">The path of the file or directory to move. </param>
            <param name="destDirName">The path to the new location for sourceDirName. </param>
            <exception cref="T:System.ArgumentException">sourceDirName or destDirName is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.VirtualIOException">An attempt was made to move a directory to a different volume. -or- destDirName already exists. -or- The sourceDirName and destDirName parameters refer to the same file or directory. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">sourceDirName or destDirName is null. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path specified by sourceDirName is invalid (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
            <summary>Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object to the specified directory.</summary>
            <param name="directorySecurity">A <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that describes an ACL entry to apply to the directory described by the path parameter.</param>
            <param name="path">A directory to add or remove access control list (ACL) entries from.</param>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows 2000 or later.</exception>
            <exception cref="T:System.ArgumentException">The path was invalid.</exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The directory could not be found.</exception>
            <exception cref="T:System.ArgumentNullException">The directorySecurity parameter is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current process does not have access to open the file.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.SetCreationTime(System.String,System.DateTime)">
            <summary>Sets the creation date and time for the specified file or directory.</summary>
            <param name="creationTime">A <see cref="T:System.DateTime"></see> containing the value to set for the creation date and time of path. This value is expressed in local time. </param>
            <param name="path">The file or directory for which to set the creation date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">creationTime specifies a value outside the range of dates or times permitted for this operation. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.SetCreationTimeUtc(System.String,System.DateTime)">
            <summary>Sets the creation date and time, in Coordinated Universal Time (UTC) format, for the specified file or directory.</summary>
            <param name="creationTimeUtc">A <see cref="T:System.DateTime"></see> containing the value to set for the creation date and time of path. This value is expressed in UTC time. </param>
            <param name="path">The file or directory for which to set the creation date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">creationTime specifies a value outside the range of dates or times permitted for this operation. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.SetCurrentDirectory(System.String)">
            <summary>Sets the application's current working directory to the specified directory.</summary>
            <param name="path">The path to which the current working directory is set. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.IO.VirtualIOException">An IO error occurred. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission to access unmanaged code. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.SetLastAccessTime(System.String,System.DateTime)">
            <summary>Sets the date and time the specified file or directory was last accessed.</summary>
            <param name="lastAccessTime">A <see cref="T:System.DateTime"></see> containing the value to set for the access date and time of path. This value is expressed in local time. </param>
            <param name="path">The file or directory for which to set the access date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.SetLastAccessTimeUtc(System.String,System.DateTime)">
            <summary>Sets the date and time, in Coordinated Universal Time (UTC) format, that the specified file or directory was last accessed.</summary>
            <param name="lastAccessTimeUtc">A <see cref="T:System.DateTime"></see> containing the value to set for the access date and time of path. This value is expressed in UTC time. </param>
            <param name="path">The file or directory for which to set the access date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.SetLastWriteTime(System.String,System.DateTime)">
            <summary>Sets the date and time a directory was last written to.</summary>
            <param name="lastWriteTime">The date and time the directory was last written to. This value is expressed in local time. </param>
            <param name="path">The path of the directory. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectory.SetLastWriteTimeUtc(System.String,System.DateTime)">
            <summary>Sets the date and time, in Coordinated Universal Time (UTC) format, that a directory was last written to.</summary>
            <param name="lastWriteTimeUtc">The date and time the directory was last written to. This value is expressed in UTC time. </param>
            <param name="path">The path of the directory. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualNode.#ctor(System.Guid,System.String,System.Guid,System.Guid,System.Guid,System.DateTime,System.String,System.DateTime,System.String,System.Guid,System.String,System.Int32,System.Boolean,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualNode"/> class.
            </summary>
            <param name="objId"></param>
            <param name="strName"></param>
            <param name="objParentId"></param>
            <param name="objType"></param>
            <param name="objForest"></param>
            <param name="objCreatedOn"></param>
            <param name="strCreatedBy"></param>
            <param name="objUpdatedOn"></param>
            <param name="strUpdatedBy"></param>
            <param name="objDataId"></param>
            <param name="strDataValue"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.ForestId">
            <summary>
            Gets the forest id.
            </summary>
            <value>The forest id.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.ParentId">
            <summary>
            Gets the parent id.
            </summary>
            <value>The parent id.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.CreatedOn">
            <summary>
            Gets the created on.
            </summary>
            <value>The created on.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.CreatedBy">
            <summary>
            Gets the created by.
            </summary>
            <value>The created by.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.UpdatedOn">
            <summary>
            Gets the updated on.
            </summary>
            <value>The updated on.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.UpdatedBy">
            <summary>
            Gets the updated by.
            </summary>
            <value>The updated by.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.DataId">
            <summary>
            Gets the data id.
            </summary>
            <value>The data id.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.DataValue">
            <summary>
            Gets the data value.
            </summary>
            <value>The data value.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.ContentLegth">
            <summary>
            Gets the content legth.
            </summary>
            <value>The content legth.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualNode.Reference">
            <summary>
            Gets the reference.
            </summary>
            <value>The reference.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Virtualization.VirtualizationProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualizationProvider"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Create(Gizmox.WebGUI.Virtualization.VirtualReference,System.String,System.Guid,System.Int64)">
            <summary>
            Creates the specified obj virtual reference.
            </summary>
            <param name="objVirtualReference">The virtual reference.</param>
            <param name="strName">The virtual node name.</param>
            <param name="objType">The virtual node type.</param>
            <param name="lngAttributes">The DBL attributes.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Create(Gizmox.WebGUI.Virtualization.VirtualReference,System.String,System.Guid)">
            <summary>
            Creates the specified obj virtual reference.
            </summary>
            <param name="objVirtualReference">The obj virtual reference.</param>
            <param name="strName">Name of the STR.</param>
            <param name="objType">Type of the obj.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Create(Gizmox.WebGUI.Virtualization.VirtualReference,System.String,System.Guid,System.Int64,System.Guid,System.String,System.Byte[])">
            <summary>
            Creates a virtual node under a specific parent
            </summary>
            <param name="objVirtualReference">The obj virtual reference.</param>
            <param name="strName">Name of the STR.</param>
            <param name="objType">Type of the obj.</param>
            <param name="lngAttributes">The DBL attributes.</param>
            <param name="objDataId">The obj data id.</param>
            <param name="strDataValue">The STR data value.</param>
            <param name="arrDataContent">Content of the arr data.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Create(Gizmox.WebGUI.Virtualization.VirtualReference,System.String,System.Guid,System.Guid,System.String,System.Byte[])">
            <summary>
            Creates the specified obj virtual reference.
            </summary>
            <param name="objVirtualReference">The obj virtual reference.</param>
            <param name="strName">Name of the STR.</param>
            <param name="objType">Type of the obj.</param>
            <param name="objDataId">The obj data id.</param>
            <param name="strDataValue">The STR data value.</param>
            <param name="arrDataContent">Content of the arr data.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Delete(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Deletes a specific virtual node
            </summary>
            <param name="objVirtualReference"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Delete(Gizmox.WebGUI.Virtualization.VirtualReference,System.Boolean)">
            <summary>
            Deletes a specific virtual node
            </summary>
            <param name="objNode"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Update(Gizmox.WebGUI.Virtualization.VirtualReference,System.String)">
            <summary>
            Updates the name of a specific virtual node
            </summary>
            <param name="objNode"></param>
            <param name="strNewName"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Update(Gizmox.WebGUI.Virtualization.VirtualReference,System.Int64)">
            <summary>
            Updates the specified virtual reference.
            </summary>
            <param name="objVirtualReference">The virtual reference.</param>
            <param name="lngAttributes">The attributes.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Update(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.String,System.Byte[])">
            <summary>
            Updates the data of a specific virtual node
            </summary>
            <param name="objNode"></param>
            <param name="objDataId"></param>
            <param name="strDataValue"></param>
            <param name="arrDataContent"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Update(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.String,System.IO.Stream)">
            <summary>
            Updates the specified virtual reference.
            </summary>
            <param name="objVirtualReference">The virtual reference.</param>
            <param name="objDataId">The data id.</param>
            <param name="strDataValue">The data value.</param>
            <param name="objContentStream">The content stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Read(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Reads the a specific virtual node under a path or at the end of a path
            </summary>
            <param name="objForest"></param>
            <param name="objParent"></param>
            <param name="strPath"></param>
            <param name="objPathType"></param>
            <param name="strNodeName"></param>
            <param name="objNodeType"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Copy(Gizmox.WebGUI.Virtualization.VirtualReference,Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Copies the specified source reference to the target reference.
            </summary>
            <param name="objSourceReference">The source reference.</param>
            <param name="objTargetReference">The target reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Move(Gizmox.WebGUI.Virtualization.VirtualReference,Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Moves the specified source reference to the target reference.
            </summary>
            <param name="objSourceReference">The source reference.</param>
            <param name="objTargetReference">The target reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.ReadParent(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Reads the parent.
            </summary>
            <param name="virtualReference">The virtual reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.ReadRoot(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Reads the parent.
            </summary>
            <param name="virtualReference">The virtual reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.ReadContent(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Read the content of a specific virtual node
            </summary>
            <param name="objVirtualReference">The virtual reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.ReadPath(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Reads the path of a specific virtual node
            </summary>
            <param name="objVirtualReference">The virtual reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.ReadList(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.Guid,System.String)">
            <summary>
            Get a list of a children of a specific virtual node
            </summary>
            <param name="objParent"></param>
            <param name="objTypeA"></param>
            <param name="objTypeB"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.ReadList(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.Guid)">
            <summary>
            Get a list of a children of a specific virtual node
            </summary>
            <param name="objParent"></param>
            <param name="objTypeA"></param>
            <param name="objTypeB"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.ReadNameList(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.Guid,System.String)">
            <summary>
            Get a list of a children names of a specific virtual node
            </summary>
            <param name="objVirtualReference">The obj virtual reference.</param>
            <param name="objTypeFilterA">The obj type filter A.</param>
            <param name="objTypeFilterB">The obj type filter B.</param>
            <param name="strSearchPattern">The search pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.ReadNameList(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.Guid)">
            <summary>
            Get a list of a children names of a specific virtual node
            </summary>
            <param name="objParent"></param>
            <param name="objTypeA"></param>
            <param name="objTypeB"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.GetListCount(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.Guid)">
            <summary>
            Gets a children count of a specific cirtual node
            </summary>
            <param name="objVirtualReference"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.CreateEmptyContent">
            <summary>
            Creates a writable empty content stream.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualizationProvider.Current">
            <summary>
            Gets the current.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.mobjDbFactory">
            <summary>
            The Db provider factory
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.mstrConnectionString">
            <summary>
            The Db connection string
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.CreateConnection">
            <summary>
            Creates a connection to the data base
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.AddParameter(System.Data.IDbCommand,System.String,System.Object)">
            <summary>
            Adds a parameter to the db command
            </summary>
            <param name="objDbCommand"></param>
            <param name="strName"></param>
            <param name="objValue"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.GetVirtualNode(System.Data.IDataReader)">
            <summary>
            Creates the virtual node.
            </summary>
            <param name="objDbDataReader">The data reader.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.GetDataContentLength(System.Data.IDataReader)">
            <summary>
            Gets the length of the data content.
            </summary>
            <param name="objDbDataReader">The obj db data reader.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.Move(Gizmox.WebGUI.Virtualization.VirtualReference,Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Moves the specified source reference to the target reference.
            </summary>
            <param name="objSourceReference">The source reference.</param>
            <param name="objTargetReference">The target reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.Copy(Gizmox.WebGUI.Virtualization.VirtualReference,Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Copies the specified source reference to the target reference.
            </summary>
            <param name="objSourceReference">The source reference.</param>
            <param name="objTargetReference">The target reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.Create(Gizmox.WebGUI.Virtualization.VirtualReference,System.String,System.Guid,System.Int64,System.Guid,System.String,System.Byte[])">
            <summary>
            Creates a virtual node under a specific parent
            </summary>
            <param name="objVirtualReference">The obj virtual reference.</param>
            <param name="strName">Name of the STR.</param>
            <param name="objType">Type of the obj.</param>
            <param name="lngAttributes">The attributes.</param>
            <param name="objDataId">The obj data id.</param>
            <param name="strDataValue">The STR data value.</param>
            <param name="arrDataContent">Content of the arr data.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.Delete(Gizmox.WebGUI.Virtualization.VirtualReference,System.Boolean)">
            <summary>
            Deletes a specific virtual node
            </summary>
            <param name="objVirtualReference"></param>
            <param name="blnRecursive"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.Update(Gizmox.WebGUI.Virtualization.VirtualReference,System.String)">
            <summary>
            Updates the name of a specific virtual node
            </summary>
            <param name="objVirtualReference"></param>
            <param name="strNewName"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.Update(Gizmox.WebGUI.Virtualization.VirtualReference,System.Int64)">
            <summary>
            Updates the specified virtual reference.
            </summary>
            <param name="objVirtualReference">The virtual reference.</param>
            <param name="lngAttributes">The attributes.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.Update(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.String,System.Byte[])">
            <summary>
            Updates the data of a specific virtual node
            </summary>
            <param name="objVirtualReference"></param>
            <param name="objDataId"></param>
            <param name="strDataValue"></param>
            <param name="arrDataContent"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.CreateEmptyContent">
            <summary>
            Creates a writable empty content stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.ReadContent(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Read the content of a specific virtual node
            </summary>
            <param name="objNode"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.ReadParent(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Reads the parent.
            </summary>
            <param name="objVirtualReference">The virtual reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.ReadRoot(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Reads the root.
            </summary>
            <param name="objVirtualReference">The virtual reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.Read(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Reads the a specific virtual node under a path or at the end of a path
            </summary>
            <param name="objVirtualReference"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.NormalizeParameter(System.String)">
            <summary>
            Normalizes the parameter.
            </summary>
            <param name="strParamterValue">The paramter value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.ReadPath(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Reads the path of a specific virtual node
            </summary>
            <param name="objVirtualReference">The virtual reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.ReadList(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.Guid,System.String)">
            <summary>
            Get a list of a children of a specific virtual node
            </summary>
            <param name="objVirtualReference"></param>
            <param name="objTypeFilterA"></param>
            <param name="objTypeFilterB"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.GetListCount(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.Guid)">
            <summary>
            Gets a children count of a specific cirtual node
            </summary>
            <param name="objVirtualReference"></param>
            <param name="objTypeFilterA"></param>
            <param name="objTypeFilterB"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualizationProvider.VirtualizationDatabaseProvider.ReadNameList(Gizmox.WebGUI.Virtualization.VirtualReference,System.Guid,System.Guid,System.String)">
            <summary>
            Get a list of a children names of a specific virtual node
            </summary>
            <param name="objVirtualReference"></param>
            <param name="objTypeFilterA"></param>
            <param name="objTypeFilterB"></param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinDataStore">
            <summary>
            Provides support for storing the skin data to improve accessability to 
            skin resources.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinDataStore.mobjSkinDataCache">
            <summary>
            The skin data cache hash table
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinDataStore.mobjSkinResourceCache">
            <summary>
            Caches the skin resoruce manager 
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinDataStore.mobjSkinResourceCacheLock">
            <summary>
            Provides locking capabilities
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinDataStore.mobjSkinDataCacheLock">
            <summary>
            The skin data chache lock 
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinDataStore.mobjServiceProvider">
            <summary>
            Service provider for design time services
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinDataStore.mobjDesignedType">
            <summary>
            The current designed type
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDataStore.#ctor(System.IServiceProvider,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinDataStore"/> class in design time.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDataStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinDataStore"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDataStore.GetData(Gizmox.WebGUI.Forms.Skins.Skin)">
            <summary>
            Gets the skin data.
            </summary>
            <param name="objSkinInstance">The skin instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDataStore.GetData(Gizmox.WebGUI.Forms.Skins.Theme)">
            <summary>
            Gets the theme data.
            </summary>
            <param name="objThemeInstance">The theme instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDataStore.GetData(System.Type)">
            <summary>
            Gets the skin data.
            </summary>
            <param name="objType">The type to get skin data for.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDataStore.GetResourceContent(System.Type,System.String)">
            <summary>
            Gets the object.
            </summary>
            <param name="objSkinType">The skin type.</param>
            <param name="mstrResoruce">The resoruce.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDataStore.CreateData(System.Type)">
            <summary>
            Creates the skin data.
            </summary>
            <param name="objSkinType">The type to create skin data for.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDataStore.LoadData(System.Type,System.Collections.IEnumerable)">
            <summary>
            Loads the data.
            </summary>
            <param name="objSkinType">The skin type.</param>
            <param name="objResources">The obj resources.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDataStore.GetSkinResourceName(System.String[],System.Boolean)">
            <summary>
            Gets the name of the skin resource.
            </summary>
            <param name="arrDictionaryKey">The dictionary key.</param>
            <param name="blnIsTheme">if set to <c>true</c> then get theme resoruce name.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinAttribute">
            <summary>
            Provides a mapping from a component to it's skin
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinAttribute.mobjSkinType">
            <summary>
            The type of the Skin class
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinAttribute"/> class.
            </summary>
            <param name="strSkinType">The type of the Skin class.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinAttribute"/> class.
            </summary>
            <param name="objSkinType">The type of the Skin class.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinAttribute.ValidateType(System.Type)">
            <summary>
            Validates the skin type.
            </summary>
            <param name="objSkinType">The type of the Skin class.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinAttribute.SkinType">
            <summary>
            Gets the type of the skin.
            </summary>
            <value>The type of the skin.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.BinaryResource">
            <summary>
            Represents a skin resource file
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.FileResource">
            <summary>
            Represents a skin resource file
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource">
            <summary>
            Represents a skin resource
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.mstrComment">
            <summary>
            Holds the comment of this skin resoruce
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.menmPresentation">
            <summary>
            The presenation relation
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.menmPresentationEngine">
            <summary>
            The presentation engine relation
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.menmPresentationRole">
            <summary>
            The presentation role relation
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.SkinResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource"/> class.
            </summary>
            <param name="objResource">The obj resource.</param>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.mobjSite">
            <summary>
            The site that is used for design time hosting of this component
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.mblnIsDisposed">
            <summary>
            A flag indicating if resource has been disposed
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#IDisposable#Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
            <summary>
            Returns a collection of custom attributes for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.AttributeCollection"/> containing the attributes for this object.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <returns>
            The class name of the object, or null if the class does not have a name.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <returns>
            The name of the object, or null if the object does not have a name.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter"/> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter"/> for this object.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptor"/> that represents the default event for this object, or null if this object does not have events.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"/> that represents the default property for this object, or null if this object does not have properties.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
            <summary>
            Returns an editor of the specified type for this instance of a component.
            </summary>
            <param name="editorBaseType">A <see cref="T:System.Type"/> that represents the editor for this object.</param>
            <returns>
            An <see cref="T:System.Object"/> of the specified type that is the editor for this object, or null if the editor cannot be found.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
            <summary>
            Returns the events for this instance of a component using the specified attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter.</param>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"/> that represents the filtered events for this component instance.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Returns the events for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"/> that represents the events for this component instance.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
            <summary>
            Returns the properties for this instance of a component using the attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the filtered properties for this component instance.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Returns the properties for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the properties for this component instance.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns an object that contains the property described by the specified property descriptor.
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"/> that represents the property whose owner is to be found.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the owner of the specified property.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.GetProperties(System.ComponentModel.PropertyDescriptorCollection)">
            <summary>
            Gets the properties.
            </summary>
            <param name="objProperties">The properties.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.Type">
            <summary>
            Gets the skin resource type
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.Comment">
            <summary>
            Gets or sets the resource comment
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.PresentationRole">
            <summary>
            Gets or sets the presentation role.
            </summary>
            <value>The presentation role.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.PresentationEngine">
            <summary>
            Gets or sets the presentation engine.
            </summary>
            <value>The presentation engine.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.Presentation">
            <summary>
            Gets or sets the presentation.
            </summary>
            <value>The presentation.</value>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.Disposed">
            <summary>
            Represents the method that handles the <see cref="E:System.ComponentModel.IComponent.Disposed"/> event of a component.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.System#ComponentModel#IComponent#Site">
            <summary>
            Gets or sets the <see cref="T:System.ComponentModel.ISite"/> associated with the <see cref="T:System.ComponentModel.IComponent"/>.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.ComponentModel.ISite"/> object associated with the component; or null, if the component does not have a site.
            </returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor">
            <summary>
            Provides support for readonly resource state
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor"/> class.
            </summary>
            <param name="objProperty">The obj property.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            When overridden in a derived class, returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>
            true if resetting the component changes its value; otherwise, false.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor.GetValue(System.Object)">
            <summary>
            When overridden in a derived class, gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>
            The value of a property for a given component.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            When overridden in a derived class, resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            When overridden in a derived class, sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>
            true if the property should be persisted; otherwise, false.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor.IsReadOnly">
            <summary>
            When overridden in a derived class, gets a value indicating whether this property is read-only.
            </summary>
            <value></value>
            <returns>true if the property is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor.ComponentType">
            <summary>
            When overridden in a derived class, gets the type of the component this property is bound to.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of component this property is bound to. When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)"/> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)"/> methods are invoked, the object specified might be an instance of this type.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinResource.ReadOnlyPropertyDescriptor.PropertyType">
            <summary>
            When overridden in a derived class, gets the type of the property.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of the property.
            </returns>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.mstrFileName">
            <summary>
            Get the relative file name of the current resource
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.mstrContentType">
            <summary>
            Gets the content type of the current resource
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.mobjContent">
            <summary>
            Holds the content of the file resource
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.FileResource"/> class.
            </summary>        
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.FileResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.FileResource"/> class.
            </summary>
            <param name="objResource">The resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.Save(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.Stream)">
            <summary>
            Saves the content to the output stream.
            </summary>
            <param name="objScope">The Skin Scope.</param>
            <param name="objOutputStream">The output stream.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.Size">
            <summary>
            Gets the size of the resource for design purposes.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.FileExtension">
            <summary>
            Gets the file extension.
            </summary>
            <value>The file extension.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.NewFileExtension">
            <summary>
            Gets the new file extension.
            </summary>
            <value>The new file extension.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.FilterType">
            <summary>
            Gets the type of the filter.
            </summary>
            <value>The type of the filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.ContentStream">
            <summary>
            Gets the content stream.
            </summary>
            <value>The content stream.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.CompilerCollectorType">
            <summary>
            Gets the type of the compiler collector.
            </summary>
            <value>The type of the compiler collector.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResource.CompilerContentType">
            <summary>
            Gets the type of the content compiler.
            </summary>
            <value>The type of the content compiler.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.BinaryResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.FileResource"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.BinaryResource.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.FileResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.BinaryResource"/> class.
            </summary>
            <param name="objResource">The resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.BinaryResource.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.BinaryResource.Size">
            <summary>
            Gets the size of the resource for design purposes.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.BinaryResource.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.BinaryResource.FilterType">
            <summary>
            Gets the type of the filter.
            </summary>
            <value>The type of the filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.BinaryResource.CompilerCollectorType">
            <summary>
            Gets the type of the compiler collector.
            </summary>
            <value>The type of the compiler collector.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.BinaryResource.CompilerContentType">
            <summary>
            Gets the type of the content compiler.
            </summary>
            <value>The type of the content compiler.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.FileHandleCollection">
            <summary>
            Contains simple add only list of FileHandle
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.FileHandleCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.FileHandleCollection"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.FileHandleCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.FileHandleCollection"/> class.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> object that contains the information required to serialize the new <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/> instance.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> object that contains the source and destination of the serialized stream associated with the new <see cref="T:System.Collections.Specialized.NameObjectCollectionBase"/> instance.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.FileHandleCollection.Add(System.String,Gizmox.WebGUI.Common.Resources.FileHandle)">
            <summary>
            Add the file to the list
            </summary>
            <param name="key">Identify the file for all the other file in the list.
            must be unique</param>
            <param name="file">File to store in the list</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.FileHandleCollection.Clear">
            <summary>
            Clears all the contained files
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.FileHandleCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="key">the FileHandle's key</param>
            <returns>the FileHandle that match the key</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.FileHandleCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index">the FileHandle's index in the list</param>
            <returns>the FileHandle at the index</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.FileHandleCollection.AllKeys">
            <summary>
            Gets all the keys.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Interopability.InvokeMethodMessage">
            <summary>
            Summary description for InvokeMethodMessage.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Interopability.InvokeMethodMessage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Interopability.InvokeMethodMessage"/> class.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ITimerHandler">
            <summary>
            Summary description for ITimerHandler.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ITimerHandler.AddTimer(Gizmox.WebGUI.Common.Interfaces.ITimer)">
            <summary>
            Adds the timer.
            </summary>
            <param name="objTimer">The obj timer.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ITimerHandler.RemoveTimer(Gizmox.WebGUI.Common.Interfaces.ITimer)">
            <summary>
            Removes the timer.
            </summary>
            <param name="objTimer">The obj timer.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ITimerHandler.InvokeTimers(System.Int64)">
            <summary>
            Invoke all required timers
            </summary>
            <param name="lngCurrentTicks"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ITimerHandler.HasTimers">
            <summary>
            Gets a value indicating whether this instance has timers.
            </summary>
            <value>
            	<c>true</c> if this instance has timers; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ObservableResumeLayoutHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ObservableResumeLayoutArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.ObservableResumeLayoutArgs.mblnPerformLayout">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ObservableResumeLayoutArgs.#ctor(System.Boolean)">
            <summary>
            
            </summary>
            <param name="blnPerformLayout"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ObservableResumeLayoutArgs.PerformLayout">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IObservableLayoutItem">
            <summary>
            Intended to be used for layout objects that need to be observed
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IObservableLayoutItem.ObservableSuspendLayout">
            <summary>
            Occurs when [observable suspend layout].
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IObservableLayoutItem.ObservableResumeLayout">
            <summary>
            Occurs when [observable resume layout].
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IObservableLayoutItem.DesignSize">
            <summary>
            Gets the size of the design.
            </summary>
            <value>The size of the design.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.EncriptionHelper">
            <summary>
            Provides utility encryption helper methods
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.EncriptionHelper.mstrDESKey">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.EncriptionHelper.mstrDSAPublicKey">
            <summary>
            Public DSA key
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.EncriptionHelper.GetDSAProvider">
            <summary>
            Gets the DSA provider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.EncriptionHelper.VerifyData(System.String,System.String)">
            <summary>
            Verifies the data.
            </summary>
            <param name="strData">The STR data.</param>
            <param name="strSigniture">The STR signiture.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.EncriptionHelper.Encrypt(System.String)">
            <summary>
            Encrypts the specified data.
            </summary>
            <param name="strData">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.EncriptionHelper.Decrypt(System.String)">
            <summary>
            Decrypts the specified data.
            </summary>
            <param name="strData">The data.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.LicensingHelper">
            <summary>
            Provides utility licensing helper methods
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicensingHelper.mobjLicenseCache">
            <summary>
            The licensing cache
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Licensing.LicensingHelper"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.Validate(System.Type)">
            <summary>
            Validates the license of the givven type.
            </summary>
            <param name="objType">The type to validate it's license.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.Validate(System.Type,System.Object)">
            <summary>
            Validates the license of the givven type.
            </summary>
            <param name="objType">The type to validate it's license.</param>
            <param name="instance">The instance of the type to be licensed.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.IsLicensed(System.Type)">
            <summary>Returns whether the given type has a valid license.</summary>
            <returns>true if the given type is licensed; otherwise, false.</returns>
            <param name="type">The <see cref="T:System.Type"></see> to find a valid license for. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.IsValid(System.Type)">
            <summary>Determines whether a valid license can be granted for the specified type.</summary>
            <returns>true if a valid license can be granted; otherwise, false.</returns>
            <param name="type">A <see cref="T:System.Type"></see> that represents the type of object that requests the <see cref="T:System.ComponentModel.License"></see>. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.IsValid(System.Type,System.Object,Gizmox.WebGUI.Licensing.GenericLicense@)">
            <summary>Determines whether a valid license can be granted for the specified instance of the type. This method creates a valid <see cref="T:System.ComponentModel.License"></see>.</summary>
            <returns>true if a valid <see cref="T:System.ComponentModel.License"></see> can be granted; otherwise, false.</returns>
            <param name="type">A <see cref="T:System.Type"></see> that represents the type of object that requests the license. </param>
            <param name="license">A <see cref="T:System.ComponentModel.License"></see> that is a valid license, or null if a valid license cannot be granted. </param>
            <param name="instance">An object of the specified type or a type derived from the specified type. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.Activate(System.Type,System.String)">
            <summary>
            Activates the type using the givven license code.
            </summary>
            <param name="objType">The type which it's license should be activated.</param>
            <param name="strLicenseFile">The license file return from the activation service.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.CreateActivationCode(System.Guid,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates the activation code.
            </summary>
            <param name="objLicenseCode">The license code.</param>
            <param name="objActivationParameters">The aditional activation parameters.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.CreateActivationParams(System.Type)">
            <summary>
            Creates the activation params for the specified type.
            </summary>
            <param name="objType">Type of which the activation params should be retrieved.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.GetLicenseData(System.String)">
            <summary>
            Gets the license data.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.SerializeData(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Gets the serialized data.
            </summary>
            <param name="objSerializationData">The obj serialization data.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.DeserializeData(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Deserializes the data.
            </summary>
            <param name="strSerialzedData">The serialzed data.</param>
            <param name="objDeserializedData">The deserialized data hash.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.GetLicenseAttribute(System.Type)">
            <summary>
            Gets the name of the license.
            </summary>
            <param name="objType">The type to get it's licensing.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicensingHelper.Cache">
            <summary>
            Gets the cache.
            </summary>
            <value>The cache.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.LicensingHelper.LicenseCache">
            <summary>
            Provides a caching store for previously descovered licenses.
            The caching of a specific type can be invalidated to allow realtime activation of 
            licenses.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.LicenseCache.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Licensing.LicensingHelper.LicenseCache"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.LicenseCache.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Licensing.LicensingHelper.LicenseCache"/> class.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicensingHelper.LicenseCache.mobjLicenseCache">
            <summary>
            The license chaching container
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicensingHelper.LicenseCache.mstrLicenseCacheLock">
            <summary>
            Lock variable used to update the cache
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.LicenseCache.Contains(System.Type)">
            <summary>
            Determines whether contains the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if contains the specified type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicensingHelper.LicenseCache.InvalidateLocalLicenseByFileName(System.String)">
            <summary>
            Invalidates the  local license by file name.
            </summary>
            <param name="strFileName">The license file name.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicensingHelper.LicenseCache.Item(System.Type)">
            <summary>
            Gets or sets the <see cref="T:System.ComponentModel.License"/> with the specified obj type.
            </summary>
            <value></value>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.EnvironmentHelper">
            <summary>
            Provides utility enviroment services
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.EnvironmentHelper.FindMACAddress">
            <summary>
            Returns MAC Address from first Network Card in Computer
            </summary>
            <returns>MAC Address in string format</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.EnvironmentHelper.MachineName">
            <summary>
            Gets the name of the machine.
            </summary>
            <value>The name of the machine.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.EnvironmentHelper.MachineKey">
            <summary>
            Gets the machine key.
            </summary>
            <value>The machine key.</value>
            <remarks>When working in web runtime mode machine key should return the domain name</remarks>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.StudioHelper">
            <summary>
            Provides utility studio related services
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.StudioHelper.menmStudioVersion">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.StudioHelper.mstrStudioVersionLock">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.StudioHelper.GetStudioVersion(System.String,System.String)">
            <summary>
            Gets the studio version.
            </summary>
            <param name="strBaseDirectory">The domain base directory.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.StudioHelper.IsExpressConfigFile(System.String)">
            <summary>
            Validates the appdomain configuration file
            </summary>
            <param name="strConfigFile"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.StudioHelper.IsStudio(System.String,System.String)">
            <summary>
            Determines whether the specified STR studio key is studio.
            </summary>
            <param name="strStudioKey">The STR studio key.</param>
            <param name="strBaseDirectory">The STR base directory.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.StudioHelper.Version">
            <summary>
            Gets the studio version.
            </summary>
            <value>The studio version.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.StudioHelper.IsExpress">
            <summary>
            If running in an express studio
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.StudioHelper.IsProfesional">
            <summary>
            If running in a profesional studio
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.StudioHelper.IsUnapplicable">
            <summary>
            If not running in visual studio
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.StudioHelper.VersionNumber">
            <summary>
            Gets the studio version number.
            </summary>
            <value>The studio version number.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.StudioHelper.StudioVersion">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.StudioHelper.StudioVersion.Express8">
            <summary>
            Running in an express version
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.StudioHelper.StudioVersion.Profesional8">
            <summary>
            Running in profesional visual studio version
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.StudioHelper.StudioVersion.Invalid">
            <summary>
            Preserved for internal use of the detection algorithem
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.StudioHelper.StudioVersion.Unapplicable">
            <summary>
            Could not detect studio installtiona
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.ProjectHelper">
            <summary>
            Provides utility project related services
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsApplicationProject(System.String)">
            <summary>
            Determins if an project is an application
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsLibraryProject(System.String,System.String)">
            <summary>
            Determins if an application is a library
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.UpgradeProjectTypeGuids(System.String,System.String)">
            <summary>
            Upgrades the project type guids and returns the new ones
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.ShouldUpgradeProjectTypeGuids(System.String,System.String)">
            <summary>
            Indicates of project type guids should be upgraded
            </summary>
            <param name="strProjectTypeGuids">The project type guids</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.ShouldUpgrageProjectAt(System.String)">
            <summary>
            Indicates of project type guids should be upgraded
            </summary>
            <param name="strProjectPath">The project location.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsCommunityApplication(System.String)">
            <summary>
            If is a community application
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsProfesionalApplication(System.String)">
            <summary>
            If is a profesional application
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsCommunityLibrary(System.String)">
            <summary>
            If is a comuunity library
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsProfesionalLibrary(System.String)">
            <summary>
            If is a profesional library
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.GetProjectGuids(System.String)">
            <summary>
            Gets the project guids.
            </summary>
            <param name="strProjectPath">The project path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.GetProjectOutputType(System.String)">
            <summary>
            Gets the type of the project output.
            </summary>
            <param name="strProjectPath">The project path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.ShouldUpgradeProjectImportsInternal(System.String)">
            <summary>
            Returns a boolean if upgrade project imports is needed.
            </summary>
            <param name="strProjectPath">The project path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.UpgradeProjectTypeGuidsInternal(System.String,System.String)">
            <summary>
            Upgrades the project type guids to the licensed project type guids
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.AddProfesionalApplicationGuidInternal(System.String)">
            <summary>
            Adds the profesional application guid
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.RemoveCommunityApplicationGuidInternal(System.String)">
            <summary>
            Removes the community application guid.
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.AddCommunityApplicationGuidInternal(System.String)">
            <summary>
            Adds the community application GUID internal.
            </summary>
            <param name="strProjectTypeGuids">The STR project type guids.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.AddProfesionalLibraryInternal(System.String)">
            <summary>
            Adds the profesional library.
            </summary>
            <param name="strProjectTypeGuids">The project type guids.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.RemoveCommunityLibraryGuidInternal(System.String)">
            <summary>
            Removes the community library GUID.
            </summary>
            <param name="strProjectTypeGuids">The project type guids.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.AddCommunityLibraryGuidInternal(System.String)">
            <summary>
            Adds the community library GUID.
            </summary>
            <param name="strProjectTypeGuids">The project type guids.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.AddGuidInternal(System.String,System.String)">
            <summary>
            Adds the GUID.
            </summary>
            <param name="strProjectTypeGuids">The project type guids.</param>
            <param name="strGuidToAdd">The GUID to add.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.RemoveGuidInternal(System.String,System.String)">
            <summary>
            Removes the GUID internal.
            </summary>
            <param name="strProjectTypeGuids">The project type guids.</param>
            <param name="strGuidToRemove">The GUID to remove.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.ShouldUpgradeProjectTypeGuidsInternal(System.String,System.String)">
            <summary>
            Indicates if project reuires updating
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsApplicationProjectInternal(System.String)">
            <summary>
            Indicates if a project is an application application project
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsLibraryProjectInternal(System.String,System.String)">
            <summary>
            Indicates if a project is an application library project 
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsCommunityApplicationInternal(System.String)">
            <summary>
            If is a community application
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsProfesionalApplicationInternal(System.String)">
            <summary>
            If is a profesional application
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsCommunityLibraryInternal(System.String)">
            <summary>
            If is a comuunity library
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.IsProfesionalLibraryInternal(System.String)">
            <summary>
            If is a profesional library
            </summary>
            <param name="strProjectTypeGuids"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.GetNormalizedGuids(System.String)">
            <summary>
            Gets the normalized guids.
            </summary>
            <param name="strProjectGuids">The STR project guids.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.ProjectHelper.IsCommunityDesignLicense">
            <summary>
            If is community design time license
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.ProjectHelper.IsExpressDesignLicense">
            <summary>
            Is express design time license
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.ProjectHelper.ProjectNamespaceResolver">
            <summary>
            Provides namespace resolving for project files
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.ProjectHelper.ProjectNamespaceResolver.mstrNamespace">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.ProjectNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
            <summary>
            Gets a collection of defined prefix-namespace mappings that are currently in scope.
            </summary>
            <param name="scope">An <see cref="T:System.Xml.XmlNamespaceScope"/> value that specifies the type of namespace nodes to return.</param>
            <returns>
            An <see cref="T:System.Collections.IDictionary"/> that contains the current in-scope namespaces.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.ProjectNamespaceResolver.LookupNamespace(System.String)">
            <summary>
            Gets the namespace URI mapped to the specified prefix.
            </summary>
            <param name="prefix">The prefix whose namespace URI you wish to find.</param>
            <returns>
            The namespace URI that is mapped to the prefix; null if the prefix is not mapped to a namespace URI.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ProjectHelper.ProjectNamespaceResolver.LookupPrefix(System.String)">
            <summary>
            Gets the prefix that is mapped to the specified namespace URI.
            </summary>
            <param name="namespaceName">The namespace URI whose prefix you wish to find.</param>
            <returns>
            The prefix that is mapped to the namespace URI; null if the namespace URI is not mapped to a prefix.
            </returns>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.ServerLicenseProvider">
            <summary>
            The server license provider provides licensing services for server installations such as 
            the communication server.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.LocalLicenseProvider">
            <summary>
            Provides a base class for local storage provides (stores the licenses at 'c:\Document and Setteings\All Users\Application Data\Gizmox\Licneses')
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.LicenseProviderBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseProviderBase.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            When overridden in a derived class, gets a license for an instance or type of component, when given a context and whether the denial of a license throws an exception.
            </summary>
            <param name="context">A <see cref="T:System.ComponentModel.LicenseContext"/> that specifies where you can use the licensed object.</param>
            <param name="type">A <see cref="T:System.Type"/> that represents the component requesting the license.</param>
            <param name="instance">An object that is requesting the license.</param>
            <param name="allowExceptions">true if a <see cref="T:System.ComponentModel.LicenseException"/> should be thrown when the component cannot be granted a license; otherwise, false.</param>
            <returns>
            A valid <see cref="T:System.ComponentModel.License"/>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseProviderBase.GetLicenseInternal(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            When overridden in a derived class, gets a license for an instance or type of component, when given a context and whether the denial of a license throws an exception.
            </summary>
            <param name="context">A <see cref="T:System.ComponentModel.LicenseContext"/> that specifies where you can use the licensed object.</param>
            <param name="type">A <see cref="T:System.Type"/> that represents the component requesting the license.</param>
            <param name="instance">An object that is requesting the license.</param>
            <param name="allowExceptions">true if a <see cref="T:System.ComponentModel.LicenseException"/> should be thrown when the component cannot be granted a license; otherwise, false.</param>
            <returns>
            A valid <see cref="T:System.ComponentModel.License"/>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseProviderBase.CreateLicense(System.String,Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Creates the license.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseProviderBase.ActivateLicense(System.Type,System.String)">
            <summary>
            Activates the license.
            </summary>
            <param name="objType">The type to activate its license.</param>
            <param name="strLicenseFile">The license file content.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseProviderBase.LicensingDirectory">
            <summary>
            Gets the licensing directory.
            </summary>
            <value>The licensing directory.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LocalLicenseProvider.LicensingDirectory">
            <summary>
            Gets the licensing directory.
            </summary>
            <value>The licensing directory.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ServerLicenseProvider.GetLicenseInternal(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            Gets the license.
            </summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
            <param name="instance">The instance.</param>
            <param name="allowExceptions">if set to <c>true</c> allow exceptions.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ServerLicenseProvider.CreateLicense(System.String,Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Creates the license.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.RuntimeLicenseProvider">
            <summary>
            The runtime license provider provides licenses for components running in 
            web enviroment in runtime.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.RuntimeLicenseProvider.GetLicenseInternal(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            Gets the license.
            </summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
            <param name="instance">The instance.</param>
            <param name="allowExceptions">if set to <c>true</c> allow exceptions.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.RuntimeLicenseProvider.CreateLicense(System.String,Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Creates the license.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.RuntimeLicenseProvider.LicensingDirectory">
            <summary>
            Gets the licensing directory.
            </summary>
            <value>The licensing directory.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute">
            <summary>
            The license definition provides informantion about a licensed type that is requred in oreder
            for the gizmox licensing to work.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.mobjLicenseSpesifications">
            <summary>
            The contained license attribute data
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="!:LicenseNameAttribute"/> class.
            </summary>
            <param name="strLicenseName">The license name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="!:LicenseAttribute"/> class.
            </summary>
            <param name="objLicenseSpesifications">The license spesifications to wrap.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.GetValue(System.String,System.Int32)">
            <summary>
            Gets the value.
            </summary>
            <param name="strKey">The key.</param>
            <param name="intDefault">The default.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.GetValue(System.String,System.Guid)">
            <summary>
            Gets the value.
            </summary>
            <param name="strKey">The key.</param>
            <param name="intDefault">The default.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.GetValue(System.String,System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="strKey">The key.</param>
            <param name="strDefault">The default.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.SetValue(System.String,System.String)">
            <summary>
            Sets the value.
            </summary>
            <param name="strKey">The key.</param>
            <param name="strDefault">The default.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#Add(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            An element with the same key already exists in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IDictionary`2"/> is read-only.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#Remove(System.String)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key"/> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IDictionary`2"/> is read-only.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.</param>
            <returns>
            true if the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"/> contains an element with the specified key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            -or-
            Type <paramref name="T"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.LicenseName">
            <summary>
            Gets the name of the license.
            </summary>
            <value>The name of the license.</value>
            <remarks>The license name is used as the license file name. By changing the license name
            on actualy invalidates old licenses and requires the user to activate his software again.</remarks>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.LicenseType">
            <summary>
            Gets the type of the license.
            </summary>
            <value>The type of the license.</value>
            <remarks>The license type validates the license to see that the right license is used for the 
            right product. A license file must contain this value exactly (case sensetive).</remarks>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.EvaluationCode">
            <summary>
            Gets the evaluation code for this license.
            </summary>
            <value>The evaluation code for this license.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.EvalutationPeriod">
            <summary>
            Gets or sets the evalutation period.
            </summary>
            <value>The evalutation period.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.LicenseAgreementName">
            <summary>
            Gets or sets the name of the license agreement.
            </summary>
            <value>The name of the license agreement.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.ProductVersion">
            <summary>
            Gets the product version number.
            </summary>
            <value>The product version number.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.LicenseVersion">
            <summary>
            Gets or sets the license version.
            </summary>
            <value>The license version.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.ProductName">
            <summary>
            Gets or sets the name of the product.
            </summary>
            <value>The name of the product.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.ProductDescription">
            <summary>
            Gets or sets the product description.
            </summary>
            <value>The product description.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#IDictionary{System#String@System#Object}#Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.DesignLicenseProvider">
            <summary>
            Provides design time licensing while providing a default license for runtime
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.DesignLicenseProvider.GetLicenseInternal(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            Gets the license.
            </summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
            <param name="instance">The instance.</param>
            <param name="allowExceptions">if set to <c>true</c> allow exceptions.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.DesignLicenseProvider.CreateLicense(System.String,Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Creates the license.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.AgnosticDesignLicenseProvider">
            <summary>
            Provides design time licensing regardless the licensing context
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.AgnosticDesignLicenseProvider.GetLicenseInternal(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            Gets the license.
            </summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
            <param name="instance">The instance.</param>
            <param name="allowExceptions">if set to <c>true</c> allow exceptions.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.AgnosticDesignLicenseProvider.CreateLicense(System.String,Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Creates the license.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.LocalLicense">
            <summary>
            Provides a local license
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.GenericLicense">
            <summary>
            Provides a base class implementaion for different licensing scenarios
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.GenericLicense.mstrLicenseKey">
            <summary>
            The license key data stored in the license file
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.GenericLicense.mobjLicenseData">
            <summary>
            The license data prased from the license file
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.GenericLicense.mobjLicenseDefinitionsAttribute">
            <summary>
            The license definition attribute
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.GenericLicense.#ctor(System.String,Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Initializes a new instance of the <see cref="!:LicenseBase"/> class.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <param name="objLicenseDefinitions">The license definitions attribute.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.GenericLicense.Dispose">
            <summary>
            When overridden in a derived class, disposes of the resources used by the license.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.LicenseKey">
            <summary>
            When overridden in a derived class, gets the license key granted to this component.
            </summary>
            <value></value>
            <returns>
            A license key granted to this component.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.VersionNumber">
            <summary>
            Gets the version number.
            </summary>
            <value>The version number.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.LicenseVersion">
            <summary>
            Gets the licesne version.
            </summary>
            <value>The licesne version.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.LicenseAgreementName">
            <summary>
            Gets the name of the license agreement.
            </summary>
            <value>The name of the license agreement.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.LicenseName">
            <summary>
            Gets the name of the license.
            </summary>
            <value>The name of the license.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.Status">
            <summary>
            Gets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.IsValid">
            <summary>
            Gets a value indicating whether this license has a valid license.
            </summary>
            <value>
            	<c>true</c> if this license has a valid license; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.LicensedMachineKey">
            <summary>
            Gets the licensed machine key.
            </summary>
            <value>The licensed machine key.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.LicensedMachineName">
            <summary>
            Gets the licensed machine name.
            </summary>
            <value>The licensed machine name.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.IsCommunityLicense">
            <summary>
            Gets a value indicating whether this license a is community license.
            </summary>
            <value>
            	<c>true</c> if this license a is community license; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.IsExpressLicense">
            <summary>
            Gets a value indicating whether this instance is express license.
            </summary>
            <value>
            	<c>true</c> if this instance is express license; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.IsExpired">
            <summary>
            Gets a value indicating whether this license is expired.
            </summary>
            <value>
            	<c>true</c> if this license is expired; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.CreatedOn">
            <summary>
            Gets the created on date.
            </summary>
            <value>The created on date.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.EvaluationDays">
            <summary>
            Gets the evaluation days.
            </summary>
            <value>The evaluation days.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.IsEvaluation">
            <summary>
            Gets a value indicating whether this license is an evaluation license.
            </summary>
            <value>
            	<c>true</c> if this license is an evaluation license; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.IsPerpetual">
            <summary>
            Gets a value indicating whether this instance is perpetual.
            </summary>
            <value>
            	<c>true</c> if this instance is perpetual; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.ExpiresOn">
            <summary>
            Gets the expires on.
            </summary>
            <value>The expires on.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.DaysToExpiration">
            <summary>
            Gets the days to expiration.
            </summary>
            <value>The days to expiration.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.GenericLicense.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified parameter name.
            </summary>
            <value></value>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.LocalLicense.#ctor(System.String,Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Licensing.LocalLicense"/> class.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <param name="objLicenseDefinitions">The license definitions attribute.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.DesignLicense">
            <summary>
            Provides a design time specific license
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.DesignLicense.#ctor(System.String,Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Licensing.DesignLicense"/> class.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <param name="objLicenseDefinitions">The license definitions attribute.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.EmptyLicense">
            <summary>
            Provides a empty license
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.EmptyLicense.#ctor(Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Licensing.EmptyLicense"/> class.
            </summary>
            <param name="objLicenseDefinitions">The license definitions.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.EmptyLicense.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Licensing.EmptyLicense"/> class.
            </summary>
            <param name="objType">The licensed type.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.EmptyLicense.Status">
            <summary>
            Gets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.RuntimeLicense">
            <summary>
            Provides a runtime specific license
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.RuntimeLicense.#ctor(System.String,Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Licensing.RuntimeLicense"/> class.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <param name="objLicenseDefinitions">The license definitions.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.ServerLicense">
            <summary>
            Provides a server runtime specific license
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.ServerLicense.#ctor(System.String,Gizmox.WebGUI.Licensing.LicenseDefinitionsAttribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Licensing.ServerLicense"/> class.
            </summary>
            <param name="strLicenseKey">The license key.</param>
            <param name="objLicenseDefinitions">The license definitions.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.CommonLicenses">
            <summary>
            Provides common types to define licensing on
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.CommonLicenses.mobjVWGDesignTimeInstance">
            <summary>
            Provides support for design time licensing
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Licensing.CommonLicenses.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Licensing.CommonLicenses"/> class.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.CommonLicenses.VWGDesingTimeLicense">
            <summary>
            Gets the VWG desing time license.
            </summary>
            <value>The VWG desing time license.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Licensing.CommonLicenses.VWGDesingTimeType">
            <summary>
            Gets the VWG desing time licensed type.
            </summary>
            <value>The VWG desing time  licensed type.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.CommonLicenses.VWGDesignTimeClass">
            <summary>
            Provides support for design time licensing
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.LicensingGuids">
            <summary>
            Provides common license guids
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Licensing.LicenseStatus">
            <summary>
            Provides information on the current license status
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicenseStatus.Valid">
            <summary>
            License if valid
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicenseStatus.InValid">
            <summary>
            License is invalid
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicenseStatus.Evaluation">
            <summary>
            License is in evaluation mode 
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicenseStatus.Expired">
            <summary>
            License is in expired mode
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicenseStatus.Absent">
            <summary>
            License is unvailable
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicenseStatus.Community">
            <summary>
            Community license is installed
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Licensing.LicenseStatus.Express">
            <summary>
            Express license is installed
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Serialization.SerializableAttributeWrapper">
            <summary>
            Provides a serializable wrapper for an attribute
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Serialization.SerializableGenericWrapper`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Serialization.SerializableWrapper`1">
            <summary>
            Wraps a type to be serialized
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Serialization.SerializableWrapper`1.mobjInstance">
            <summary>
            The wrapped instance
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableWrapper`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableWrapper`1"/> class.
            </summary>
            <param name="objInstance">The instance.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableWrapper`1.GetInstanceFromData(System.Object)">
            <summary>
            Gets the instance from data.
            </summary>
            <typeparam name="T">The instance type.</typeparam>
            <param name="objInstance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableWrapper`1.SaveInstanceData(System.Object)">
            <summary>
            Saves the instance data.
            </summary>
            <typeparam name="T">The instance type.</typeparam>
            <param name="objInstance">The instance.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Serialization.SerializableWrapper`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Serialization.SerializableGenericWrapper`1.mobjTypeFiledsCache">
            <summary>
            Provides caching for type member discovery
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Serialization.SerializableGenericWrapper`1.mobjTypeFiledsCacheLock">
            <summary>
            Provides locking mechanism for type member cache
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Serialization.SerializableGenericWrapper`1.mobjFileds">
            <summary>
            The wrapped object fields
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Serialization.SerializableGenericWrapper`1.mstrType">
            <summary>
            The wrapped object type
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableGenericWrapper`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableGenericWrapper`1"/> class.
            </summary>
            <param name="objGenericObject">The generic object.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableGenericWrapper`1.GetInstanceFromData(System.Object)">
            <summary>
            Gets the instance from data.
            </summary>
            <param name="objInstance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableGenericWrapper`1.SaveInstanceData(System.Object)">
            <summary>
            Saves the instance data.
            </summary>
            <param name="objInstance">The instance.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableGenericWrapper`1.GetSerializableMembers(System.Type)">
            <summary>
            Gets the serializable members.
            </summary>
            <param name="objType">The object type to get its members.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableAttributeWrapper.#ctor(System.Attribute)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableAttributeWrapper"/> class.
            </summary>
            <param name="objAttribute">The attribute to wrap.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ThreadExceptionEventHandler">
            <summary>Represents the method that will handle the <see cref="E:Gizmox.WebGUI.Forms.Application.ThreadException"></see> event of an <see cref="T:Gizmox.WebGUI.Forms.Application"></see>.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ThreadExceptionEventArgs">
            <summary>Provides data for the <see cref="E:Gizmox.WebGUI.Forms.Application.ThreadException"></see> event.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ThreadExceptionEventArgs.#ctor(System.Exception)">
            <summary>Initializes a new instance of the <see cref="T:System.Threading.ThreadExceptionEventArgs"></see> class.</summary>
            <param name="objException">The <see cref="T:System.Exception"></see> that occurred. </param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThreadExceptionEventArgs.Exception">
            <summary>Gets the <see cref="T:System.Exception"></see> that occurred.</summary>
            <returns>The <see cref="T:System.Exception"></see> that occurred.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ThreadMessageRecipientType">
            <summary>
            Identifies the thread message recipient
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.ThreadMessageRecipientType.Host">
            <summary>
            The hosting application
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.ThreadMessageRecipientType.Applicatoin">
            <summary>
            Another running application
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ThreadMessage">
            <summary>
            Represents a thread message to be sent or that had been recieved
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.ThreadMessage.menmRecipientType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.ThreadMessage.mstrRecipientModule">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.ThreadMessage.mstrRecipientId">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.ThreadMessage.mobjMessageBody">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ThreadMessage.#ctor(System.String,Gizmox.WebGUI.Forms.ThreadMessageRecipientType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.ThreadMessage"/> class.
            </summary>
            <param name="strRecipientId">The STR recipient id.</param>
            <param name="enmRecipientType">Type of the recipient.</param>
            <param name="objMessageBody">The message body.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ThreadMessage.#ctor(System.String,Gizmox.WebGUI.Forms.ThreadMessageRecipientType,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.ThreadMessage"/> class.
            </summary>
            <param name="strRecipientId">The recipient id.</param>
            <param name="enmRecipientType">Type of the enm recipient.</param>
            <param name="strRecipientModule">The recipient module.</param>
            <param name="objMessageBody">The message body.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ThreadMessage.SendMessageToHost(System.Object)">
            <summary>
            Sends a thread message to application host.
            </summary>
            <param name="objMessageBody">The thread message body.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ThreadMessage.SendMessageToHost(System.String,System.Object)">
            <summary>
            Sends a thread message to application host.
            </summary>
            <param name="strModule">The module.</param>
            <param name="objMessageBody">The thread message body.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ThreadMessage.Send">
            <summary>
            Sends the message to the recepient.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThreadMessage.RecipientType">
            <summary>
            Gets the type of the recipient.
            </summary>
            <value>The type of the recipient.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThreadMessage.RecipientModule">
            <summary>
            Gets the recipient module.
            </summary>
            <value>The recipient module.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThreadMessage.RecipientId">
            <summary>
            Gets the recipient id.
            </summary>
            <value>The recipient id.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThreadMessage.Body">
            <summary>
            Gets the thread message body.
            </summary>
            <value>The body.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ThreadMessageEventHandler">
            <summary>Represents the method that will handle the <see cref="E:Gizmox.WebGUI.Forms.Application.ThreadMessage"></see> events of an <see cref="T:Gizmox.WebGUI.Forms.Application"></see>.</summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ThreadMessageEventArgs">
            <summary>Provides data for the <see cref="E:Gizmox.WebGUI.Forms.Application.ThreadMessage"></see> event.</summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ThreadMessageEventArgs.#ctor(Gizmox.WebGUI.Forms.ThreadMessage)">
            <summary>Initializes a new instance of the <see cref="T:System.Threading.ThreadMessageEventArgs"></see> class.</summary>
            <param name="objThreadMessage">The thread message. </param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThreadMessageEventArgs.Message">
            <summary>
            Gets the thread message.
            </summary>
            <value>The thread message.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ThreadBookmarkEventHandler">
            <summary>Represents the method that will handle the <see cref="E:Gizmox.WebGUI.Forms.Application.ThreadBack"></see> and <see cref="E:Gizmox.WebGUI.Forms.Application.ThreadForward"></see> events of an <see cref="T:Gizmox.WebGUI.Forms.Application"></see>.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ThreadBookmarkEventArgs">
            <summary>Provides data for the <see cref="E:Gizmox.WebGUI.Forms.Application.ThreadException"></see> event.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ThreadBookmarkEventArgs.#ctor(System.Object)">
            <summary>Initializes a new instance of the <see cref="T:System.Threading.ThreadBookmarkEventArgs"></see> class.</summary>
            <param name="objData">The object data. </param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThreadBookmarkEventArgs.Data">
            <summary>Gets the data of the bookmark.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.UnhandledExceptionMode">
            <summary>
            Defines where a Visual WebGui application should send unhandled exceptions.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.UnhandledExceptionMode.Automatic">
            <summary>
            Automatic
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.UnhandledExceptionMode.ThrowException">
            <summary>
            ThrowException
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.UnhandledExceptionMode.CatchException">
            <summary>
            CatchException
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Application">
            <summary>Provides static methods and properties to manage an application, such as methods to start and stop an application, to process Windows messages, and properties to get information about an application. This class cannot be inherited.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.SetThreadBookmark(System.Object)">
            <summary>
            Adds a history bookmark.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.SetThreadBookmark(System.Object,System.String)">
            <summary>
            Adds a history bookmark.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.DoEvents">
            <summary>Processes all Windows messages currently in the message queue.</summary>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.EnableVisualStyles">
            <summary>Enables visual styles for the application.</summary>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.Exit">
            <summary>Informs all message pumps that they must terminate, and then closes all application windows after the messages have been processed.</summary>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.Exit(System.ComponentModel.CancelEventArgs)">
            <summary>
            Exits the specified e.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.ExitThread">
            <summary>Exits the message loop on the current thread and closes all windows on the thread.</summary>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.OnThreadException(System.Exception)">
            <summary>Raises the <see cref="E:Gizmox.WebGUI.Forms.Application.ThreadException"></see> event.</summary>
            <param name="t">An <see cref="T:System.Exception"></see> that represents the exception that was thrown. </param>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.Restart">
            <summary>Shuts down the application and starts a new instance immediately.</summary>
            <exception cref="T:System.NotSupportedException">Your code is not a Windows Forms application. You cannot call this method in this context.</exception>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)">
            <summary>
            Sets the compatible text rendering default.
            </summary>
            <param name="defaultValue">if set to <c>true</c> [default value].</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.SetUnhandledExceptionMode(Gizmox.WebGUI.Forms.UnhandledExceptionMode)">
            <summary>Instructs the application how to respond to unhandled exceptions.</summary>
            <param name="mode">An UnhandledExceptionMode value describing how the application should behave if an exception is thrown without being caught.</param>        
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.SetUnhandledExceptionMode(Gizmox.WebGUI.Forms.UnhandledExceptionMode,System.Boolean)">
            <summary>
            Sets the unhandled exception mode.
            </summary>
            <param name="mode">The mode.</param>
            <param name="threadScope">if set to <c>true</c> [thread scope].</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.UnregisterMessageLoop">
            <summary>
            Unregisters the message loop.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Application.GetApplicationOpenForms(Gizmox.WebGUI.Common.Interfaces.IForm,Gizmox.WebGUI.Forms.FormCollection@)">
            <summary>
            Gets the application open forms.
            </summary>
            <param name="objForm">The form.</param>
            <param name="objFormCollection">The returning form collection.</param>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.ApplicationExit">
            <summary>Occurs when the application is about to shut down.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.ThreadSuspend">
            <summary>
            Provides notification when client view is refreshed / exited / closed
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.EnterThreadModal">
            <summary>Occurs when the application is about to enter a modal state. </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.Idle">
            <summary>Occurs when the application finishes processing and is about to enter the idle state.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.LeaveThreadModal">
            <summary>Occurs when the application is about to leave a modal state. </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.ThreadExit">
            <summary>Occurs when a thread is about to shut down. When the main thread for an application is about to be shut down, this event is raised first, followed by an <see cref="E:Gizmox.WebGUI.Forms.Application.ApplicationExit"></see> event.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.ThreadRefresh">
            <summary>Occurs when the client is refreshing.</summary>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.ThreadBookmarkNavigate">
            <summary>
            Provides notification when user navigated to a thread bookmark
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.ThreadMessage">
            <summary>
            Provides notification when user navigated to a thread bookmark
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.ThreadException">
            <summary>Occurs when an untrapped thread exception is thrown.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.Application.ThreadTick">
            <summary>Occurs when a on every thread event queue handling.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Application.AllowQuit">
            <summary>Gets a value indicating whether the caller can quit this application.</summary>
            <returns>true if the caller can quit this application; otherwise, false.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Application.CompanyName">
            <summary>Gets the company name associated with the application.</summary>
            <returns>The company name.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Application.CurrentCulture">
            <summary>Gets or sets the culture information for the current thread.</summary>
            <returns>A <see cref="T:System.Globalization.CultureInfo"></see> representing the culture information for the current thread.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlThread" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Application.CurrentUICulture">
            <summary>
            Gets or sets the current UI culture.
            </summary>
            <value>The current UI culture.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Application.ExecutablePath">
            <summary>Gets the path for the executable file that started the application, including the executable name.</summary>
            <returns>The path and executable name for the executable file that started the application.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Application.LocalUserAppDataPath">
            <summary>Gets the path for the application data of a local, non-roaming user.</summary>
            <returns>The path for the application data of a local, non-roaming user.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Application.MessageLoop">
            <summary>Gets a value indicating whether a message loop exists on this thread.</summary>
            <returns>true if a message loop exists; otherwise, false.</returns>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Application.OpenForms">
            <summary>Gets a collection of open forms owned by the application.</summary>
            <returns>A <see cref="T:System.Windows.Forms.FormCollection"></see> containing all the currently open forms owned by this application.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Window="AllWindows" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Application.ProductName">
            <summary>Gets the product name associated with this application.</summary>
            <returns>The product name.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Application.ProductVersion">
            <summary>Gets the product version associated with this application.</summary>
            <returns>The product version.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /><IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="T:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo">
            <summary>Provides the base class for both <see cref="T:System.IO.VirtualFileInfo"></see> and <see cref="T:System.IO.VirtualDirectoryInfo"></see> objects.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.FullPath">
            <summary>Represents the fully qualified path of the directory or file.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.OriginalPath">
            <summary>The path originally specified by the user, whether relative or absolute.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.Node">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualFileSystemInfo"></see> class.</summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.GetFullPath(System.String)">
            <summary>
            Gets the full path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.Delete">
            <summary>Deletes a file or directory.</summary>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified file does not exist. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.Refresh">
            <summary>Refreshes the state of the object.</summary>
            <exception cref="T:System.IO.VirtualIOException">A device such as a disk drive is not ready. </exception>
            <exception cref="T:System.ArgumentException">The file is not found. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.GetReference(System.String)">
            <summary>
            Gets the reference.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.Attributes">
            <summary>Gets or sets the <see cref="T:System.IO.FileAttributes"></see> of the current <see cref="T:System.IO.VirtualFileSystemInfo"></see>.</summary>
            <returns><see cref="T:System.IO.FileAttributes"></see> of the current <see cref="T:System.IO.VirtualFileSystemInfo"></see>.</returns>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">The caller attempts to set an invalid file attribute. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified file does not exist. </exception>
            <exception cref="T:System.IO.VirtualIOException"><see cref="M:System.IO.VirtualFileSystemInfo.Refresh"></see> cannot initialize the data. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.CreationTime">
            <summary>Gets or sets the creation time of the current <see cref="T:System.IO.VirtualFileSystemInfo"></see> object.</summary>
            <returns>The creation date and time of the current <see cref="T:System.IO.VirtualFileSystemInfo"></see> object.</returns>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.IO.VirtualIOException"><see cref="M:System.IO.VirtualFileSystemInfo.Refresh"></see> cannot initialize the data. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified file does not exist. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.CreationTimeUtc">
            <summary>Gets or sets the creation time, in coordinated universal time (UTC), of the current <see cref="T:System.IO.VirtualFileSystemInfo"></see> object.</summary>
            <returns>The creation date and time in UTC format of the current <see cref="T:System.IO.VirtualFileSystemInfo"></see> object.</returns>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.IO.VirtualIOException"><see cref="M:System.IO.VirtualFileSystemInfo.Refresh"></see> cannot initialize the data. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified file does not exist. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.Exists">
            <summary>Gets a value indicating whether the file or directory exists.</summary>
            <returns>true if the file or directory exists; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.Extension">
            <summary>Gets the string representing the extension part of the file.</summary>
            <returns>A string containing the <see cref="T:System.IO.VirtualFileSystemInfo"></see> extension.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.FullName">
            <summary>Gets the full path of the directory or file.</summary>
            <returns>A string containing the full path.</returns>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.LastAccessTime">
            <summary>Gets or sets the time the current file or directory was last accessed.</summary>
            <returns>The time that the current file or directory was last accessed.</returns>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.IO.VirtualIOException"><see cref="M:System.IO.VirtualFileSystemInfo.Refresh"></see> cannot initialize the data. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.LastAccessTimeUtc">
            <summary>Gets or sets the time, in coordinated universal time (UTC), that the current file or directory was last accessed.</summary>
            <returns>The UTC time that the current file or directory was last accessed.</returns>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.IO.VirtualIOException"><see cref="M:System.IO.VirtualFileSystemInfo.Refresh"></see> cannot initialize the data. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.LastWriteTime">
            <summary>Gets or sets the time when the current file or directory was last written to.</summary>
            <returns>The time the current file was last written.</returns>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.IO.VirtualIOException"><see cref="M:System.IO.VirtualFileSystemInfo.Refresh"></see> cannot initialize the data. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.LastWriteTimeUtc">
            <summary>Gets or sets the time, in coordinated universal time (UTC), when the current file or directory was last written to.</summary>
            <returns>The UTC time when the current file was last written to.</returns>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.IO.VirtualIOException"><see cref="M:System.IO.VirtualFileSystemInfo.Refresh"></see> cannot initialize the data. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.Name">
            <summary>For files, gets the name of the file. For directories, gets the name of the last directory in the hierarchy if a hierarchy exists. Otherwise, the Name property gets the name of the directory.</summary>
            <returns>A string that is the name of the parent directory, the name of the last directory in the hierarchy, or the name of a file, including the file name extension.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.NodeTypeId">
            <summary>
            Gets the node type id.
            </summary>
            <value>The node type id.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo.Reference">
            <summary>
            Gets the reference.
            </summary>
            <value>The reference.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Switches.WGTracingThresholdSwitch">
            <summary>
            Summary description for WGTracingThresholdSwitch.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Switches.WGTracingThresholdSwitch.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Switches.WGTracingThresholdSwitch"/> class.
            </summary>
            <param name="strName">Name of the STR.</param>
            <param name="strDescription">The STR description.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Switches.WGTracingThresholdSwitch.Threshold">
            <summary>
            Gets the threshold.
            </summary>
            <value>The threshold.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinContainerAttribute">
            <summary>
            Defines the skin container which will effect the ambient properties of the skin
            and its positioning in the theme tree.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinContainerAttribute.mobjSkinType">
            <summary>
            The type of the Skin class
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinContainerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinContainerAttribute"/> class.
            </summary>
            <param name="strSkinType">The type of the Skin class.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinContainerAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinContainerAttribute"/> class.
            </summary>
            <param name="objSkinType">The type of the Skin class.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinContainerAttribute.ValidateType(System.Type)">
            <summary>
            Validates the skin type.
            </summary>
            <param name="objSkinType">The type of the Skin class.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinContainerAttribute.SkinType">
            <summary>
            Gets the type of the skin.
            </summary>
            <value>The type of the skin.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.ISkinable">
            <summary>
            Provides the ability to skin a component
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.ISkinable.Theme">
            <summary>
            Gets the theme related to the skinable component.
            </summary>
            <value>The theme related to the skinable component.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinCompiler.mobjConfig">
            <summary>
            The application config
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinCompiler.mobjGlobalScope">
            <summary>
            The root scope of the current skin compiler
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinCompiler.mblnInitialized">
            <summary>
            Indicates if the skin compiler was previously initialized
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinCompiler.mstrTheme">
            <summary>
            The theme that this compiler was initialized with
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinCompiler.mobjSkinScopes">
            <summary>
            A cache of previously created skin scopes
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinCompiler.#ctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinCompiler"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinCompiler.Initialize(System.String)">
            <summary>
            Initializes the skin compiler for specified theme.
            </summary>
            <param name="strTheme">The theme which this compiler relates to.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinCompiler.Initialize(System.Type)">
            <summary>
            Initializes the specified skin type.
            </summary>
            <param name="objSkinType">The type of the skin.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinCompiler.Initialize(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.Type)">
            <summary>
            Initializes the specified skin scope.
            </summary>
            <param name="objSkinScope">The skin scope.</param>
            <param name="objSkinType">The type of the skin to initialize.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinCompiler.GetSkinResourcesList">
            <summary>
            Gets the skin resources list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinCompiler.WriteSkinManifest(Gizmox.WebGUI.Common.Interfaces.IContext,System.Web.UI.HtmlTextWriter)">
            <summary>
            Writes the skin manifest.
            </summary>
            <param name="objContext">The context.</param>
            <param name="objWriter">The writer.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinCompiler.Gizmox#WebGUI#Forms#Skins#ISkinable#Theme">
            <summary>
            Gets the theme related to the skin compiler.
            </summary>
            <value>The theme related to the skin compiler.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.TextResource">
            <summary>
            Provides base class for text resources
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.TextResource"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextResource.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.TextResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.TextResource"/> class.
            </summary>
            <param name="objResource">The resource.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.ISkinContainer">
            <summary>
            Provides the ability to get a skin object from a container class
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Extensibility.WebCompilerResourcesAttribute">
            <summary>
            Marks a component resources location
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Extensibility.WebCompilerResourcesAttribute.mobjAssembly">
            <summary>
            The resources assembly
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Extensibility.WebCompilerResourcesAttribute.mstrNamespace">
            <summary>
            The resources namespace
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.WebCompilerResourcesAttribute.#ctor(System.Type)">
            <summary>
            Defines resources location by the reference type namespace and component type name.
            </summary>
            <param name="objReference">The reference to retrieve its namespace and assembly where the resources are located.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.WebCompilerResourcesAttribute.#ctor(System.String)">
            <summary>
            Defines resources location by the reference type namespace and component type name.
            </summary>
            <param name="strNamespace">The reference to retrieve its namespace and assembly where the resources are located.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.WebCompilerResourcesAttribute.#ctor(System.String,System.String)">
            <summary>
            Defines resources location by the reference type namespace and component type name.
            </summary>
            <param name="strNamespace">The namespace where the resources are located.</param>
            <param name="strAssembly">The assembly where the resources are located.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Extensibility.WebCompilerResourcesAttribute.Assembly">
            <summary>
            Returns the resources assembly
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Extensibility.WebCompilerResourcesAttribute.Namespace">
            <summary>
            Returns the resources namesapce
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.CommonSwitches">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.CommonSwitches.Tracing">
            <summary>
            Gets the tracing.
            </summary>
            <value>The tracing.</value>
        </member>
        <member name="P:Gizmox.WebGUI.CommonSwitches.TraceEnabled">
            <summary>
            Gets a value indicating whether [trace enabled].
            </summary>
            <value><c>true</c> if [trace enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.CommonSwitches.TraceInfo">
            <summary>
            Gets a value indicating whether [trace info].
            </summary>
            <value><c>true</c> if [trace info]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.CommonSwitches.TraceVerbose">
            <summary>
            Gets a value indicating whether [trace verbose].
            </summary>
            <value><c>true</c> if [trace verbose]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.CommonSwitches.TraceThreshold">
            <summary>
            Gets the trace threshold.
            </summary>
            <value>The trace threshold.</value>
        </member>
        <member name="P:Gizmox.WebGUI.CommonSwitches.DisableObscuring">
            <summary>
            Gets a value indicating whether [disable obscuring].
            </summary>
            <value><c>true</c> if [disable obscuring]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.CommonSwitches.EnableClientShortcuts">
            <summary>
            Gets a value indicating whether [enable client shortcuts].
            </summary>
            <value>
            	<c>true</c> if [enable client shortcuts]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Gizmox.WebGUI.WGConst">
            <summary>
            The WGConst class contains static properties exposing different Visual WebGui
            constants.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGConst.Version">
            <summary>The current Visual WebGui version.</summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGConst.CacheVersion">
            <summary>
            The current cache version which is a key that is used for different caching
            purposes including browser cache.
            </summary>
            <remarks>
            This value can be influenced by changing the PrivateVersion key value with in the
            Visual WebGui configuration section.
            </remarks>
        </member>
        <member name="P:Gizmox.WebGUI.WGConst.Prefix">
            <summary>Gets the default Visual WebGui tag prefix.</summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGConst.Namespace">
            <summary>Gets the default tag prefix namespace.</summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGConst.ControlsPrefix">
            <summary>Gets the default Visual WebGui control tag prefix.</summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGConst.ControlsNamespace">
             <summary>
            Gets the default control tag prefix namespace.
             </summary>
        </member>
        <member name="T:Gizmox.WebGUI.WGTags">
            <summary>
            Tags output representation
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Token">
            <summary>
            A datetimepicker token.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Literal">
            <summary>
            A datetimepicker literal.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.UserControl">
            <summary>
            UserControl Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Object">
            <summary>
            Object Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Events">
            <summary>
            Events Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Event">
            <summary>
            Event Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Error">
            <summary>
            Error Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.PropertyGrid">
            <summary>
            PropertyGrid Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.PropertyGridView">
            <summary>
            PropertyGridView Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.PropertyGridEntry">
            <summary>
            PropertyGridEntry Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Refresh">
            <summary>
            Refresh Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Response">
            <summary>
            Response Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Form">
            <summary>
            Form Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.TreeView">
            <summary>
            TreeView Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.TreeNode">
            <summary>
            TreeNode Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.TrackBar">
            <summary>
            TrackBar Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.NumericUpDown">
            <summary>
            NumericUpDown Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.DomainUpDown">
            <summary>
            DomainUpDown Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Header">
            <summary>
            Header Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Content">
            <summary>
            Content Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Button">
            <summary>
            Button Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Panel">
            <summary>
            Panel Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.PictureBox">
            <summary>
            PictureBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ListView">
            <summary>
            ListView Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Group">
            <summary>
            Group Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Row">
            <summary>
            Row Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Rows">
            <summary>
            Rows Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Column">
            <summary>
            Column Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Menu">
            <summary>
            Menu Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Item">
            <summary>
            Item Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.TextBox">
            <summary>
            TextBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ListBox">
            <summary>
            ListBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Label">
            <summary>
            Label Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.TabControl">
            <summary>
            TabControl Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.TabPage">
            <summary>
            TabPage Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Splitter">
            <summary>
            Splitter Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ToolBarControl">
            <summary>
            ToolBarControl Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ToolBarButton">
            <summary>
            ToolBarButton Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.TableLayoutPanel">
            <summary>
            TableLayoutPanel Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.MainMenu">
            <summary>
            MainMenu Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.MenuItem">
            <summary>
            MenuItem Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Option">
            <summary>
            Option Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Options">
            <summary>
            Options Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.MonthCalendar">
            <summary>
            MonthCalendar Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.RadioButton">
            <summary>
            RadioButton Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ComboBox">
            <summary>
            ComboBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.GroupBox">
            <summary>
            GroupBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.CheckBox">
            <summary>
            CheckBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.DateTimePicker">
            <summary>
            DateTimePicker Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.LinkLabel">
            <summary>
            LinkLabel Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Line">
            <summary>
            Line Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.CheckedListBox">
            <summary>
            CheckedListBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ColorListBox">
            <summary>
            ColorListBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ColorComboBox">
            <summary>
            ColorComboBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.StatusBar">
            <summary>
            StatusBar Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.StatusPanel">
            <summary>
            StatusPanel Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ContextMenu">
            <summary>
            ContextMenu Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ProgressBar">
            <summary>
            ProgressBar Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Applet">
            <summary>
            Applet Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ASPXBox">
            <summary>
            ASPXBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Param">
            <summary>
            Param Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ScrollablePanel">
            <summary>
            ScrollablePanel Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.HtmlBox">
            <summary>
            HtmlBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.XamlBox">
            <summary>
            XamlBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.RichTextBox">
            <summary>
            RichTextBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Commands">
            <summary>
            Commands Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.UpdateParams">
            <summary>
            UpdateParams Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.InvokeMethod">
            <summary>
            InvokeMethod Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.FlowLayoutPanel">
            <summary>
            FlowLayoutPanel Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.DataGridView">
            <summary>
            DataGridView Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.DataGridViewColumn">
            <summary>
            DataGridViewColumn Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.DataGridViewRow">
            <summary>
            DataGridViewRow Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.DataGridViewCell">
            <summary>
            DataGridViewCell Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.DataGridViewOptions">
            <summary>
            DataGridViewOptions Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ScheduleBox">
            <summary>
            ScheduleBox Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.ShortcutsContainer">
            <summary>
            ShortcutsContainer Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.MdiClient">
            <summary>
            MdiClient Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.DragElement">
            <summary>
            DragElement Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.DraggedOverElement">
            <summary>
            DraggedOverElement Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.TableLayoutRow">
            <summary>
            TableLayoutRow Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.TableLayoutCol">
            <summary>
            TableLayoutCol Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.TableLayoutCell">
            <summary>
            TableLayoutCell Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Chart">
            <summary>
            Chart Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Packages">
            <summary>
            Packages Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Package">
            <summary>
            Package Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Themes">
            <summary>
            Themes Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Theme">
            <summary>
            Theme Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Assembly">
            <summary>
            Assembly Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Manifest">
            <summary>
            Manifest Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Tags">
            <summary>
            Tags Tag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGTags.Tag">
            <summary>
            Tag Tag
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.WGAttributes">
            <summary>
            Attributes output representation
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ItemHeight">
            <summary>
            ItemHeight Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.EffectedFormats">
            <summary>
            EffectedFormats Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ForceChildRedraw">
            <summary>
            ForceChildRedraw Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.OptionsComponent">
            <summary>
            The id of the component which contains the options node.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.DraggedColumn">
            <summary>
            DraggedColumn Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.TargetColumn">
            <summary>
            TargetColumn Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.AllowUserToOrderColumns">
            <summary>
            AllowUserToOrderColumns Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Password">
            <summary>
            Password Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MaxLength">
            <summary>
            MaxLength Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MinimumHeight">
            <summary>
            MinimumHeightAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MaximumHeight">
            <summary>
            MaximumHeight Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MinimumWidth">
            <summary>
            MinimumWidth Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MaximumWidth">
            <summary>
            MaximumWidthAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Rows">
            <summary>
            Rows Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Cols">
            <summary>
            Cols Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Rowspan">
            <summary>
            Rowspan Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Colspan">
            <summary>
            ColspanAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.IsSplitterFixed">
            <summary>
            IsSplitterFixed Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ShowUpDown">
            <summary>
            ShowUpDown Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.LabelEdit">
            <summary>
            LabelEdit Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.BeforeUnloadMessage">
            <summary>
            BeforeUnloadMessage Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Advanced">
            <summary>
            Advanced Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.LablesColumnWidth">
            <summary>
            LablesColumnWidth Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SelectOnRightClick">
            <summary>
            SelectOnRightClick Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.DisableNavigation">
            <summary>
            DisableNavigation Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.UseItemStyleForSubItems">
            <summary>
            UseItemStyleForSubItems Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.LinkState">
            <summary>
            LinkState Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.LinkColor">
            <summary>
            LinkColorAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ActiveLinkColor">
            <summary>
            ActiveLinkColor Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.VisitedLinkColor">
            <summary>
            VisitedLinkColor Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.AutoCheck">
            <summary>
            AutoCheckAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CharacterCasing">
            <summary>
            CharacterCasing Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.GrowStyle">
            <summary>
            GrowStyle Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.DropTargetMember">
            <summary>
            DropTargetMember Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Message">
            <summary>
            Message Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Trace">
            <summary>
            Trace Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CursorPosition">
            <summary>
            CursorPosition Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.AllowDrop">
            <summary>
            AllowDropAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.KeyState">
            <summary>
            KeyState Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.DragTargets">
            <summary>
            DragTargets Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.DragSource">
            <summary>
            DragSource Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.DragSourceMember">
            <summary>
            DragSourceMember Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.IsMdiContainer">
            <summary>
            IsMdiContainer Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ObjectClassId">
            <summary>
            ObjectClassId Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ObjectCodeBase">
            <summary>
            ObjectCodeBase Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ObjectPluginsPageType">
            <summary>
            ObjectPluginsPageType Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ObjectType">
            <summary>
            ObjectType Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.HasRedrawingParent">
            <summary>
            HasRedrawingParent Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.FlowDirection">
            <summary>
            FlowDirection Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.HidePromptOnLeave">
            <summary>
            HidePromptOnLeave Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.TextImageRelation">
            <summary>
            TextImageRelation Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Multiline">
            <summary>
            Multiline Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.AcceptsTab">
            <summary>
            AcceptsTab Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.WordWrap">
            <summary>
            WordWrap Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.DropDownWidth">
            <summary>
            DropDownWidth Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Timer">
            <summary>
            Timer Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.DateTime">
            <summary>
            DateTime Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MinDate">
            <summary>
            MinDate Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MaxDate">
            <summary>
            MaxDate Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.FirstDayOfWeek">
            <summary>
            FirstDayOfWeek Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MdiParent">
            <summary>
            MdiParent Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Color">
            <summary>
            Color Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Collapsable">
            <summary>
            Collapsable Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ActiveForm">
            <summary>
            ActiveForm Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Active">
            <summary>
            Active Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.IsDelayedDrawing">
            <summary>
            IsDelayedDrawing Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.IsWindowSized">
            <summary>
            IsWindowSized Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.View">
            <summary>
            View Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.FormStartPosition">
            <summary>
            FormStartPosition Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.FormBorderStyle">
            <summary>
            FormBorderStyle Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.WindowState">
            <summary>
            WindowState Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.LastRender">
            <summary>
            LastRender Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Id">
            <summary>
            Id Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.IsNew">
            <summary>
            IsNew Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Width">
            <summary>
            Width Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Height">
            <summary>
            Height Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Docking">
            <summary>
            Docking Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Anchoring">
            <summary>
            Anchoring Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Done">
            <summary>
            Done Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ToolBar">
            <summary>
            ToolBar Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Left">
            <summary>
            Left Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Right">
            <summary>
            Right Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Top">
            <summary>
            TopAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Bottom">
            <summary>
            Bottom Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Focus">
            <summary>
            Focus Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Format">
            <summary>
            Format Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Frozen">
            <summary>
            Frozen Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Name">
            <summary>
            Name Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Menu">
            <summary>
            Menu Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Enabled">
            <summary>
            Enabled Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Pushed">
            <summary>
            Pushed Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Events">
            <summary>
            Events Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Border">
            <summary>
            BorderAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Visible">
            <summary>
            Visible Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Background">
            <summary>
            Background Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.BackgroundImage">
            <summary>
            BackgroundImageAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.BackgroundImageLayout">
            <summary>
            BackgroundImageLayout Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CustomStyle">
            <summary>
            CustomStyle Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Font">
            <summary>
            Font Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Fore">
            <summary>
            Fore Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Size">
            <summary>
            Size Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Scrollbars">
            <summary>
            Scrollbars Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Text">
            <summary>
            TextAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Type">
            <summary>
            Type Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Image">
            <summary>
            Image Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.LargeImage">
            <summary>
            LargeImage Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.LargeImageWidth">
            <summary>
            LargeImageWidth Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.LargeImageHeight">
            <summary>
            LargeImageHeight Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ImageSize">
            <summary>
            ImageSize Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SelectedImage">
            <summary>
            SelectedImage Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.StateImage">
            <summary>
            StateImage Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.StateImageChecked">
            <summary>
            StateImage Checked Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.StateImageUnchecked">
            <summary>
            StateImage UnChecked Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ExpandedImage">
            <summary>
            ExpandedImage Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ImageAlign">
            <summary>
            ImageAlign Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Value">
            <summary>
            Value Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Archive">
            <summary>
            Archive Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Code">
            <summary>
            Code Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CodeBase">
            <summary>
            CodeBase Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ToolTip">
            <summary>
            ToolTip Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.EnablesDrop">
            <summary>
            EnablesDrop Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Style">
            <summary>
            Style Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.AutoCompleteMode">
            <summary>
            AutoCompleteMode Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.TextAlign">
            <summary>
            TextAlign Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.HideButtons">
            <summary>
            HideButtons Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ContentAlign">
            <summary>
            ContentAlign Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Icon">
            <summary>
            Icon Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.DropDown">
            <summary>
            DropDownAttribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Selected">
            <summary>
            Selected Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Selectable">
            <summary>
            Selectable Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Index">
            <summary>
            Index Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Checked">
            <summary>
            Checked Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CheckBoxes">
            <summary>
            CheckBoxes Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.RadioButtons">
            <summary>
            RadioButtons Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.HidePlusMinus">
            <summary>
            HidePlusMinus Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ShowLines">
            <summary>
            ShowLines Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.AlignTo">
            <summary>
            AlignTo Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.AlignType">
            <summary>
            AlignType Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.HasNodes">
            <summary>
            HasNodes Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.HasSelected">
            <summary>
            HasSelected Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.HasChecked">
            <summary>
            HasChecked Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Expanded">
            <summary>
            Expanded Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Loaded">
            <summary>
            Loaded Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.GridLines">
            <summary>
            GridLines Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SelectionIcons">
            <summary>
            SelectionIcons Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SelectionButtons">
            <summary>
            SelectionButtons Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SelectionMode">
            <summary>
            SelectionMode Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SelectionStart">
            <summary>
            SelectionStart Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SelectionLength">
            <summary>
            SelectionLength Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SelectionBackColor">
            <summary>
            SelectionBackColor Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SelectionForeColor">
            <summary>
            SelectionForeColor Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Shortcut">
            <summary>
            Shortcut Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Multiple">
            <summary>
            Multiple Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ErrorMessage">
            <summary>
            ErrorMessage Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ErrorIconPadding">
            <summary>
            ErrorIconPadding Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ErrorIconAlignment">
            <summary>
            ErrorIconAlignment Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ErrorIcon">
            <summary>
            ErrorIcon Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.TabIndex">
            <summary>
            TabIndex Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ButtonHeight">
            <summary>
            ButtonHeight Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ButtonWidth">
            <summary>
            ButtonWidth Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ImageHeight">
            <summary>
            ImageHeight Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ImageWidth">
            <summary>
            ImageWidth Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CellBorderStyle">
            <summary>
            CellBorderStyle Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CustomTemplate">
            <summary>
            CustomTemplate Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.IdentCount">
            <summary>
            IdentCount Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.FullRowSelect">
            <summary>
            FullRowSelect Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.TotalPages">
            <summary>
            TotalPages Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CurrentPage">
            <summary>
            CurrentPage Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CurrentCell">
            <summary>
            CurrentCell Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Cursor">
            <summary>
            Cursor Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.TotalItems">
            <summary>
            TotalItems Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.HeaderStyle">
            <summary>
            HeaderStyle Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.RowHeaders">
            <summary>
            RowHeaders Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ColumnHeaders">
            <summary>
            ColumnHeaders Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Sort">
            <summary>
            Sort Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SortedColumn">
            <summary>
            SortedColumn Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SortOrder">
            <summary>
            SortOrder Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.HelpVisible">
            <summary>
            HelpVisible Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.LoadingMessage">
            <summary>
            LoadingMessage Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.WrapContents">
            <summary>
            WrapContents Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.VerticalAlignment">
            <summary>
            VerticalAlignment Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.HorizontalAlignment">
            <summary>
            HorizontalAlignment Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ReadOnly">
            <summary>
            ReadOnly Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.AutoSize">
            <summary>
            AutoSize Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.BorderStyle">
            <summary>
            BorderStyle Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.AcceptButton">
            <summary>
            AcceptButton Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CancelButton">
            <summary>
            CancelButton Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Minimize">
            <summary>
            Minimize Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Maximize">
            <summary>
            Maximize Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Resize">
            <summary>
            Resize Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Focused">
            <summary>
            Focused Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Windowless">
            <summary>
            Windowless Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Mode">
            <summary>
            Mode Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Source">
            <summary>
            Source Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Target">
            <summary>
            Target Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Member">
            <summary>
            Member Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MemberID">
            <summary>
            MemberID Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.OwnerID">
            <summary>
            OwnerID Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Return">
            <summary>
            Return Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Argument">
            <summary>
            Argument Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.PaddingAll">
            <summary>
            PaddingAll Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.PaddingLeft">
            <summary>
            PaddingLeft Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.PaddingRight">
            <summary>
            PaddingRight Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.PaddingTop">
            <summary>
            PaddingTop Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.PaddingBottom">
            <summary>
            PaddingBottom Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MarginAll">
            <summary>
            MarginAll Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MarginLeft">
            <summary>
            MarginLeft Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MarginRight">
            <summary>
            MarginRight Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MarginTop">
            <summary>
            MarginTop Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MarginBottom">
            <summary>
            MarginBottom Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Maximum">
            <summary>
            Maximum Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Minimum">
            <summary>
            Minimum Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ThousandsSeparator">
            <summary>
            ThousandsSeparator Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Increment">
            <summary>
            Increment Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Hexadecimal">
            <summary>
            Hexadecimal Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.DecimalPlaces">
            <summary>
            DecimalPlaces Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Depth">
            <summary>
            Depth Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Length">
            <summary>
            Length Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Frequency">
            <summary>
            Frequency Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Orientation">
            <summary>
            Orientation Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Movie">
            <summary>
            Movie Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Quality">
            <summary>
            Quality Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.KeyCode">
            <summary>
            KeyCode Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.AltKey">
            <summary>
            AltKey Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ControlKey">
            <summary>
            ControlKey Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ShiftKey">
            <summary>
            ShiftKey Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.KeyFilter">
            <summary>
            KeyFilter Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ScrollTop">
            <summary>
            ScrollTop Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ScrollLeft">
            <summary>
            ScrollLeft Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.PromptChar">
            <summary>
            PromptChar Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.LastEditCell">
            <summary>
            LastEditCell Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ClickOnce">
            <summary>
            ClickOnce Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Redraw">
            <summary>
            Redraw Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Mashup">
            <summary>
            Mashup Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Opacity">
            <summary>
            Opacity Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Rotation">
            <summary>
            Rotation Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ScaleX">
            <summary>
            ScaleX Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ScaleY">
            <summary>
            ScaleY Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SkewX">
            <summary>
            SkewX Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.SkewY">
            <summary>
            SkewY Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Mapping">
            <summary>
            Mapping Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.Assembly">
            <summary>
            Assembly Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ValueValidationExpression">
            <summary>
            ValueValidationExpression Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CharacterValidationMask">
            <summary>
            CharacterValidationMask Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.CharacterValidationExpression">
            <summary>
            CharacterValidationExpression Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.InValidateMessage">
            <summary>
            InValidateMessage Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ClientUniqeId">
            <summary>
            ClientUniqeId Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.RadioCheck">
            <summary>
            RadioCheck Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MenuItemLabelWidth">
            <summary>
            The menu item label width 
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MenuItemShotrCutWidth">
            <summary>
            The menu item shortcut width 
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.MenuItemArrowWidth">
            <summary>
            The menu item arrow width 
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ClientInvocationTarget">
            <summary>
            ClientInvocationTarget Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ClientUpdateHandler">
            <summary>
            ClientUpdateHandler Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ClientInvocationMember">
            <summary>
            ClientInvocationMember Attribute
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.WGAttributes.ClientInvocationArgument">
            <summary>
            ClientInvocationArgument Attribute
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.WGLabels">
            <summary>
            Labels output representation
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.WGLabels.GetString(System.String,Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the string.
            </summary>
            <param name="strName">Name of the STR.</param>
            <param name="objContext">The obj context.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.WGLabels.GetString(System.String,Gizmox.WebGUI.Common.Interfaces.IContext,System.Boolean)">
            <summary>
            Gets the string.
            </summary>
            <param name="strName">Name of the STR.</param>
            <param name="objContext">The obj context.</param>
            <param name="blnApplyCultureInfoValues">if set to <c>true</c> [BLN apply culture info values].</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.WGLabels.GetString(System.String)">
            <summary>
            Gets the string.
            </summary>
            <param name="strName">Name of the STR.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.WGLabels.GetLocalizedDayString(System.DayOfWeek,System.Boolean,Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the localized day string.
            </summary>
            <param name="enmWeekDay">The enm week day.</param>
            <param name="blnShort">if set to <c>true</c> [BLN short].</param>
            <param name="objContext">The obj context.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.WGLabels.GetLocalizedMonthString(System.Int32,System.Boolean,Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the localized month string.
            </summary>
            <param name="intMonthIndex">Index of the int month.</param>
            <param name="blnShort">if set to <c>true</c> [BLN short].</param>
            <param name="objContext">The obj context.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.WGLabels.GetName(System.String)">
            <summary>
            Gets the name.
            </summary>
            <param name="strName">Name of the STR.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Loading">
            <summary>
            Loading Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Sunday">
            <summary>
            Sunday Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Monday">
            <summary>
            Monday Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Tuesday">
            <summary>
            Tuesday Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Wednesday">
            <summary>
            Wednesday Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Thursday">
            <summary>
            Thursday Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Friday">
            <summary>
            Friday Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Saturday">
            <summary>
            Saturday Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.SundayShort">
            <summary>
            SundayShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.MondayShort">
            <summary>
            MondayShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.TuesdayShort">
            <summary>
            TuesdayShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.WednesdayShort">
            <summary>
            WednesdayShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.ThursdayShort">
            <summary>
            ThursdayShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.FridayShort">
            <summary>
            FridayShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.SaturdayShort">
            <summary>
            SaturdayShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.January">
            <summary>
            January Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.February">
            <summary>
            February Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.March">
            <summary>
            March Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.April">
            <summary>
            April Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.May">
            <summary>
            May Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.June">
            <summary>
            June Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.July">
            <summary>
            July Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.August">
            <summary>
            August Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.September">
            <summary>
            September Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.October">
            <summary>
            October Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.November">
            <summary>
            November Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.December">
            <summary>
            December Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.JanuaryShort">
            <summary>
            JanuaryShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.FebruaryShort">
            <summary>
            FebruaryShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.MarchShort">
            <summary>
            MarchShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.AprilShort">
            <summary>
            AprilShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.MayShort">
            <summary>
            MayShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.JuneShort">
            <summary>
            JuneShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.JulyShort">
            <summary>
            JulyShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.AugustShort">
            <summary>
            AugustShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.SeptemberShort">
            <summary>
            SeptemberShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.OctoberShort">
            <summary>
            OctoberShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.NovemberShort">
            <summary>
            NovemberShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.DecemberShort">
            <summary>
            DecemberShort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Ok">
            <summary>
            Ok Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Cancel">
            <summary>
            Cancel Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Apply">
            <summary>
            Apply Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Ignore">
            <summary>
            Ignore Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Retry">
            <summary>
            Retry Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Yes">
            <summary>
            Yes Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.No">
            <summary>
            No Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Search">
            <summary>
            Search Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Clear">
            <summary>
            Clear Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Abort">
            <summary>
            Abort Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Next">
            <summary>
            Next Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Previous">
            <summary>
            Previous Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Close">
            <summary>
            Close Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Finish">
            <summary>
            Finish Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Help">
            <summary>
            Help Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Today">
            <summary>
            Today Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Add">
            <summary>
            Add Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Remove">
            <summary>
            Remove Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.View">
            <summary>
            View Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Show">
            <summary>
            Show Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Hide">
            <summary>
            Hide Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.MoveDown">
            <summary>
            MoveDown Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.MoveUp">
            <summary>
            MoveUp Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Ascending">
            <summary>
            Ascending Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Decsending">
            <summary>
            Decsending Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Columns">
            <summary>
            Columns Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Sorting">
            <summary>
            Sorting Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Grouping">
            <summary>
            Grouping Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Open">
            <summary>
            Open Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.Back">
            <summary>
            Back Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.SelectFilesToUpload">
            <summary>
            SelectFilesToUpload Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.DirAttribute">
            <summary>
            DirAttribute Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.LeftAttribute">
            <summary>
            LeftAttribute Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.RightAttribute">
            <summary>
            RightAttribute Label
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.WGLabels.DatePicker">
            <summary>
            DatePicker Label
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.CommonUtils">
            <summary>
            Summary description for WebGUIUtils.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.GetMimeType(System.String)">
            <summary>
            Gets the type of the MIME.
            </summary>
            <param name="strFileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.GetStringMeasurements(System.String,System.Drawing.Font,System.Int32)">
            <summary>
            Gets the string measurements.
            </summary>
            <param name="strText">The STR text.</param>
            <param name="objFont">The obj font.</param>
            <param name="intWidth">Width of the int.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.GetStringMeasurements(System.String,System.Drawing.Font,System.Boolean)">
            <summary>
            Gets the string measurements.
            </summary>
            <param name="strText">The STR text.</param>
            <param name="objFont">The obj font.</param>
            <param name="blnIgnoreNewLines">if set to <c>true</c> [BLN ignore new lines].</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.GetStringMeasurements(System.String,System.Drawing.Font)">
            <summary>
            Gets the string measurements.
            </summary>
            <param name="strText">The STR text.</param>
            <param name="objFont">The obj font.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.GetMeasurementGraphics">
            <summary>
            Gets a mesurment graphics from the current context
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.GetWebColor(System.Drawing.Color)">
            <summary>
            return the hexadecimal representation of the color
            </summary>
            <param name="color">color to convert</param>
            <returns>
            the hexadecimal representation of the color
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.IsNullOrEmpty(System.String[])">
            <summary>
            Determins if a string is null or empty
            </summary>
            <param name="strInputs">The STR inputs.</param>
            <returns>
            	<c>true</c> if [is null or empty] [the specified STR inputs]; otherwise, <c>false</c>.
            </returns>
            <remarks>Used to enable .NET1.1/.NET2.0 same code base</remarks>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.GetCombinedHashCodes(System.Int32[])">
            <summary>
            Gets a combined hashcode from multiple int values
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.TryParse(System.String,System.Single@)">
            <summary>
            Simulate float.TryParse() in .NET 1.1 or calls TryParse in 2.0 and 3.5
            </summary>
            <param name="strValue">String value to parse</param>
            <param name="fltValue">Out float value</param>
            <returns>A boolean indicating of success or failure</returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.TryParse(System.String,System.Double@)">
            <summary>
            Simulate double.TryParse() in .NET 1.1 or calls TryParse in 2.0 and 3.5
            </summary>
            <param name="strValue">String value to parse</param>
            <param name="dblValue">Out double value</param>
            <returns>A boolean indicating of success or failure</returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.TryParse(System.String,System.Int32@)">
            <summary>
            Simulate Integer.TryParse() in .NET 1.1 or calls TryParse in 2.0 and 3.5
            </summary>
            <param name="strValue">String value to parse</param>
            <param name="intValue">Out Integer value</param>
            <returns>A boolean indicating of success or failure</returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.GetFullAssemblyName(System.String)">
            <summary>
            Gets the full name of the assembly.
            </summary>
            <param name="strAssembly">The assembly name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.CommonUtils.GetFullTypeName(System.String)">
            <summary>
            Gets the full name of the type.
            </summary>
            <param name="strTypeName">The type name.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.CommonUtils.IsMono">
            <summary>
            Determines if running via mono
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.VWGContext">
            <summary>
            Holds the reference to the current VWG context object
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.VWGContext.Current">
            <summary>
            The current VWG context
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.mobjOptions">
            <summary>
            Represents additional options for creating a <see cref="T:System.IO.VirtualFileStream"></see> object.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.mobjFileSecurity">
            <summary>
            Represents the access control and audit security for a file.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.menmRights">
            <summary>
            Defines the access rights to use when creating access and audit rules.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.menmFileMode">
            <summary>
            Specifies how the operating system should open a file.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.menmAccessMode">
            <summary>
            Defines constants for read, write, or read/write access to a file.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.menmShare">
            <summary>
            Contains constants for controlling the kind of access other <see cref="T:System.IO.VirtualFileStream"></see> objects can have to the same file.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.mblnThrowExceptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.#ctor(System.IO.FileOptions,System.IO.FileAccess,System.IO.FileShare,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.FileSecurity,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions"/> class.
            </summary>
            <param name="objOptions">The options.</param>
            <param name="enmAccessMode">The access mode.</param>
            <param name="enmShare">The share.</param>
            <param name="enmFileMode">The file mode.</param>
            <param name="enmRights">The rights.</param>
            <param name="objFileSecurity">The file security.</param>
            <param name="blnThrowExceptions">if set to <c>true</c> exceptions will be thrown.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.Options">
            <summary>
            Represents additional options for creating a <see cref="T:System.IO.VirtualFileStream"></see> object.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.FileSecurity">
            <summary>
            Represents the access control and audit security for a file.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.Rights">
            <summary>
            Defines the access rights to use when creating access and audit rules.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.Mode">
            <summary>
            Specifies how the operating system should open a file.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.Access">
            <summary>
            Defines constants for read, write, or read/write access to a file.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.Share">
            <summary>
            Contains constants for controlling the kind of access other <see cref="T:System.IO.VirtualFileStream"></see> objects can have to the same file.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.ThrowExceptions">
            <summary>
            Gets a value indicating whether to throw exceptions.
            </summary>
            <value><c>true</c> if to throw exceptions; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.ReadWithNoExceptions">
            <summary>
            Gets the read with no exceptions.
            </summary>
            <value>The read with no exceptions.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions.ReadWithExceptions">
            <summary>
            Gets the read with exceptions.
            </summary>
            <value>The read with exceptions.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.TokenContext.mobjParentContext">
            <summary>
            The parent context
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.TokenContext.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.TokenContext"/> class.
            </summary>
            <param name="objParentContext">The parent context.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.TokenContext.Parent">
            <summary>
            The parent context
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenContext.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenContext"/> class.
            </summary>
            <param name="objParentContext">The parent context.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegToken.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Reg.RegToken"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.mblnIsInCssBlock">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader"/> class.
            </summary>
            <param name="objTokenContext"></param>
            <param name="objSource">The source.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.ReadToken">
            <summary>
            Reads the token.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsImportStart(System.Char)">
            <summary>
            Is import state
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsColon(System.Char)">
            <summary>
            if is colon
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsSemicolomn(System.Char)">
            <summary>
            if is semicolomn
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsClassName">
            <summary>
            If is in class name selector
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsTagName">
            <summary>
            If is tag name selector
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsElementID">
            <summary>
            If is in element id selector
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsStartCssValue">
            <summary>
            If start css value
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsEndCssValue(System.Char)">
            <summary>
            If end css value
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsEndClassBlock(System.Char)">
            <summary>
            If end class block
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsStartClassBlock(System.Char)">
            <summary>
            If start class block
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsEndBlockComment(System.Int32)">
            <summary>
            If is end of block comment
            </summary>
            <param name="intOffset"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsStartBlockComment(System.Char)">
            <summary>
            If is start block comment
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsStartIdentifier(System.Char)">
            <summary>
            Is identifier
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsPartIdentifier(System.Char)">
            <summary>
            Is identifier
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.IsExtendedCharecterOfIdentifier(System.Char)">
            <summary>
            Is extended identifier charecter
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Css.CssTokenReader.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Theme">
            <summary>
            Provides theming capabilities which enables re-skinning of all the referenced 
            skin controls.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinComponent">
            <summary>
            Provides base class implementation for a skin or a theme
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinComponent.mobjDesignedType">
            <summary>
            The current designed type (Used in design time only).
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinComponent.mobjData">
            <summary>
            The internal theme data 
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinComponent.mobjDataStore">
            <summary>
            The skin data store
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.CreateData">
            <summary>
            Creates the skin element data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.CreateDataStore">
            <summary>
            Creates the data store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.SetValue(System.String,System.Object)">
            <summary>
            Sets the value (editing skins is enabled in design time only).
            </summary>
            <param name="strKey">The key.</param>
            <param name="objValue">The value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.IsType(System.Type,System.Type)">
            <summary>
            Determines whether the type A inherits type B.
            </summary>
            <returns>
            	<c>true</c> if type A inherits type B; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.GetSkinType(System.String)">
            <summary>
            Provides get skin type service for the designtime classes
            </summary>
            <param name="strName">The type name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.GetReousrceType(System.String)">
            <summary>
            Provides get resource type service for the designtime classes
            </summary>
            <param name="strName">The type name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.GetResourceType(System.String)">
            <summary>
            Provides get resoruce type service for the designtime classes
            </summary>
            <param name="strName">The resource name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.IsInherited(Gizmox.WebGUI.Forms.Skins.Resources.SkinResource)">
            <summary>
            Determines whether the specified obj skin resource is inherited.
            </summary>
            <param name="objSkinResource">The obj skin resource.</param>
            <returns>
            	<c>true</c> if the specified obj skin resource is inherited; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <param name="key">The <see cref="T:System.Object"/> to use as the key of the element to add.</param>
            <param name="value">The <see cref="T:System.Object"/> to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null. </exception>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary"/> object. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IDictionary"/> is read-only.-or- The <see cref="T:System.Collections.IDictionary"/> has a fixed size. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IDictionary#Clear">
            <summary>
            Removes all elements from the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IDictionary"/> object is read-only. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IDictionary#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IDictionary"/> object contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary"/> object.</param>
            <returns>
            true if the <see cref="T:System.Collections.IDictionary"/> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> object for the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IDictionaryEnumerator"/> object for the <see cref="T:System.Collections.IDictionary"/> object.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IDictionary#Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null. </exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IDictionary"/> object is read-only.-or- The <see cref="T:System.Collections.IDictionary"/> has a fixed size. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero. </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.-or- <paramref name="index"/> is equal to or greater than the length of <paramref name="array"/>.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>. </exception>
            <exception cref="T:System.ArgumentException">The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.DesignedType">
            <summary>
            Gets the current designed type
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.Data">
            <summary>
            The internal theme data
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.IsLoaded">
            <summary>
            Gets a value indicating whether this instance is loaded.
            </summary>
            <value><c>true</c> if this instance is loaded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.DataStore">
            <summary>
            Gets the data store.
            </summary>
            <value>The data store.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.DesignResourceReader">
            <summary>
            Gets the design resource reader.
            </summary>
            <value>The design resource reader.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.DesignModeInternal">
            <summary>
            Gets a value indicating whether in design mode.
            </summary>
            <value><c>true</c> if in design mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IDictionary#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary"/> object has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IDictionary"/> object has a fixed size; otherwise, false.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IDictionary#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IDictionary"/> object is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IDictionary"/> object is read-only; otherwise, false.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IDictionary#Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> object containing the keys of the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Collections.ICollection"/> object containing the keys of the <see cref="T:System.Collections.IDictionary"/> object.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IDictionary#Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> object containing the values in the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Collections.ICollection"/> object containing the values in the <see cref="T:System.Collections.IDictionary"/> object.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#IDictionary#Item(System.Object)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#ICollection#Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.ICollection"/>.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe).
            </summary>
            <value></value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"/> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinComponent.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.
            </summary>
            <value></value>
            <returns>An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>.</returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Theme.CreateData">
            <summary>
            Creates the theme data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Theme.CreateDataStore">
            <summary>
            Creates the data store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Theme.IsInherited(Gizmox.WebGUI.Forms.Skins.Resources.SkinResource)">
            <summary>
            Determines whether the specified skin resource is inherited.
            </summary>
            <param name="objSkinResource">The skin resource.</param>
            <returns>
            	<c>true</c> if the specified skin resource is inherited; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Theme.ThemeType">
            <summary>
            Gets the current theme type
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Theme.Gizmox#WebGUI#Forms#Skins#ISkinable#Theme">
            <summary>
            Gets the theme name related to the skinable component.
            </summary>
            <value>The theme name related to the skinable component.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Skin">
            <summary>
            Represents a control skin base class
            </summary>
            <remarks>
            Should not be serializable as the skins are not 
            part of the application state but part of the request state.
            </remarks>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Skin.mobjThemeData">
            <summary>
            The internal theme data of the skin component
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Skin.mstrThemeDataName">
            <summary>
            The name of the theme that was used to get theme data
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Skin.mobjOwner">
            <summary>
            The owner of the current skin.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Skin"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.SetOwner(Gizmox.WebGUI.Forms.Skins.ISkinable)">
            <summary>
            Sets the owner of the current skin.
            </summary>
            <param name="objOwner">The owner of the current skin.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.CreateData">
            <summary>
            Creates the skin data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.CreateDataStore">
            <summary>
            Creates the data store.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.IsSkinFileResource(Gizmox.WebGUI.Forms.Skins.Resources.SkinResource)">
            <summary>
            Returns true if the resource is a file resource
            </summary>
            <param name="objSkinResource"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetValue``1(System.String,``0)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T">The type of the value that should be returned</typeparam>
            <param name="strKey">The key.</param>
            <param name="objDefaultValue">The default value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.HasValue(System.String)">
            <summary>
            Determines whether the specified key has value.
            </summary>
            <param name="strKey">The key.</param>
            <returns>
            	<c>true</c> if the specified key has value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetAmbientValue``1(System.String,``0)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T">The type of the value that should be returned</typeparam>
            <param name="strKey">The key.</param>
            <param name="objDefaultValue">The default value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetImageWidth(Gizmox.WebGUI.Forms.Skins.ImageResourceReference,System.Int32)">
            <summary>
            Gets the width of the image.
            </summary>
            <param name="objImageResourceReference">The resource reference.</param>
            <param name="intDefault">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetImageHeight(Gizmox.WebGUI.Forms.Skins.ImageResourceReference,System.Int32)">
            <summary>
            Gets the height of the image.
            </summary>
            <param name="objImageResourceReference">The resource reference.</param>
            <param name="intDefault">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetImageSize(Gizmox.WebGUI.Forms.Skins.ImageResourceReference,System.Drawing.Size)">
            <summary>
            Gets the size of the image.
            </summary>
            <param name="objImageResourceReference">The image resource reference.</param>
            <param name="objDefault">The default size to return if no image was found.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetImageHeight(System.String,System.Int32)">
            <summary>
            Gets the height of the image.
            </summary>
            <param name="strKey">The resource key.</param>
            <param name="intDefault">The int default.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetMaxImageHeight(System.Int32,System.String[])">
            <summary>
            Gets the maximum height a list of images.
            </summary>
            <param name="intDefault">The int default.</param>
            <param name="strKeys">The resource keys.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetImageWidth(System.String,System.Int32)">
            <summary>
            Gets the width of the image.
            </summary>
            <param name="strKey">The resource key.</param>
            <param name="intDefault">The int default.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetMaxImageWidth(System.Int32,System.String[])">
            <summary>
            Gets the maximum width a list of images.
            </summary>
            <param name="intDefault">The int default.</param>
            <param name="strKeys">The resource keys.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetResourceName(Gizmox.WebGUI.Forms.Skins.Resources.SkinResource)">
            <summary>
            Gets the resource name from the resource dictionary
            </summary>
            <param name="skinResource"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.SetResourceName(Gizmox.WebGUI.Forms.Skins.Resources.SkinResource,System.String)">
            <summary>
            Sets the resource name in the resource dictionary
            </summary>
            <param name="skinResource"></param>
            <param name="strName"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.ShouldSerialize(System.String)">
            <summary>
            Indicates if should serialize a resource
            </summary>
            <param name="strKey"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.Reset(System.String)">
            <summary>
            Resets a givven key
            </summary>
            <param name="strKey"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetResourcePath(System.String)">
            <summary>
            Gets the full resource path.
            </summary>
            <param name="strResourceName">The resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetResourceHandle(System.String)">
            <summary>
            Gets the resource handle.
            </summary>
            <param name="strResourceName">The resource name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.Delete(Gizmox.WebGUI.Forms.Skins.Resources.SkinResource)">
            <summary>
            Deletes the specified obj skin resource.
            </summary>
            <param name="objSkinResource">The obj skin resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.RemoveOverridedValueResources">
            <summary>
            Removes the overrided value resources.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetOverridedFileResources">
            <summary>
            Gets the overrided file resources.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.GetOverridedResourcesByType(System.Type)">
            <summary>
            Gets the type of the overrided resources by.
            </summary>
            <param name="objResourceType">Type of the obj resource.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Skin.IsInherited(Gizmox.WebGUI.Forms.Skins.Resources.SkinResource)">
            <summary>
            Determines whether the specified skin resource is inherited.
            </summary>
            <param name="objSkinResource">The skin resource.</param>
            <returns>
            	<c>true</c> if the specified skin resource is inherited; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Skin.Resources">
            <summary>
            Gets the resources.
            </summary>
            <value>The resources.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Skin.ThemeData">
            <summary>
            Gets the theme data.
            </summary>
            <value>The theme data.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Skin.Owner">
            <summary>
            Gets the skin owner.
            </summary>
            <value>The skin owner.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Skin.SkinType">
            <summary>
            Gets the current skin type
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Skin.ThemeType">
            <summary>
            Gets the current theme type
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.PresetnationCapabilities">
            <summary>
            Provides enumeration of presentation capabilities
            </summary>    
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresetnationCapabilities.None">
            <summary>
            Indicates that the capabilities where not yet detected
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresetnationCapabilities.GifSupport">
            <summary>
            Indicates if presentation layer can display gifs
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresetnationCapabilities.PngSupport">
            <summary>
            Indicates if presentation layer can display pngs
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.Presentation">
            <summary>
            Provides enumeration of presentation layer types related to resources
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Presentation.Agnostic">
            <summary>
            The resource can be used by any presentation layer
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Presentation.Browser">
            <summary>
            The resource can be used only for browser presentation layer
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Presentation.Silverlight">
            <summary>
            The resource can be used only for silverlight presentation layer
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.PresentationEngine">
            <summary>
            Provides enumeration of presentation engines related to resources
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresentationEngine.Agnostic">
            <summary>
            The resource can be used by any presentation engine
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresentationEngine.InternetExplorer">
            <summary>
            The resource can be used by internet explorer presentation engine only
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresentationEngine.Mozilla">
            <summary>
            The resource can be used by mozilla presentation engine only
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresentationEngine.WebKit">
            <summary>
            The resource can be used by webkit presentation engine only
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRole">
            <summary>
            Provides enumeration of presentation roles related to resources
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRole.Custom">
            <summary>
            Role is custom and not handled in any presentation layer by defalut. 
            You can call this resource an use it as a server resources for the presentation layer.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRole.BrowserCode">
            <summary>
            The resource will be collected as a common core code that provides services for browser
            interactions and browser controls implementations
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRole.BrowserStyle">
            <summary>
            The resource will be collected as a common core code that provides styling for browser
            interactions and browser controls implementations
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRole.BrowserTemplate">
            <summary>
            The resource will be collected as a common core code that provides templates for browser
            interactions and browser controls implementations
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRole.SilverlightTemplate">
            <summary>
            The resource will be collected as a common core code that provides templates for silverlight
            interactions and sliverlight controls implementations
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.PresentationEngineConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.PresentationEngineConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRoleConverter"/> class.
            </summary>
            <param name="objType">Type of the obj.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.PresentationEngineConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets a collection of standard values for the data type this validator is designed for.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or null if the data type does not support a standard set of values.
            </returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRoleConverter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRoleConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRoleConverter"/> class.
            </summary>
            <param name="objType">Type of the obj.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.PresentationRoleConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets a collection of standard values for the data type this validator is designed for.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or null if the data type does not support a standard set of values.
            </returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.ScriptContent">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.TextFileContent">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.FileContent">
            <summary>
            Represents a file content
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.FileContent.mlngContentLength">
            <summary>
            Holds the file byte length
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileContent.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.FileContent"/> class.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileContent.LoadCommonProperties(System.IO.Stream)">
            <summary>
            Loads the common properties.
            </summary>
            <param name="objStream">The obj stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileContent.Load(System.IO.Stream)">
            <summary>
            Loads the content from stream.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileContent.Save(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.Stream)">
            <summary>
            Saves the content to a stream
            </summary>
            <param name="objOwner">The obj owner.</param>
            <param name="objStream">The obj stream.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileContent.ContentLength">
            <summary>
            Gets the length of the original content.
            </summary>
            <value>The length of the original content.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileContent.ContentStream">
            <summary>
            Gets the content stream.
            </summary>
            <value>The content stream.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.TextFileContent.mobjContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileContent.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.TextFileContent"/> class.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileContent.Load(System.IO.Stream)">
            <summary>
            Loads the content from stream.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileContent.Save(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.Stream)">
            <summary>
            Saves the content to a stream
            </summary>
            <param name="objOwner">The obj owner.</param>
            <param name="objStream">The obj stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileContent.Save(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
             <summary> 
            Saves the content to the stream writer.
             </summary>
             <param name="objOwner">The obj owner.</param>
             <param name="objStreamWriter">The obj stream writer.</param>
             <param name="objController">The obj controller.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.TextFileContent.ContentStream">
            <summary>
            Gets the content stream.
            </summary>
            <value>The content stream.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ScriptContent.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.ScriptContent"/> class.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.FileResourceContentReference">
            <summary>
            Holds a reference to the file content
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.FileResourceContentReference.mobjOwner">
            <summary>
            The resource owner
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.FileResourceContentReference.mstrResoruce">
            <summary>
            The resource name
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.FileResourceContentReference.mobjDataStore">
            <summary>
            The skin data store
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileResourceContentReference.#ctor(Gizmox.WebGUI.Forms.Skins.SkinDataStore,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.FileResourceContentReference"/> class.
            </summary>
            <param name="objDataStore">The Skin Data Store.</param>
            <param name="objOwner">The owner.</param>
            <param name="strResource">The resource.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResourceContentReference.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResourceContentReference.Resoruce">
            <summary>
            Gets the resoruce.
            </summary>
            <value>The resoruce.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.FileResourceContentReference.Content">
            <summary>
            Gets the content.
            </summary>
            <value>The content.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.SerializableStore">
            <summary>
            Provides a base class for fieldless objects which need to implement custom serialization
            or use property store serialization exclusivly
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.SerializableObject">
            <summary>
            Provides a base class to objects that require 
            optimized serialization support for property namagement 
            and event management.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableObject.EventEntryProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableObject.mobjProperties">
            <summary>
            A local property store object
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.RemoveValue``1(Gizmox.WebGUI.Forms.SerializableProperty)">
            <summary>
            Removes the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objSerializableProperty">The serializable property.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.SetValue``1(Gizmox.WebGUI.Forms.SerializableProperty,``0)">
            <summary>
            Sets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objSerializableProperty">The serializable property.</param>
            <param name="objValue">The obj value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.GetValue``1(Gizmox.WebGUI.Forms.SerializableProperty,System.Boolean@)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objSerializableProperty">The serializable property.</param>
            <param name="blnFound">if set to <c>true</c> found value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.GetValue``1(Gizmox.WebGUI.Forms.SerializableProperty)">
            <summary>
            Gets the value.
            </summary>
            <param name="objSerializableProperty">The serializable property.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.GetValue``1(Gizmox.WebGUI.Forms.SerializableProperty,``0)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objSerializableProperty">The serializable property.</param>
            <param name="objDefault">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.EnsurePropertiesIfNeeded(System.Type)">
            <summary>
            Ensures the properties is created if needed.
            </summary>
            <param name="objGetType">The type to get.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.ContainsValue``1(Gizmox.WebGUI.Forms.SerializableProperty)">
            <summary>
            Determines whether the specified property key contains value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objSerializableProperty">The serializable property.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.AddHandler(Gizmox.WebGUI.Forms.SerializableEvent,System.Delegate)">
            <summary>
            Adds a delegate to the list.
            </summary>
            <param name="objSerializableEvent">The serializable event. </param> 
            <param name="objValue">The delegate to add to the list. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.RemoveHandler(Gizmox.WebGUI.Forms.SerializableEvent,System.Delegate)">
            <summary>
            Removes a delegate from the list.
            </summary>
            <param name="objValue">The delegate to remove from the list. </param>
            <param name="objSerializableEvent">The serializable event. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.GetHandler(Gizmox.WebGUI.Forms.SerializableEvent)">
            <summary>Gets the delegate for the specified event key.</summary>
            <returns>The delegate for the specified key, or null if a delegate does not exist.</returns>
            <param name="objSerializableEvent">The serialization event. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.HasHandler(Gizmox.WebGUI.Forms.SerializableEvent)">
            <summary>
            Determines whether the specified event key has a handler.
            </summary>
            <param name="objSerializableEvent">The event key.</param>
            <returns>
            	<c>true</c> if the specified event key has a handler; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.GetPropertyStoreObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="objSerializationInfo">The serialization info.</param>
            <param name="objStreamingContext">The streaming context.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.SetPropertyStoreObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the object data.
            </summary>
            <param name="objSerializationInfo">The serialization info.</param>
            <param name="objStreamingContext">The streaming context.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.FindHandler(System.Int32)">
            <summary>
            Finds the handler with in the list.
            </summary>
            <param name="intEventKey">The event key.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableObject.Properties">
            <summary>
            Gets the control properties.
            </summary>
            <value>The control properties.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableObject.CanRaiseEvents">
            <summary>
            Gets a value indicating whether the component can raise an event.
            </summary>
            <returns>
            true if the component can raise events; otherwise, false. The default is true.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableObject.HandlerListHeadEntry">
            <summary>
            Gets or sets the first handler
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.SerializableObject.HandlerListEntry">
            <summary>
            Provides implementation for a linked handler list
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableObject.HandlerListEntry.Handler">
            <summary>
            The handler delegate
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableObject.HandlerListEntry.Key">
            <summary>
            The handler key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableObject.HandlerListEntry.Next">
            <summary>
            The next handler list entry
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableObject.HandlerListEntry.#ctor(System.Int32,System.Delegate,Gizmox.WebGUI.Forms.SerializableObject.HandlerListEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.SerializableObject.HandlerListEntry"/> class.
            </summary>
            <param name="key">The event key.</param>
            <param name="handler">The event handler.</param>
            <param name="next">The next handler list entry.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.SerializableStore"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.SerializableStore"/> class.
            </summary>
            <param name="objSerializationInfo">The serialization info.</param>
            <param name="objStreamingContext">The streaming context.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableStore.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="objSerializationInfo">The serialization info.</param>
            <param name="objStreamingContext">The streaming context.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IUserControl">
            <summary>
            Defines a UserControl
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IControl">
            <summary>
            Summary description for IControl.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IEventHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IEventHandler.FireEvent(Gizmox.WebGUI.Common.Interfaces.IEvent)">
            <summary>
            Fires an event event to be handled by the event handler.
            </summary>
            <param name="objEvent">The event.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent.UnregisterComponents">
            <summary>
            Unregisters the components.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent.RegisterContextMenu">
            <summary>
            Registers the context menu.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent.UnregisterContextMenu">
            <summary>
            Unregisters the context menu.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent.IsRegistered">
            <summary>
            Gets or sets a value indicating whether this instance is registered.
            </summary>
            <value>
            	<c>true</c> if this instance is registered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value>
            	<c>true</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent.ID">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IControl.SuspendLayout">
            <summary>
            Suspends the layout.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IControl.ResumeLayout(System.Boolean)">
            <summary>
            Resumes the layout.
            </summary>
            <param name="p">if set to <c>true</c> [p].</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IControl.BringToFront">
            <summary>
            Brings to front.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IControl.HasControls">
            <summary>
            Gets a value indicating whether this instance has controls.
            </summary>
            <value>
            	<c>true</c> if this instance has controls; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IControl.Controls">
            <summary>
            Gets the controls.
            </summary>
            <value>The controls.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IControl.Site">
            <summary>
            Gets or sets the site.
            </summary>
            <value>The site.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IControl.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IControl.Left">
            <summary>
            Gets or sets the left.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IControl.Top">
            <summary>
            Gets or sets the top.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IControl.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IControl.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IUserControl.SetContext(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Sets the context.
            </summary>
            <param name="objContext">The obj context.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IMainMenu">
            <summary>
            Defines a MainMenu
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IMainMenu.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IMainMenu.MenuItems">
            <summary>
            Gets the menu items.
            </summary>
            <value>The menu items.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IServer">
            <summary>
            Summary description for IServer.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.INonSerializable">
            <summary>
            Marks a class as non serializable for scalable server floating state
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IServer.MapPath(System.String)">
            <summary>
            Returns the physical file path that corresponds to the specified virtual path on the Web server.
            </summary>
            <param name="strPath">The virtual path on the Web server.</param>
            <returns>The physical file path that corresponds to path.</returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IGatewayControl">
            <summary>
            Summary description for IGatewayControl.
            </summary>
            <remarks>
            IGatewayControl interface hides the IGatewayComponent for backwords compatibility. If you would like to use IGatewayComponent you should not use this interface.
            </remarks>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IGatewayControl.GetGatewayHandler(Gizmox.WebGUI.Common.Interfaces.IContext,System.String)">
            <summary>
            Gets the gateway handler.
            </summary>
            <param name="objContext">Request context.</param>
            <param name="strAction">Request action code.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IStaticGateway">
            <summary>
            Summary description for IStaticGatewayHandler.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IStaticGateway.GetGatewayHandler(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the gateway handler.
            </summary>
            <param name="objContext">Request context.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IGatewayComponent">
            <summary>
            Provides a way for a componenet to handle requests. This interface is implemented by d
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IGatewayComponent.ProcessRequest(Gizmox.WebGUI.Common.Interfaces.IContext,System.String)">
            <summary>
            Provides a way to custom handle requests.
            </summary>
            <param name="objContext">The request context.</param>
            <param name="strAction">The request action.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ICommand">
            <summary>
            Summary description for ICommand.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ICommand.Render(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IResponseWriter,System.Int64)">
            <summary>
            Renders the specified obj context.
            </summary>
            <param name="objContext">The obj context.</param>
            <param name="objWriter">The obj writer.</param>
            <param name="lngRequestID">The LNG request ID.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Client.Design.IClientObjectController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientObjectController.Initialize">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientObjectController.InitializeNew">
            <summary>
            Initializes the new.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientObjectController.Load">
            <summary>
            Loads this instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientObjectController.Terminate">
            <summary>
            Terminates this instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientObjectController.SetParent(Gizmox.WebGUI.Client.Design.IClientObjectController)">
            <summary>
            Sets the parent.
            </summary>
            <param name="objController">The obj controller.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Client.Design.IClientObjectController.SourceObject">
            <summary>
            Gets the controlled web object
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Client.Design.IClientObjectController.TargetObject">
            <summary>
            Gets the controlled winforms object
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializablePropertyDescriptorWrapper.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializablePropertyDescriptorWrapper"/> class.
            </summary>
            <param name="objPropertyDescriptor">The property info.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Design.DesignTimeControllerAttribute">
            <summary>
            Provides reference to the design time controller
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Design.DesignTimeControllerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Design.DesignTimeControllerAttribute"/> class.
            </summary>
            <param name="strTypeName">Name of the STR type.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Design.DesignTimeControllerAttribute.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateContent">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.mobjNamespaces">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.mobjContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent"/> class.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.Load(System.IO.Stream)">
            <summary>
            Loads the content from stream.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.LoadContent(System.String)">
            <summary>
            Loads the file index content.
            </summary>
            <param name="strContent">The content to index.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.Save(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.Stream)">
            <summary>
             Saves the content to a stream
            </summary>
            <param name="objOwner">The obj owner.</param>
            <param name="objStream">The obj stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.Save(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Saves the content to the stream writer.
            </summary>
            <param name="objOwner">The obj owner.</param>
            <param name="objStreamWriter">The obj stream writer.</param>
            <param name="objController">The obj controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.WriteStart(System.IO.StreamWriter)">
            <summary>
            Performs writing on starting collector serialization
            </summary>
            <param name="objStreamWriter"></param>        
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.WriteEnd(System.IO.StreamWriter)">
            <summary>
            Performs writing on ending collector serialization
            </summary>
            <param name="objStreamWriter"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.PreserveDocumentElement">
            <summary>
            Gets a value indicating whether to preserve document element.
            </summary>
            <value>
            	<c>true</c> if to preserve document element; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.PreserveWhitespace">
            <summary>
            Gets a value indicating whether to preserve whitespace.
            </summary>
            <value><c>true</c> if to preserve whitespace; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.Namespaces">
            <summary>
            Gets the namespaces.
            </summary>
            <value>The namespaces.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileContent.ContentStream">
            <summary>
            Gets the content stream.
            </summary>
            <value>The content stream.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateContent.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateContent"/> class.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateContent.LoadContent(System.String)">
            <summary>
            Loads the file index content.
            </summary>
            <param name="strContent">The content to index.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateContent.WriteStart(System.IO.StreamWriter)">
            <summary>
            Performs writing on starting collector serialization
            </summary>
            <param name="objStreamWriter"></param>        
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateContent.WriteEnd(System.IO.StreamWriter)">
            <summary>
            Performs writing on ending collector serialization
            </summary>
            <param name="objStreamWriter"></param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightControlResource">
            <summary>
            Represents a silverlight control mapping
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightControlResource.mstrControlType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightControlResource.mstrControlStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightControlResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightControlResource"/> class.
            </summary>        
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightControlResource.ControlType">
            <summary>
            Gets or sets the type of the control.
            </summary>
            <value>The type of the control.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightControlResource.ControlStyle">
            <summary>
            Gets or sets the control style.
            </summary>
            <value>The control style.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.BinaryContent">
            <summary>
            Represents a binary content
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.BinaryContent.marrData">
            <summary>
            The file binary content
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.BinaryContent.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.BinaryContent"/> class.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.BinaryContent.Load(System.IO.Stream)">
            <summary>
            Loads the content from stream.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.BinaryContent.Save(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.Stream)">
            <summary>
            Saves the content to a stream
            </summary>
            <param name="objOwner">The obj owner.</param>
            <param name="objStream">The obj stream.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.BinaryContent.ContentStream">
            <summary>
            Gets the content stream.
            </summary>
            <value>The content stream.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ISession">
            <summary>
            	<para>Summary description for ISession.</para>
            	<para>The session scope can be accessed through the VWGContext.Current.Session
                static context or through the Form.Context.Session property and serves Visual
                WebGui applications as the HTTP session servers ASP.NET applications.</para>
            </summary>
            <example>
            	<code lang="CS">
            		<![CDATA[
            //Access the Session from form context
            this.Context.Session["ParameterName"] = "Value";
             
            //Access the Session from the static context 
            VWGContext.Current.Session["ParameterName"] = "Value";]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            'Access the Session from form context
            Me.Context.Session("ParameterName") = "Value"
             
            'Access the Session from the static context 
            VWGContext.Current.Session("ParameterName") = "Value"]]>
            	</code>
            </example>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ISession.GetRegisteredComponent(System.String)">
            <summary>
            
            </summary>
            <param name="strComponentId"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ISession.GetRegisteredComponent(System.Int64)">
            <summary>
            
            </summary>
            <param name="strComponentId"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ISession.RegisterComponent(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent)">
            <summary>
            Registers a component.
            </summary>
            <param name="objComponent">component.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ISession.UnRegisterComponent(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent)">
            <summary>
            Unregisters a component.
            </summary>
            <param name="objComponent">component.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ISession.RegisterBatch(System.Collections.ICollection)">
            <summary>
            Registers the component batch.
            </summary>
            <param name="objCollection">Obj collection.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ISession.UnRegisterBatch(System.Collections.ICollection)">
            <summary>
            Unregister component batch.
            </summary>
            <param name="objCollection">Obj collection.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ISession.IsLoggedOn">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ISession.Item(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ISession.SessionID">
            <summary>
            Gets the current session ID.
            </summary>
            <value></value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IRouter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IRouter.GetArguments(System.String,System.String)">
            <summary>
            Gets the arguments.
            </summary>
            <param name="strForm">The STR form.</param>
            <param name="strInstance">The STR instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IRouter.GetResults(System.String,System.String)">
            <summary>
            Gets the results.
            </summary>
            <param name="strForm">The STR form.</param>
            <param name="strInstance">The STR instance.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedHandler">
            <summary>
            Delegate for the IObservableItem interface
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedArgs">
            <summary>
            Arguments for the ObservableItemPropertyChangedHandler event handler
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedArgs.mstrProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedArgs.mobjSubject">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedArgs"/> class.
            </summary>
            <param name="strProperty">The STR property.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedArgs.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedArgs"/> class.
            </summary>
            <param name="strProperty">The property.</param>
            <param name="objSubject">The subject.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedArgs.Property">
            <summary>
            Gets the name of the property that has changed
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedArgs.Subject">
            <summary>
            Gets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IObservableItem">
            <summary>
            Intended to be used for objects that need to be observed
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IObservableItem.ObservableItemPropertyChanged">
            <summary>
            Occurs when [observable item property changed].
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ILogonForm">
            <summary>
            Impementation for ILogonForm class.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ILink">
            <summary>
            Summary description for ILink.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILink.Url">
            <summary>
            Gets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IFormLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IFormLink.FormType">
            <summary>
            Gets the form reference type 
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IFormLink.FormInstance">
            <summary>
            Gets the form instance id
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IFormLink.FormApplication">
            <summary>
            Gets the form application name
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ILinkParameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.WindowStyle">
            <summary>
            Gets or sets the window style.
            </summary>
            <value>The window style.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.FullScreen">
            <summary>
            Gets or sets a value indicating whether [full screen].
            </summary>
            <value><c>true</c> if [full screen]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.ShowLocationBar">
            <summary>
            Gets or sets a value indicating whether [show location bar].
            </summary>
            <value><c>true</c> if [show location bar]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.ShowMenuBar">
            <summary>
            Gets or sets a value indicating whether [show menu bar].
            </summary>
            <value><c>true</c> if [show menu bar]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.ShowTitleBar">
            <summary>
            Gets or sets a value indicating whether [show title bar].
            </summary>
            <value><c>true</c> if [show title bar]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.ShowToolBar">
            <summary>
            Gets or sets a value indicating whether [show tool bar].
            </summary>
            <value><c>true</c> if [show tool bar]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.ShowStatusBar">
            <summary>
            Gets or sets a value indicating whether [show status bar].
            </summary>
            <value><c>true</c> if [show status bar]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.Resizable">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Gizmox.WebGUI.Common.Interfaces.ILinkParameters"/> is resizable.
            </summary>
            <value><c>true</c> if resizable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.ScrollBars">
            <summary>
            Gets or sets a value indicating whether [scroll bars].
            </summary>
            <value><c>true</c> if [scroll bars]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.QueryString">
            <summary>
            Gets the query string.
            </summary>
            <value>The query string.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkParameters.Form">
            <summary>
            Gets the form.
            </summary>
            <value>The form.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ILinkArguments">
            <summary>
            Link arguments storage
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ILinkArguments.Clear">
            <summary>
            Clears the argument collection
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkArguments.Item(System.String)">
            <summary>
            Set or get arguments
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkArguments.Names">
            <summary>
            Gets an array of argument names
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ILinkArguments.Count">
            <summary>
            Gets the arguments count
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IContextParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContextParams.ScreenAvailableHeight">
            <summary>
            Gets the height of the screen available.
            </summary>
            <value>The height of the screen available.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContextParams.ScreenAvailableWidth">
            <summary>
            Gets the width of the screen available.
            </summary>
            <value>The width of the screen available.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContextParams.ScreenHeight">
            <summary>
            Gets the height of the screen.
            </summary>
            <value>The height of the screen.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContextParams.ScreenWidth">
            <summary>
            Gets the width of the screen.
            </summary>
            <value>The width of the screen.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContextParams.ScreenColorDepth">
            <summary>
            Gets the screen color depth.
            </summary>
            <value>The screen color depth.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContextParams.Browser">
            <summary>
            Gets the browser.
            </summary>
            <value>The browser.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContextParams.MeasurementGraphics">
            <summary>
            Gets the measurement graphics.
            </summary>
            <value>The measurement graphics.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.InvokationUniqueness">
            <summary>
            Used to define the uniqueness of a method invokation
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.InvokationUniqueness.None">
            <summary>
            Invokation can appear multiple times in a single response.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.InvokationUniqueness.Component">
            <summary>
            Invokation can appear one time for every component in the a single response.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.InvokationUniqueness.Global">
            <summary>
            Invokation can appear one time in a single response
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IContextMethodInvoker">
            <summary>
            Summary description for IContextMethodInvoker.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextMethodInvoker.InvokeMethod(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,Gizmox.WebGUI.Common.Interfaces.InvokationUniqueness,System.String,System.Object[])">
            <summary>
            Invokes the method.
            </summary>
            <param name="objTarget">The obj target.</param>
            <param name="enmUniqueness">The enm uniqueness.</param>
            <param name="strMember">The STR member.</param>
            <param name="arrArgs">The arr args.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextMethodInvoker.RenderMehtods(Gizmox.WebGUI.Common.Interfaces.IResponseWriter,System.Int64)">
            <summary>
            Renders the mehtods.
            </summary>
            <param name="objWriter">The obj writer.</param>
            <param name="lngRequestID">The LNG request ID.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextMethodInvoker.GetMethodName(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.String)">
            <summary>
            Get the client method name
            </summary>
            <param name="objTarget">The component</param>
            <param name="strMember">The method member name</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IContextClipboard">
            <summary>
            Provides access to the current context's clipboard
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextClipboard.SetDataObject(Gizmox.WebGUI.Forms.IDataObject,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Attempts to place data on the system Clipboard the specified number of times and with the specified delay between attempts, optionally leaving the data on the Clipboard after the application exits.
            </summary>
            <param name="copy">true if you want data to remain on the Clipboard after this application exits; otherwise, false.</param>
            <param name="data">The data to place on the Clipboard.</param>
            <param name="retryTimes">The number of times to attempt placing the data on the Clipboard.</param>
            <param name="retryDelay">The number of milliseconds to pause between attempts. </param>
            <exception cref="T:System.ArgumentNullException">data is null.</exception>
            <exception cref="T:System.Runtime.InteropServices.ExternalException">Data could not be placed on the Clipboard. This typically occurs when the Clipboard is being used by another process.</exception>
            <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute"></see> to your application's Main method. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">retryTimes is less than zero.-or-retryDelay is less than zero.</exception>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextClipboard.GetDataObject">
            <summary>
            Retrieves the data that is currently on the system Clipboard.
            </summary>
            <returns>An <see cref="T:Gizmox.WebGUI.Forms.IDataObject"></see> that represents the data currently on the Clipboard, or null if there is no data on the Clipboard.</returns>
            <exception cref="T:System.Runtime.InteropServices.ExternalException">Data could not be retrieved from the Clipboard. This typically occurs when the Clipboard is being used by another process.</exception>
            <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode and the <see cref="P:Gizmox.WebGUI.Forms.Application.MessageLoop"></see> property value is true. Add the <see cref="T:System.STAThreadAttribute"></see> to your application's Main method. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextClipboard.Clear">
            <summary>
            Removes all data from the Clipboard.
            </summary>
            <exception cref="T:System.Threading.ThreadStateException">The current thread is not in single-threaded apartment (STA) mode. Add the <see cref="T:System.STAThreadAttribute"></see> to your application's Main method.</exception>
            <exception cref="T:System.Runtime.InteropServices.ExternalException">The Clipboard could not be cleared. This typically occurs when the Clipboard is being used by another process.</exception>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IContextTerminate">
            <summary>
            Handles context termination
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextTerminate.Terminate(System.Boolean)">
            <summary>
            Terminates the current context
            </summary>
            <param name="blnForce"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextTerminate.SetPendingTermination">
            <summary>
            Set pending termination for current context
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextTerminate.ClearPendingTermination">
            <summary>
            Clears pending termination for current context
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IContextPipeline">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextPipeline.ProcessRequest(System.String)">
            <summary>
            Processes the request.
            </summary>
            <param name="strEvents">The STR events.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextPipeline.GenerateResponse(System.IO.TextWriter,System.Int64)">
            <summary>
            Generates the response.
            </summary>
            <param name="objOutput">The obj output.</param>
            <param name="lngRequestId">The LNG request id.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IContextVariables">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextVariables.GetContextVariable(System.String)">
            <summary>
            Gets the context variable.
            </summary>
            <param name="strVariableName">Name of the STR variable.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IContextCommonDialogHandler">
            <summary>
            Context support for common dialog handling
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContextCommonDialogHandler.ShowDialog(Gizmox.WebGUI.Common.Interfaces.ICommonDialog,Gizmox.WebGUI.Common.Interfaces.IForm,System.EventHandler,System.EventHandler)">
            <summary>
            Shows the dialog.
            </summary>
            <param name="objCommonDialog">The obj common dialog.</param>
            <param name="objOwner">The obj owner.</param>
            <param name="objCloseHandler">The obj close handler.</param>
            <param name="objDirectHandler">The obj direct handler.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ICommonDialogHandler">
            <summary>
            The actual common dialog handler
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ICommonDialogHandler.DirectHandler">
            <summary>
            Gets the common dialog direct handler
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ICommonDialogHandler.DialogResult">
            <summary>
            Gets the common dialog result value
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ICommonDialog">
            <summary>
            Common dialog interface
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ICommonDialog.OnApply">
            <summary>
            Raise the apply event
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IContext">
            <summary>
            	<para>Represents the current VWG application context.</para>
            	<para>Normally web application environments contains three storage scopes which are
                application scope, session scope and cookies scope. Visual WebGui has an extra
                storage scope which is the context scope. Every Visual WebGui session can contain
                several contexts. A context is a scope which has its own main form and manages its
                own state.</para>
            	<para>Storing data in the context scope can be a way to replace usages of static
                variables in a WinForms application as it simulates a confined application
                context.</para>
            	<para>A sample usage of the context can be two online application services that are
                originating from the same web application. Each application is mapped through a
                different URL and contains its own context scope.</para>
            </summary>
            <example>
            	<code lang="CS">
            		<![CDATA[
            //Access the context from from
            this.Context["ParameterName"] = "Value";
             
            //Access the static context 
            VWGContext.Current["ParameterName"] = "Value";]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            ''Access the context from from
                    Me.Context("ParameterName") = "Value"
             
                    ''Access the static context 
                    VWGContext.Current("ParameterName") = "Value"]]>
            	</code>
            </example>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContext.OpenLink(Gizmox.WebGUI.Common.Interfaces.ILink)">
            <summary>
            Open a link in a new window without parameters.
            </summary>
            <param name="objLink"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContext.OpenLink(Gizmox.WebGUI.Common.Interfaces.ILink,Gizmox.WebGUI.Common.Interfaces.ILinkParameters)">
            <summary>
            Opens a link in a new window with parameters.
            </summary>
            <param name="objLink"></param>
            <param name="objLinkParameters"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContext.Redirect(System.String)">
            <summary>
            Redirects the browser to a diffrent url
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContext.Transfer(Gizmox.WebGUI.Common.Interfaces.IForm)">
            <summary>
            Transfers the current application to the specified form
            </summary>
            <param name="objForm">The form to transfer to.</param>
            <remarks>
            Transfer closes the current form and provides a diffrent form.
            </remarks>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IContext.Terminate(System.Boolean)">
            <summary>
            Terminates the current context.
            </summary>
            <param name="blnLogOff">if set to <c>true</c> [BLN log off].</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.HttpContext">
            <summary>
            The current request http context.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.ExecutionMode">
            <summary>
            Returns the application running mode
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Request">
            <summary>
            The current VWG request object.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Session">
            <summary>
            The current VWG session object.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Server">
            <summary>
            The current VWG server object
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Application">
            <summary>
            The current VWG application object.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Response">
            <summary>
            The current VWG response object.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Cookies">
            <summary>
            Cookies manager helps storing data cross sessions.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.ActiveForm">
            <summary>
            The current active form.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.MainForm">
            <summary>
            The current context top form.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Referrer">
            <summary>
            The refering application.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Config">
            <summary>
            Get the application configuration.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.RightToLeft">
            <summary>
            Indicates wether the UI is order from right to lift.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.CurrentUICulture">
            <summary>
            The current context UI culture.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.CurrentTheme">
            <summary>
            The current selected theme.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Arguments">
            <summary>
            Gets the arguments manager used to handle parameters passed to the current VWG application from the calling application.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Results">
            <summary>
            Gets the result manager used to pass parameters to the calling VWG application.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Item(System.String)">
            <summary>
            Gets or sets a context parameter
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.Presentation">
            <summary>
            Gets the presentation.
            </summary>
            <value>The presentation.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.PresentationEngine">
            <summary>
            Gets the presentation engine.
            </summary>
            <value>The presentation engine.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IContext.PresetnationCapabilities">
            <summary>
            Gets the presetnation capabilities.
            </summary>
            <value>The presetnation capabilities.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Serialization.SerializableFontWrapper">
            <summary>
            Provides a serializable wrapper for font object
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Serialization.SerializableFontWrapper.mobjConverter">
            <summary>
            The font converter
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Serialization.SerializableFontWrapper.mstrFont">
            <summary>
            The serializable font
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableFontWrapper.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableFontWrapper"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableFontWrapper.#ctor(System.Drawing.Font)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableFontWrapper"/> class.
            </summary>
            <param name="objFont">The font.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableFontWrapper.GetInstanceFromData(System.Object)">
            <summary>
            Gets the instance from data.
            </summary>
            <param name="objInstance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableFontWrapper.SaveInstanceData(System.Object)">
            <summary>
            Saves the instance data.
            </summary>
            <param name="objInstance">The instance.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Extensibility.SilverlightControlAttribute">
            <summary>
            Maps the Silverlight client control 
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.SilverlightControlAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Extensibility.SilverlightControlAttribute"/> class.
            </summary>
            <param name="strControlType">The mapped silverlight client control.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.SilverlightControlAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Extensibility.SilverlightControlAttribute"/> class.
            </summary>
            <param name="strControlType">The mapped silverlight client control.</param>
            <param name="strCustomStyle">The custom style which this mapping applies to.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Extensibility.SilverlightControlAttribute.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Extensibility.SilverlightControlAttribute.Style">
            <summary>
            Gets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo">
            <summary>Provides access to information on a drive.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.mstrDriveName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.Node">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.#ctor(System.String)">
            <summary>Provides access to information on the specified drive.</summary>
            <param name="driveName">A valid drive path or drive letter. This can be either uppercase or lowercase, 'a' to 'z'. A null value is not valid. </param>
            <exception cref="T:System.ArgumentNullException">The drive letter cannot be null. </exception>
            <exception cref="T:System.ArgumentException">The first letter of driveName is not an uppercase or lowercase letter from 'a' to 'z'. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.#ctor(Gizmox.WebGUI.Virtualization.VirtualNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo"/> class.
            </summary>
            <param name="objVirtualNode">The virtual node.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.GetDrives">
            <summary>Retrieves the drive names of all logical drives on a computer.</summary>
            <returns>An array of type <see cref="T:System.IO.VirtualDriveInfo"></see> that represents the logical drives on a computer.</returns>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred (for example, a disk error or a drive was not ready). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.ToString">
            <summary>Returns a drive name as a string.</summary>
            <returns>The name of the drive.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.AvailableFreeSpace">
            <summary>Indicates the amount of available free space on a drive.</summary>
            <returns>The amount of free space available on the drive, in bytes.</returns>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred (for example, a disk error or a drive was not ready). </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.DriveFormat">
            <summary>Gets the name of the file system, such as NTFS or FAT32.</summary>
            <returns>The name of the file system on the specified drive.</returns>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred (for example, a disk error or a drive was not ready). </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.DriveType">
            <summary>Gets the drive type.</summary>
            <returns>One of the <see cref="T:System.IO.DriveType"></see> values. </returns>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.IsReady">
            <summary>Gets a value indicating whether a drive is ready.</summary>
            <returns>true if the drive is ready; false if the drive is not ready.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.Name">
            <summary>Gets the name of a drive.</summary>
            <returns>The name of the drive.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.RootDirectory">
            <summary>Gets the root directory of a drive.</summary>
            <returns>A <see cref="T:System.IO.VirtualDirectoryInfo"></see> object that contains the root directory of the drive.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.TotalFreeSpace">
            <summary>Gets the total amount of free space available on a drive.</summary>
            <returns>The total free space available on a drive, in bytes.</returns>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred (for example, a disk error or a drive was not ready). </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.TotalSize">
            <summary>Gets the total size of storage space on a drive.</summary>
            <returns>The total size of the drive, in bytes.</returns>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred (for example, a disk error or a drive was not ready). </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.VolumeLabel">
            <summary>Gets or sets the volume label of a drive.</summary>
            <returns>The volume label.</returns>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred (for example, a disk error or a drive was not ready). </exception>
            <exception cref="T:System.UnauthorizedAccessException">The volume label is being set on a network or CD-ROM drive. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo.Reference">
            <summary>
            Gets the reference.
            </summary>
            <value>The reference.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Trace.TraceRecord">
            <summary>
            Base class for all trace records
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Trace.TraceRecord.mlngPerformance">
            <summary>
            The performance time in miliseconds
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.TraceRecord.GetMessage">
            <summary>
            Gets the message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.TraceRecord.Write(Gizmox.WebGUI.Common.Trace.TraceRecord)">
            <summary>
            Writes the specified obj trace record.
            </summary>
            <param name="objTraceRecord">The obj trace record.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.TraceRecord.Performance">
            <summary>
            Gets or sets the performance.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.TraceRecord.Section">
            <summary>
            Gets the section.
            </summary>
            <value>The section.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.TraceRecord.Subject">
            <summary>
            Gets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.TraceRecord.Description">
            <summary>
            Gets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.TraceRecord.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.TraceRecord.TypeName">
            <summary>
            Gets the name of the type.
            </summary>
            <value>The name of the type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.TraceRecord.Category">
            <summary>
            Gets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Trace.VerboseRecord">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.VerboseRecord.GetCategory(System.String,System.String,System.String)">
            <summary>
            Gets the category.
            </summary>
            <param name="strSource">The STR source.</param>
            <param name="strActionCategory">The STR action category.</param>
            <param name="strAction">The STR action.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.VerboseRecord.Write(System.String,System.String,System.String,System.String)">
            <summary>
            Writes the specified STR source.
            </summary>
            <param name="strSource">The STR source.</param>
            <param name="strActionCategory">The STR action category.</param>
            <param name="strAction">The STR action.</param>
            <param name="strMessage">The STR message.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.VerboseRecord.Write(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Writes the specified STR source.
            </summary>
            <param name="strSource">The STR source.</param>
            <param name="strActionCategory">The STR action category.</param>
            <param name="strAction">The STR action.</param>
            <param name="strMessage">The STR message.</param>
            <param name="blnCondition">if set to <c>true</c> [BLN condition].</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.VerboseRecord.Write(System.Object,System.String,System.String,System.String)">
            <summary>
            Writes the specified obj source.
            </summary>
            <param name="objSource">The obj source.</param>
            <param name="strActionCategory">The STR action category.</param>
            <param name="strAction">The STR action.</param>
            <param name="strMessage">The STR message.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Trace.GatewayTraceRecord">
            <summary>
            GAteway processing tracing record
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Trace.GatewayTraceRecord.mstrAction">
            <summary>
            The event type name
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Trace.GatewayTraceRecord.mstrServerType">
            <summary>
            The server component type
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.GatewayTraceRecord.#ctor(System.String,Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.Int64)">
            <summary>
            Creates a new <see cref="T:Gizmox.WebGUI.Common.Trace.GatewayTraceRecord"/> instance.
            </summary>
            <param name="strAction">event.</param>
            <param name="objComponent">component.</param>
            <param name="lngTimeMarker">time marker.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.GatewayTraceRecord.Subject">
            <summary>
            Gets the subject.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.GatewayTraceRecord.Description">
            <summary>
            Gets the description.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.GatewayTraceRecord.Type">
            <summary>
            Gets the type.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.GatewayTraceRecord.Section">
            <summary>
            Gets the section.
            </summary>
            <value></value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Trace.StaticGatewayTraceRecord">
            <summary>
            Static gateway processing tracing record
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Trace.StaticGatewayTraceRecord.mstrResource">
            <summary>
            The event type name
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Trace.StaticGatewayTraceRecord.mobjStaticGatewayType">
            <summary>
            The server component type
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.StaticGatewayTraceRecord.#ctor(System.String,System.Type,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Trace.StaticGatewayTraceRecord"/> class.
            </summary>
            <param name="strResource">The STR resource.</param>
            <param name="objStaticGatewayType">Type of the obj static gateway.</param>
            <param name="lngTimeMarker">The LNG time marker.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.StaticGatewayTraceRecord.Subject">
            <summary>
            Gets the subject.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.StaticGatewayTraceRecord.Description">
            <summary>
            Gets the description.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.StaticGatewayTraceRecord.Type">
            <summary>
            Gets the type.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.StaticGatewayTraceRecord.Section">
            <summary>
            Gets the section.
            </summary>
            <value></value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Trace.EventTraceRecord">
            <summary>
            Event processing tracing record
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Trace.EventTraceRecord.mstrEventType">
            <summary>
            The event type name
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Trace.EventTraceRecord.mstrServerType">
            <summary>
            The server component type
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.EventTraceRecord.#ctor(Gizmox.WebGUI.Common.Interfaces.IEvent,Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.Int64)">
            <summary>
            Creates a new <see cref="T:Gizmox.WebGUI.Common.Trace.EventTraceRecord"/> instance.
            </summary>
            <param name="objEvent">event.</param>
            <param name="objComponent">component.</param>
            <param name="lngTimeMarker">time marker.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.EventTraceRecord.#ctor(System.String,Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.Int64)">
            <summary>
            
            </summary>
            <param name="strEventType"></param>
            <param name="objComponent"></param>
            <param name="lngTimeMarker"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.EventTraceRecord.Subject">
            <summary>
            Gets the subject.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.EventTraceRecord.Description">
            <summary>
            Gets the description.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.EventTraceRecord.Type">
            <summary>
            Gets the type.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.EventTraceRecord.Section">
            <summary>
            Gets the section.
            </summary>
            <value></value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Trace.RenderTraceRecord">
            <summary>
            Rendering tracing record
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Trace.RenderTraceRecord.mstrFormType">
            <summary>
            The root form type
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Trace.RenderTraceRecord.#ctor(Gizmox.WebGUI.Common.Interfaces.IForm,System.Int64)">
            <summary>
            Creates a new <see cref="T:Gizmox.WebGUI.Common.Trace.RenderTraceRecord"/> instance.
            </summary>
            <param name="objForm">Form.</param>
            <param name="lngTimeMarker">Time marker.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.RenderTraceRecord.Subject">
            <summary>
            Gets the subject.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.RenderTraceRecord.Description">
            <summary>
            Gets the description.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.RenderTraceRecord.Type">
            <summary>
            Gets the type.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Trace.RenderTraceRecord.Section">
            <summary>
            Gets the section.
            </summary>
            <value></value>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xml.XmlAttributeToken.mobjTokenReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlAttributeToken.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Xml.XmlAttributeToken"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Xml.XmlAttributeToken.SubTokens">
            <summary>
            Gets the sub tokens.
            </summary>
            <value>The sub tokens.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.ImageContent">
            <summary>
            Represents an image content
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.ImageContent.mobjImageSize">
            <summary>
            The image size
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ImageContent.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.ImageContent"/> class.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ImageContent.Load(System.IO.Stream)">
            <summary>
            Loads the content from stream.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageContent.Content">
            <summary>
            Gets the image content bitmap.
            </summary>
            <value>The image content bitmap.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageContent.Height">
            <summary>
            Gets the image height.
            </summary>
            <value>The image height.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageContent.Width">
            <summary>
            Gets the image width.
            </summary>
            <value>The image width.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.HtmlCollector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.HtmlCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.HtmlCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.FileContentIndex.mobjExpression">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.FileContentIndex.mobjFileParts">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.FileContentIndex.mobjConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileContentIndex.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.FileContentIndex"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileContentIndex.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.FileContentIndex"/> class.
            </summary>
            <param name="strContent">The string content to index.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ITimer">
            <summary>
            Defines requiered interface to be implemnented by a timer.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ITimer.InvokeTimer">
            <summary>
            Invokes timer
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ITimer.GetNextInvokation(System.Int64)">
            <summary>
            Gets the time to the next invokation in milliseconds
            </summary>
            <param name="lngCurrentTicks"></param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ITimer.TimerID">
            <summary>
            Gets or sets the timer id
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ITimer.Interval">
            <summary>
            Gets the timer interval
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ITimer.Enabled">
            <summary>
            Checks if timer is enabled
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IGatewayHandler">
            <summary>
            Summary description for IGatewayHandler.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IGatewayHandler.ProcessGatewayRequest(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent)">
            <summary>
            Processes the gateway request.
            </summary>
            <param name="objContext">The obj context.</param>
            <param name="objComponent">The obj component.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IStaticGatewayHandler">
            <summary>
            Summary description for IStaticGatewayHandler.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IStaticGatewayHandler.ProcessGatewayRequest(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Processes the gateway request.
            </summary>
            <param name="objContext">The obj context.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IApplication">
            <summary>
            	<para>Summary description for IApplication.</para>
            	<para>The application scope can be accessed through the
                VWGContext.Current.Application static context or through the
                Form.Context.Application property and serves Visual WebGui applications as the HTTP
                application is for ASP.NET servers ASP.NET applications.</para>
            </summary>
            <example>
            	<code lang="CS">
            		<![CDATA[
            //Access the Application from form context
            this.Context.Application["ParameterName"] = "Value";
             
            //Access the Application from the static context 
            VWGContext.Current.Application["ParameterName"] = "Value";]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            'Access the Application from form context
                    Me.Context.Application("ParameterName") = "Value"
             
                    'Access the Application from the static context 
                    VWGContext.Current.Application("ParameterName") = "Value"]]>
            	</code>
            </example>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IApplication.Item(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IApplication.Item(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Global">
            <summary>
            Static object gateway
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Global.ClearRequestParams">
            <summary>
            Clears the request params.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Global.Context">
            <summary>
            Gets the current context.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Global.ContextKey">
            <summary>
            Gets the context key.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Global.HasContext">
            <summary>
            Gets a value indicating whether this instance has context.
            </summary>
            <value>
            	<c>true</c> if this instance has context; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Global.RequestContext">
            <summary>
            Gets the HTTP context.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Global.RequestHash">
            <summary>
            Gets the request hash.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Global.RequestParams">
            <summary>
            Gets the request params.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Global.RequestParamsKey">
            <summary>
            Gets the request params key.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Global.RequestSession">
            <summary>
            Gets the HTTP session.
            </summary>
            <value></value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Metadata">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Metadata.mobjTagCache">
            <summary>
            Caching tags for types
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Metadata.GetSilverlightControls(Gizmox.WebGUI.Forms.Skins.ISkinable,System.Type)">
            <summary>
            Gets the silverlight controls.
            </summary>
            <param name="objSkinable">The obj skinable.</param>
            <param name="objInstanceType">Type of the obj instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Metadata.GetTag(System.Object)">
            <summary>
            Gets the tag.
            </summary>
            <param name="objInstace">The instace.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Metadata.GetTag(System.Type)">
            <summary>
            Gets the tag.
            </summary>
            <param name="objInstanceType"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Metadata.GetTag(System.Type,System.Boolean)">
            <summary>
            Gets the tag.
            </summary>
            <param name="objInstanceType"></param>
            <param name="blnThrowError">if set to <c>true</c> throw error.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.MetadataControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.MetadataControl.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.MetadataControl"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strStyle">The STR style.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.MetadataControl.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.MetadataControl.Style">
            <summary>
            Gets the style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.FormCollection">
            <summary>Represents a collection of <see cref="T:System.Windows.Forms.IForm"></see> objects.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.FormCollection.Item(System.Int32)">
            <summary>Gets or sets an element in the collection by its numeric index.</summary>
            <param name="index">The location of the <see cref="T:System.Windows.Forms.IForm"></see> within the collection.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.FormCollection.Item(System.String)">
            <summary>Gets or sets an element in the collection by the name of the associated <see cref="T:System.Windows.Forms.Form"></see> object.</summary>
            <param name="name">The name of the <see cref="T:System.Windows.Forms.Form"></see>.</param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualUser.mstrUsername">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualUser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualUser"/> class.
            </summary>
            <param name="strUsername">The username.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualUser.Current">
            <summary>
            Gets the current authenticated user.
            </summary>
            <value>The current authenticated.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualUser.Username">
            <summary>
            Gets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xaml.XamlToken.mobjXamlTokenReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xaml.XamlToken.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Xaml.XamlToken"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Xaml.XamlToken.SubTokens">
            <summary>
            Gets the sub tokens.
            </summary>
            <value>The sub tokens.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Html.HtmlToken.mobjHtmlTokenReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Html.HtmlToken.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Html.HtmlToken"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Html.HtmlToken.SubTokens">
            <summary>
            Gets the sub tokens.
            </summary>
            <value>The sub tokens.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.ScriptResource">
            <summary>
            Represents a Script Resource
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource">
            <summary>
            Represents a text file resource
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource"/> class.
            </summary>
            <param name="objResource">The resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource.WriteEnd(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the end to the stream writer.
            </summary>
            <param name="objScope">The obj scope.</param>
            <param name="objStreamWriter">The stream writer.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource.Write(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the content to the stream writer.
            </summary>
            <param name="objScope">The obj scope.</param>
            <param name="objStreamWriter">The stream writer.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource.WriteStart(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the start to the stream writer.
            </summary>
            <param name="objScope">The obj scope.</param>
            <param name="objStreamWriter">The stream writer.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource.CompilerCollectorType">
            <summary>
            Gets the type of the compiler collector.
            </summary>
            <value>The type of the compiler collector.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource.CompilerContentType">
            <summary>
            Gets the type of the content compiler.
            </summary>
            <value>The type of the content compiler.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.TextFileResource.NewFileExtension">
            <summary>
            Gets the new file extension.
            </summary>
            <value>The new file extension.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ScriptResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.ScriptResource"/> class.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ScriptResource.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ScriptResource.CompilerCollectorType">
            <summary>
            Gets the type of the compiler collector.
            </summary>
            <value>The type of the compiler collector.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ScriptResource.CompilerContentType">
            <summary>
            Gets the type of the content compiler.
            </summary>
            <value>The type of the content compiler.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ScriptResource.NewFileExtension">
            <summary>
            Gets the new file extension.
            </summary>
            <value>The new file extension.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource">
            <summary>
            Represents a xml file resource
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource"/> class.
            </summary>
            <param name="objResource">The resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.Save(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.Stream)">
            <summary>
            Saves the to an output stream.
            </summary>
            <param name="objScope">The Skin Scope.</param>
            <param name="objOutputStream">The output stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.WriteEnd(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the end to the stream writer.
            </summary>
            <param name="objScope">The obj scope.</param>
            <param name="objStreamWriter">The stream writer.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.Write(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the content to the stream writer.
            </summary>
            <param name="objScope">The obj scope.</param>
            <param name="objStreamWriter">The stream writer.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.WriteStart(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the start to the stream writer.
            </summary>
            <param name="objScope">The obj scope.</param>
            <param name="objStreamWriter">The stream writer.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.CompilerCollectorType">
            <summary>
            Gets the type of the compiler collector.
            </summary>
            <value>The type of the compiler collector.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.CompilerContentType">
            <summary>
            Gets the type of the content compiler.
            </summary>
            <value>The type of the content compiler.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.Namespaces">
            <summary>
            Gets the namespaces.
            </summary>
            <value>The namespaces.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource.NewFileExtension">
            <summary>
            Gets the new file extension.
            </summary>
            <value>The new file extension.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ITimerHandlerContainer">
            <summary>
            Summary description for ITimerHandlerContainer.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ITimerHandlerContainer.InvokeTimers(System.Int64)">
            <summary>
            Invoke all required timers
            </summary>
            <param name="lngCurrentTicks"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ITimerHandlerContainer.Timers">
            <summary>
            Gets the timers.
            </summary>
            <value>The timers.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ITimerHandlerContainer.HasTimers">
            <summary>
            Gets a value indicating whether this instance has timers.
            </summary>
            <value>
            	<c>true</c> if this instance has timers; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IResponseWriter">
            <summary>
            Summary description for IResponseWriter.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IResponseWriter.WriteStartElement(System.String)">
            <summary>
            Writes the start element.
            </summary>
            <param name="strElementName">Name of the STR element.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IResponseWriter.WriteStartElement(System.String,System.String,System.String)">
            <summary>
            Writes the start element.
            </summary>
            <param name="strPrefix">The STR prefix.</param>
            <param name="strElementName">Name of the STR element.</param>
            <param name="strNamespace">The STR namespace.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IResponseWriter.WriteAttributeString(System.String,System.String)">
            <summary>
            Writes the attribute string.
            </summary>
            <param name="strAttribute">The STR attribute.</param>
            <param name="strValue">The STR value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IResponseWriter.WriteEndElement">
            <summary>
            Writes the end element.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IEventCollection">
            <summary>
            Summary description for IEventCollection.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IEvent">
            <summary>
            Summary description for IEvent.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IEvent.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified STR param].
            </summary>
            <param name="strParam">The STR param.</param>
            <returns>
            	<c>true</c> if [contains] [the specified STR param]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IEvent.Source">
            <summary>
            Gets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IEvent.Member">
            <summary>
            Gets the member.
            </summary>
            <value>The member.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IEvent.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IEvent.Target">
            <summary>
            Gets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IEvent.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified STR param.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IEvent.KeyCode">
            <summary>
            Gets the keyboard code for an event.
            </summary>
            <value>The key code.</value>
            <returns>A <see cref="T:Gizmox.WebGUI.Forms.Keys"></see> value that is the key code for the event.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IEvent.AltKey">
            <summary>
            Gets a value indicating whether the ALT key was pressed.
            </summary>
            <value><c>true</c> if [alt key]; otherwise, <c>false</c>.</value>
            <returns>true if the ALT key was pressed; otherwise, false.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IEvent.ControlKey">
            <summary>
            Gets a value indicating whether the CTRL key was pressed.
            </summary>
            <value><c>true</c> if [control key]; otherwise, <c>false</c>.</value>
            <returns>true if the CTRL key was pressed; otherwise, false.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IEvent.ShiftKey">
            <summary>
            Gets a value indicating whether the SHIFT key was pressed.
            </summary>
            <value><c>true</c> if [shift key]; otherwise, <c>false</c>.</value>
            <returns>true if the SHIFT key was pressed; otherwise, false.</returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IRequiredRegistration">
            <summary>
            Should be implemented by controls that have to be registered in the config file
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Gateways.Gateway">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.Gateway.#ctor(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gateway constructor 
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.Gateway.ProcessRequest(System.Web.HttpContext)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.Gateway.IsReusable">
            <summary>
            Indicates that the request object can be pooled.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Gateways.GatewayParameters">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayParameters.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Gateways.GatewayParameters"/> class.
            </summary>
            <param name="strResourceString">The STR resource string.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayParameters.MainForm">
            <summary>
            Gets the main form.
            </summary>
            <value>The main form.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayParameters.MainFormInstance">
            <summary>
            Gets the main form instance.
            </summary>
            <value>The main form instance.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayParameters.Component">
            <summary>
            Gets the component.
            </summary>
            <value>The component.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayParameters.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayParameters.IsFullyQualifiedParameters">
            <summary>
            Gets a value indicating whether this instance is fully qualified parameters.
            </summary>
            <value>
            	<c>true</c> if this instance is fully qualified parameters; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayParameters.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.SerializableProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableProperty.mintKey">
            <summary>
            The property key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableProperty.mstrName">
            <summary>
            The property name
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableProperty.mobjPropertyType">
            <summary>
            The property type
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableProperty.mobjOwnerType">
            <summary>
            The property owner type
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableProperty.mobjSerializableConstructor">
            <summary>
            Provides a serializable hosting type constructor for non serializable properties
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableProperty.mobjSerializableValueProperty">
            <summary>
            Provides a serializable hosting type property to get the original property value
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableProperty.mobjCurrentIdByType">
            <summary>
            The current key rolling number
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableProperty.#ctor(System.Int32,System.String,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.SerializableProperty"/> class.
            </summary>
            <param name="intKey">The property key.</param>
            <param name="strName">The property name.</param>
            <param name="objPropertyType">The property type.</param>
            <param name="objOwnerType">The property owner.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableProperty.#ctor(System.Int32,System.String,System.Type,System.Type,System.Reflection.ConstructorInfo,System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.SerializableProperty"/> class.
            </summary>
            <param name="intKey">The property key.</param>
            <param name="strName">The property name.</param>
            <param name="objPropertyType">The property type.</param>
            <param name="objOwnerType">The property owner.</param>
            <param name="objSerializablePropertyType">The property serializable wrapper type.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableProperty.ConvertToSerializableWrapper(System.Object)">
            <summary>
            Converts to serializable.
            </summary>
            <param name="objValue">The value to convert.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableProperty.ConvertFromSerializableWrapper(System.Object)">
            <summary>
            Converts from serializable.
            </summary>
            <param name="objSerializable">The serializable wrapper to get its value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableProperty.Register(System.String,System.Type,System.Type)">
            <summary>
            Creates the serializable property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableProperty.Register(System.String,System.Type,System.Type,System.Type)">
            <summary>
            Creates the serializable property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableProperty.GeneratePropertyId(System.Type)">
            <summary>
            Generates the property id.
            </summary>
            <param name="objOwnerType">The property owner type.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableProperty.GetFirstTypeGeneratedId(System.Type)">
            <summary>
            Gets the first type id.
            </summary>
            <param name="objType">The type to get its first id.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableProperty.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableProperty.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableProperty.PropertyType">
            <summary>
            Gets the property type.
            </summary>
            <value>The property type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableProperty.OwnerType">
            <summary>
            Gets the owner type.
            </summary>
            <value>The owner type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableProperty.HasSerializationWrapper">
            <summary>
            Gets a value indicating whether this instance has serialization wrapper.
            </summary>
            <value>
            	<c>true</c> if this instance has serialization wrapper; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey">
            <summary>Represents a key-level node in the Windows registry. This class is a registry encapsulation.</summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.#ctor(Gizmox.WebGUI.Virtualization.VirtualNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"/> class.
            </summary>
            <param name="objVirtualNode">The virtual node.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.Create(Gizmox.WebGUI.Virtualization.VirtualNode)">
            <summary>
            Creates a new registry key object.
            </summary>
            <param name="objVirtualNode">The virtual node.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.Close">
            <summary>Closes the key and flushes it to disk if its contents have been modified.</summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.CreateSubKey(System.String)">
            <summary>Creates a new subkey or opens an existing subkey for write access. The string subkey is not case-sensitive.</summary>
            <returns>A <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object that represents the newly created subkey, or null if the operation failed. If a zero-length string is specified for subkey, the current <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object is returned.</returns>
            <param name="subkey">The name or path of the subkey to create or open. </param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key. </exception>
            <exception cref="T:System.ArgumentNullException">subkey is null. </exception>
            <exception cref="T:System.ArgumentException">subkey is longer than the maximum length allowed (255 characters). </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> on which this method is being invoked is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.IO.IOException">The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.LocalMachine"></see> root.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> cannot be written to; for example, it was not opened as a writable key , or the user does not have the necessary access rights. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.CreateSubKey(System.String,Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKeyPermissionCheck)">
            <summary>Creates a new subkey or opens an existing subkey for write access, using the specified permission check option. The string subkey is not case-sensitive.</summary>
            <returns>A <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object that represents the newly created subkey, or null if the operation failed. If a zero-length string is specified for subkey, the current <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object is returned.</returns>
            <param name="subkey">The name or path of the subkey to create or open.</param>
            <param name="permissionCheck">One of the <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKeyPermissionCheck"></see> values that specifies whether the key is opened for read or read/write access.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or open the registry key. </exception>
            <exception cref="T:System.ArgumentNullException">subkey is null. </exception>
            <exception cref="T:System.ArgumentException">subkey is longer than the maximum length allowed (255 characters). -or-permissionCheck contains an invalid value.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> on which this method is being invoked is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.IO.IOException">The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.LocalMachine"></see> root.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.CreateSubKey(System.String,Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)">
            <summary>Creates a new subkey or opens an existing subkey for write access, using the specified permission check option and registry security. The string subkey is not case-sensitive.</summary>
            <returns>A <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object that represents the newly created subkey, or null if the operation failed. If a zero-length string is specified for subkey, the current <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object is returned.</returns>
            <param name="subkey">The name or path of the subkey to create or open.</param>
            <param name="permissionCheck">One of the <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKeyPermissionCheck"></see> values that specifies whether the key is opened for read or read/write access.</param>
            <param name="registrySecurity">A <see cref="T:System.Security.AccessControl.RegistrySecurity"></see>  object that specifies the access control security for the new key.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the code access security permissions required to create or open registry keys. </exception>
            <exception cref="T:System.ArgumentNullException">subkey is null. </exception>
            <exception cref="T:System.ArgumentException">subkey is longer than the maximum length allowed (255 characters). -or-permissionCheck contains an invalid value.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> on which this method is being invoked is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</exception>
            <exception cref="T:System.IO.IOException">The nesting level exceeds 510.-or-A system error occurred, such as deletion of the key, or an attempt to create a key in the <see cref="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.LocalMachine"></see> root.</exception>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.DeleteSubKey(System.String)">
            <summary>Deletes the specified subkey. The string subkey is not case-sensitive.</summary>
            <param name="subkey">The name of the subkey to delete. </param>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.ArgumentException">The subkey parameter does not specify a valid registry key </exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key. </exception>
            <exception cref="T:System.InvalidOperationException">The subkey has child subkeys </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.ArgumentNullException">subkey is null</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.DeleteSubKey(System.String,System.Boolean)">
            <summary>Deletes the specified subkey. The string subkey is not case-sensitive.</summary>
            <param name="subkey">The name of the subkey to delete. </param>
            <param name="throwOnMissingSubKey">Indicates whether an exception should be raised if the specified subkey cannot be found. If this argument is true and the specified subkey does not exist, then an exception is raised. If this argument is false and the specified subkey does not exist, then no action is taken </param>
            <exception cref="T:System.InvalidOperationException">subkey has child subkeys. </exception>
            <exception cref="T:System.ArgumentException">subkey does not specify a valid registry key and throwOnMissingSubKey is true. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.ArgumentNullException">subkey is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.DeleteSubKeyTree(System.String)">
            <summary>Deletes a subkey and any child subkeys recursively. The string subkey is not case-sensitive.</summary>
            <param name="subkey">The subkey to delete. </param>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <exception cref="T:System.ArgumentNullException">subkey is null. </exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the key. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.ArgumentException">Deletion of a root hive is attempted.-or-subkey does not specify a valid registry subkey. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.DeleteValue(System.String)">
            <summary>Deletes the specified value from this key.</summary>
            <param name="name">The name of the value to delete. </param>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is read-only. </exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the value. </exception>
            <exception cref="T:System.ArgumentException">name is not a valid reference to a value. -or-name is null</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.DeleteValue(System.String,System.Boolean)">
            <summary>Deletes the specified value from this key.</summary>
            <param name="throwOnMissingValue">Indicates whether an exception should be raised if the specified value cannot be found. If this argument is true and the specified value does not exist, then an exception is raised. If this argument is false and the specified value does not exist, then no action is taken </param>
            <param name="name">The name of the value to delete. </param>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is read-only. </exception>
            <exception cref="T:System.ArgumentException">name is not a valid reference to a value and throwOnMissingValue is true. -or- name is null.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to delete the value. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.Flush">
            <summary>Writes all the attributes of the specified open registry key into the registry.</summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.GetAccessControl">
            <summary>Returns the access control security for the current registry key.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.RegistrySecurity"></see> object that describes the access control permissions on the registry key represented by the current <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see>.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.InvalidOperationException">The current key has been deleted.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the necessary permissions.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
            <summary>Returns the specified sections of the access control security for the current registry key.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.RegistrySecurity"></see> object that describes the access control permissions on the registry key represented by the current <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see>.</returns>
            <param name="includeSections">A bitwise combination of <see cref="T:System.Security.AccessControl.AccessControlSections"></see> values that specifies the type of security information to get. </param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.InvalidOperationException">The current key has been deleted.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the necessary permissions.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.GetSubKeyNames">
            <summary>Retrieves an array of strings that contains all the subkey names.</summary>
            <returns>An array of strings that contains the names of the subkeys for the current key.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.IO.IOException">A system error occurred, for example the current key has been deleted.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the key. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.GetSubKeys">
            <summary>
            Gets the sub keys.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.GetSubValues">
            <summary>
            Gets the sub values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.GetValue(System.String)">
            <summary>Retrieves the value associated with the specified name. Returns null if the name/value pair does not exist in the registry.</summary>
            <returns>The value associated with name, or null if name is not found.</returns>
            <param name="name">The name of the value to retrieve. </param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value has been marked for deletion. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.GetValue(System.String,System.Object)">
            <summary>Retrieves the value associated with the specified name. If the name is not found, returns the default value that you provide.</summary>
            <returns>The value associated with name, with any embedded environment variables left unexpanded, or defaultValue if name is not found.</returns>
            <param name="defaultValue">The value to return if name does not exist. </param>
            <param name="name">The name of the value to retrieve. </param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value has been marked for deletion. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.GetValue(System.String,System.Object,Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueOptions)">
            <summary>Retrieves the value associated with the specified name and retrieval options. If the name is not found, returns the default value that you provide.</summary>
            <returns>The value associated with name, processed according to the specified options, or defaultValue if name is not found.</returns>
            <param name="defaultValue">The value to return if name does not exist. </param>
            <param name="name">The name of the value to retrieve. </param>
            <param name="options">One of the <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueOptions"></see> values that specifies optional processing of the retrieved value.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value has been marked for deletion. </exception>
            <exception cref="T:System.ArgumentException">options is not a valid <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueOptions"></see> value; for example, an invalid value is cast to <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueOptions"></see>.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.GetValueKind(System.String)">
            <summary>Retrieves the registry data type of the value associated with the specified name.</summary>
            <returns>A <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind"></see> value representing the registry data type of the value associated with name.</returns>
            <param name="name">The name of the value whose registry data type is to be retrieved. </param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.IO.IOException">The subkey that contains the specified value does not exist.-or-The name/value pair specified by name does not exist.This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.GetValueNames">
            <summary>Retrieves an array of strings that contains all the value names associated with this key.</summary>
            <returns>An array of strings that contains the value names for the current key.</returns>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see>  being manipulated is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.IO.IOException">A system error occurred; for example, the current key has been deleted.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.OpenRemoteBaseKey(Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive,System.String)">
            <summary>Opens a new <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that represents the requested key on a remote machine.</summary>
            <returns>The requested <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see>.</returns>
            <param name="hKey">The HKEY to open, from the <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryHive"></see> enumeration. </param>
            <param name="machineName">The remote machine. </param>
            <exception cref="T:System.ArgumentNullException">machineName is null. </exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the proper permissions to perform this operation. </exception>
            <exception cref="T:System.IO.IOException">machineName is not found.</exception>
            <exception cref="T:System.ArgumentException">hKey is invalid.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.OpenSubKey(System.String)">
            <summary>Retrieves a subkey as read-only.</summary>
            <returns>The subkey requested, or null if the operation failed.</returns>
            <param name="name">The name or path of the subkey to open read-only. </param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read the registry key. </exception>
            <exception cref="T:System.ArgumentException">name is longer than the maximum length allowed (255 characters). </exception>
            <exception cref="T:System.ArgumentNullException">name is null</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> is closed (closed keys cannot be accessed). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.OpenSubKey(System.String,Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKeyPermissionCheck)">
            <summary>Retrieves the specified subkey for read or read/write access.</summary>
            <returns>A <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object representing the subkey requested, or null if the operation failed.</returns>
            <param name="permissionCheck">One of the <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKeyPermissionCheck"></see> values that specifies whether the key is opened for read or read/write access.</param>
            <param name="name">The name or path of the subkey to create or open.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read the registry key. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.ArgumentNullException">name is null</exception>
            <exception cref="T:System.ArgumentException">name is longer than the maximum length allowed (255 characters). -or-permissionCheck contains an invalid value.</exception>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.OpenSubKey(System.String,System.Boolean)">
            <summary>Retrieves a specified subkey.</summary>
            <returns>The subkey requested, or null if the operation failed.</returns>
            <param name="writable">Set to true if you need write access to the key. </param>
            <param name="name">Name or path of the subkey to open. </param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to access the registry key in the specified mode. </exception>
            <exception cref="T:System.ArgumentException">name is longer than the maximum length allowed (255 characters). </exception>
            <exception cref="T:System.ArgumentNullException">name is null. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> is closed (closed keys cannot be accessed). </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.OpenSubKey(System.String,Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)">
            <summary>Retrieves the specified subkey for read or read/write access, requesting the specified access rights.</summary>
            <returns>A <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object representing the subkey requested, or null if the operation failed.</returns>
            <param name="rights">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights"></see>  values that specifies the desired security access.</param>
            <param name="permissionCheck">One of the <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKeyPermissionCheck"></see> values that specifies whether the key is opened for read or read/write access.</param>
            <param name="name">The name or path of the subkey to create or open.</param>
            <exception cref="T:System.Security.SecurityException">rights includes invalid registry rights values.The user does not have the requested permissions. </exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.ArgumentNullException">name is null</exception>
            <exception cref="T:System.ArgumentException">name is longer than the maximum length allowed (255 characters). -or-permissionCheck contains an invalid value.</exception>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)">
            <summary>Applies Windows access control security to an existing registry key.</summary>
            <param name="registrySecurity">A <see cref="T:System.Security.AccessControl.RegistrySecurity"></see> object that specifies the access control security to apply to the current subkey. </param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed).</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object represents a key with access control security, and the caller does not have <see cref="F:System.Security.AccessControl.RegistryRights.ChangePermissions"></see> rights.</exception>
            <exception cref="T:System.ArgumentNullException">registrySecurity is null.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.SetValue(System.String,System.Object)">
            <summary>Sets the specified name/value pair.</summary>
            <param name="name">The name of the value to store. </param>
            <param name="value">The data to be stored. </param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> is read-only, and cannot be written to; for example, the key has not been opened with write access. -or-The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
            <exception cref="T:System.ArgumentException">value is an unsupported data type.-or-name is longer than the maximum length allowed (255 characters). </exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</exception>
            <exception cref="T:System.ArgumentNullException">value is null. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.SetValue(System.String,System.Object,Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind)">
            <summary>Sets the value of a name/value pair in the registry key, using the specified registry data type.</summary>
            <param name="valueKind">The registry data type to use when storing the data. </param>
            <param name="name">The name of the value to be stored. </param>
            <param name="value">The data to be stored. </param>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
            <exception cref="T:System.ArgumentException">name is longer than the maximum length allowed (255 characters).-or- The type of value did not match the registry data type specified by valueKind, therefore the data could not be converted properly. </exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> is read-only, and cannot be written to; for example, the key has not been opened with write access.-or-The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98. </exception>
            <exception cref="T:System.ArgumentNullException">value is null. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.ToString">
            <summary>Retrieves a string representation of this key.</summary>
            <returns>A string representing the key. If the specified key is invalid (cannot be found) then null is returned.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being accessed is closed (closed keys cannot be accessed). </exception>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.Name">
            <summary>Retrieves the name of the key.</summary>
            <returns>The absolute (qualified) name of the key.</returns>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> is closed (closed keys cannot be accessed). </exception>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.SubKeyCount">
            <summary>Retrieves the count of subkeys of the current key.</summary>
            <returns>The number of subkeys of the current key.</returns>
            <exception cref="T:System.Security.SecurityException">The user does not have read permission for the key. </exception>
            <exception cref="T:System.IO.IOException">A system error occurred, for example the current key has been deleted.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.ValueCount">
            <summary>Retrieves the count of values in the key.</summary>
            <returns>The number of name/value pairs in the key.</returns>
            <exception cref="T:System.Security.SecurityException">The user does not have read permission for the key. </exception>
            <exception cref="T:System.IO.IOException">A system error occurred, for example the current key has been deleted.</exception>
            <exception cref="T:System.ObjectDisposedException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> being manipulated is closed (closed keys cannot be accessed). </exception>
            <exception cref="T:System.UnauthorizedAccessException">The user does not have the necessary registry rights.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey.VirtualNode">
            <summary>
            Gets the virtual node.
            </summary>
            <value>The virtual node.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader"/> class.
            </summary>
            <param name="strSource">The source.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.ReadToken">
            <summary>
            Reads the token.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.ReadAttributeScriptIndicator">
            <summary>
            Reads the script attribute indicator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.ReadCommaString">
            <summary>
            Reads the comma string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.ReadBlockComment">
            <summary>
            Reads the block comment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.ReadLineComment">
            <summary>
            Reads the line comment.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.ReadNumber">
            <summary>
            Reads the number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.ReadIdentifier">
            <summary>
            Reads the identifier.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsAttributeScriptIndicator(System.Char)">
            <summary>
            Determines whether is attribute script indicator.
            </summary>
            <param name="chrCurrent">The CHR current.</param>
            <returns>
            	<c>true</c> if is attribute script indicator; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsEndBlockComment(System.Int32)">
            <summary>
            If is end of block comment
            </summary>
            <param name="intOffset"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsStartBlockComment(System.Char)">
            <summary>
            If is start block comment
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsStartLineComment(System.Char)">
            <summary>
            If is start line comment
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsStartOfIdentifier(System.Char)">
            <summary>
            Is start identifier
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsExtendedCharecterOfIdentifier(System.Char)">
            <summary>
            Is extended identifier charecter
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsPartOfIdentifier(System.Char)">
            <summary>
            Is part of an identifier
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsNumber(System.Char)">
            <summary>
            If is a number
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsNumber(System.Char,System.Int32)">
            <summary>
            If is a number
            </summary>
            <param name="chrCurrent"></param>
            <param name="intPosition">The position in the number</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsStartQuoteString(System.Char)">
            <summary>
            Is start quote string
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsFirstOrLastPosition">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsEndQuoteString(System.Int32)">
            <summary>
            If is end of quote string
            </summary>
            <param name="intOffset"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsEndCommaString(System.Int32)">
            <summary>
            If end of comma string
            </summary>
            <param name="intOffset"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsStartCommaString(System.Char)">
            <summary>
            If start comma string
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsEndScriptBlock(System.Char)">
            <summary>
            If end script block
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsStartScriptBlock(System.Char)">
            <summary>
            If start script block
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsEndParenthesisBlock(System.Char)">
            <summary>
            If end parenthesis
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsStartParenthesisBlock(System.Char)">
            <summary>
            If start parenthesis
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsSemicolomn(System.Char)">
            <summary>
            if is semicolomn
            </summary>
            <param name="chrCurrent"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsReserved(System.String)">
            <summary>
            Indicates if a givven word is a reserved
            </summary>
            <param name="strWord"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSTokenReader.IsKeyword(System.String)">
            <summary>
            Indicates if a givven word is a keyword
            </summary>
            <param name="strWord"></param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.ThemeException">
            <summary>
            The exception that is thrown when there is an error in the theme 
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ThemeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.ThemeException"/> class.
            </summary>
            <param name="strMessage">The STR message.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ThemeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.ThemeException"/> class.
            </summary>
            <param name="strMessage">The STR message.</param>
            <param name="objInnerException">The obj inner exception.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinData">
            <summary>
            Holds the skin data
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinData.mobjSkinContainerData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinData.mobjInheritedSkinData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinData.mobjSkinType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinData.mobjSkinContainerType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinData.mobjInheritedSkinType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinData.mobjSkinDataCache">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.#ctor(Gizmox.WebGUI.Forms.Skins.SkinDataStore,System.Type,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinData"/> class.
            </summary>
            <param name="objSkinDataCache">The skin data cache.</param>
            <param name="objSkinType">The skin type.</param>
            <param name="blnIsThemeData">If this is a theme data.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetSkinContainerType(System.Type)">
            <summary>
            Gets the type of the skin container.
            </summary>
            <param name="objSkinType">The type of the skin type.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.IsValidBaseType(System.Type)">
            <summary>
            Determines whether is a valid base type.
            </summary>
            <param name="objBaseType">The base type to check.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetThemeKey(System.Type,System.String)">
            <summary>
            Gets the theme key.
            </summary>
            <param name="objSkinType">The skin type.</param>
            <param name="strResource">The STR resource.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetThemeKey(Gizmox.WebGUI.Forms.Skins.Skin,System.String)">
            <summary>
            Gets the theme key.
            </summary>
            <param name="objSkin">The obj skin.</param>
            <param name="strResource">The STR resource.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetThemePrefix(System.Type)">
            <summary>
            Gets the theme prefix.
            </summary>
            <param name="objSkinType">The skin type.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetThemePrefix(Gizmox.WebGUI.Forms.Skins.Skin)">
            <summary>
            Gets the theme prefix.
            </summary>
            <param name="objSkin">The skin.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.SetValue(Gizmox.WebGUI.Forms.Skins.SkinComponent,System.String,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="objSkinComponent">The skin.</param>
            <param name="strResource">The resource.</param>
            <param name="objValue">The value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.RemoveValue(Gizmox.WebGUI.Forms.Skins.Skin,System.String)">
            <summary>
            Removes the value.
            </summary>
            <param name="objSkin">The skin.</param>
            <param name="strResource">The resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.ConvertFromValue``1(System.Object)">
            <summary>
            Converts the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objValue">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetImageHeight(Gizmox.WebGUI.Forms.Skins.Skin,System.String)">
            <summary>
            Gets the height of the image.
            </summary>
            <param name="objSkin">The skin.</param>
            <param name="strKey">The resource key.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetMaxImageHeight(Gizmox.WebGUI.Forms.Skins.Skin,System.String[])">
            <summary>
            Gets the maximum height a list of images.
            </summary>
            <param name="objSkin">The skin.</param>
            <param name="strKeys">The resource keys.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetImageWidth(Gizmox.WebGUI.Forms.Skins.Skin,System.String)">
            <summary>
            Gets the width of the image.
            </summary>
            <param name="objSkin">The skin.</param>
            <param name="strKey">The resource key.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetMaxImageWidth(Gizmox.WebGUI.Forms.Skins.Skin,System.String[])">
            <summary>
            Gets the maximum width a list of images.
            </summary>
            <param name="objSkin">The skin.</param>
            <param name="strKeys">The resource keys.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetImage(Gizmox.WebGUI.Forms.Skins.Skin,System.String)">
            <summary>
            Gets the image.
            </summary>
            <param name="objSkin">The skin.</param>
            <param name="strKey">The resource key.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetResource(Gizmox.WebGUI.Forms.Skins.Skin,System.String)">
            <summary>
            Gets the resource.
            </summary>
            <param name="objSkin">The skin.</param>
            <param name="strKey">The resource key.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetResource(System.Type,Gizmox.WebGUI.Forms.Skins.SkinData,System.String)">
            <summary>
            Gets the resource.
            </summary>
            <param name="objSkinType">The skin type.</param>
            <param name="objThemeData">The theme data.</param>
            <param name="strKey">The resource key.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.HasValue(Gizmox.WebGUI.Forms.Skins.Skin,System.String)">
            <summary>
            Determines whether the specified skin type has value.
            </summary>
            <param name="objSkin">The skin.</param>
            <param name="objThemeData">The theme data.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.HasValue(System.Type,Gizmox.WebGUI.Forms.Skins.SkinData,System.String)">
            <summary>
            Determines whether the specified skin type has value.
            </summary>
            <param name="objSkinType">The skin type.</param>
            <param name="objThemeData">The theme data.</param>
            <param name="strKey">The key.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetValue``1(Gizmox.WebGUI.Forms.Skins.Skin,System.String,``0,System.Boolean)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T">The type of the resource to get.</typeparam>
            <param name="objSkin">The skin.</param>
            <param name="strKey">The resource key.</param>
            <param name="objDefaultValue">The default value.</param>
            <param name="blnAmbientProperty">if set to <c>true</c> ambient property.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetValue``1(System.Type,Gizmox.WebGUI.Forms.Skins.SkinData,System.String,``0,System.Boolean)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T">The type of the resource to get.</typeparam>
            <param name="objSkinType">Type of the obj skin.</param>
            <param name="objThemeData">The obj theme data.</param>
            <param name="strKey">The resource key.</param>
            <param name="objDefaultValue">The default value.</param>
            <param name="blnAmbientProperty">if set to <c>true</c> ambient property.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.GetResourceName(Gizmox.WebGUI.Forms.Skins.Skin,Gizmox.WebGUI.Forms.Skins.Resources.SkinResource)">
            <summary>
            Gets the name of the resource.
            </summary>
            <param name="objSkin">The skin.</param>
            <param name="skinResource">The skin resource.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.SetResourceName(Gizmox.WebGUI.Forms.Skins.Skin,Gizmox.WebGUI.Forms.Skins.Resources.SkinResource,System.String)">
            <summary>
            Sets the name of the resource.
            </summary>
            <param name="objSkin">The related skin</param>
            <param name="objSkinResource">The skin resource.</param>
            <param name="strName">The new resoruce name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinData.RemoveResource(Gizmox.WebGUI.Forms.Skins.Skin,Gizmox.WebGUI.Forms.Skins.Resources.SkinResource)">
            <summary>
            Removes the resource.
            </summary>
            <param name="objSkin">The skin.</param>
            <param name="objSkinResource">The skin resource.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinData.ContainerType">
            <summary>
            Gets the type of the container.
            </summary>
            <value>The type of the container.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinData.ContainerData">
            <summary>
            Gets the container data.
            </summary>
            <value>The container data.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinData.InheritedType">
            <summary>
            Gets the type of the inherited.
            </summary>
            <value>The type of the inherited.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinData.InheritedData">
            <summary>
            Gets the inherited data.
            </summary>
            <value>The inherited data.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetResource">
            <summary>
            Represents a Style Sheet Resource
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetResource.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetResource.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetResource"/> class.
            </summary>
            <param name="objResource">The resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetResource.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetResource.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetResource.CompilerCollectorType">
            <summary>
            Gets the type of the compiler collector.
            </summary>
            <value>The type of the compiler collector.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetResource.CompilerContentType">
            <summary>
            Gets the type of the content compiler.
            </summary>
            <value>The type of the content compiler.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetResource.NewFileExtension">
            <summary>
            Gets the new file extension.
            </summary>
            <value>The new file extension.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileCollector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileCollector.WriteContent(System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the content.
            </summary>
            <param name="objStreamWriter">The stream writer.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileCollector.IsCommonScope(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope)">
            <summary>
            Determines whether  a scope is the common scope.
            </summary>
            <param name="objSkinScope">The skin scope.</param>
            <returns>
            	<c>true</c> if a scope is the common scope; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileCollector.WriteResourceContent(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,Gizmox.WebGUI.Forms.Skins.Resources.XmlFileResource,System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the content of the resource.
            </summary>
            <param name="objScope">The scope.</param>
            <param name="objXmlFileResource">The file resource.</param>
            <param name="objStreamWriter">The stream writer.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.mobjSkins">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.mobjSkin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.mobjScopeParent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.mobjResources">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.mobjVariables">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.mstrName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope"/> class.
            </summary>
            <param name="strName">The scope name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.SetParent(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope)">
            <summary>
            Sets the skin parent.
            </summary>
            <param name="objScopeParent">The scope parent.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.SetSkin(Gizmox.WebGUI.Forms.Skins.Skin)">
            <summary>
            Sets the containing skin.
            </summary>
            <param name="objSkin">The containing skin.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.AddResource(System.String,Gizmox.WebGUI.Forms.Skins.Resources.FileResource)">
            <summary>
            Adds the resource.
            </summary>
            <param name="strName">The resource name.</param>
            <param name="objFileResource">The file resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.GetResourceCollector(System.String,Gizmox.WebGUI.Forms.Skins.Resources.FileResource)">
            <summary>
            Gets the resource collector.
            </summary>
            <param name="strFileName">Name of the STR file.</param>
            <param name="objFileResource">The obj file resource.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.GetResourceCollectorName(System.String,Gizmox.WebGUI.Forms.Skins.Resources.FileResource)">
            <summary>
            Gets the name of the resource collector.
            </summary>
            <param name="strFileName">Name of the STR file.</param>
            <param name="objFileResource">The obj file resource.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.GetAgnosticResourceName(System.String)">
            <summary>
            Gets the name of the agnostic resource.
            </summary>
            <param name="strName">The resource name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.GetMethodName(System.String)">
            <summary>
            Gets the name of the method.
            </summary>
            <param name="strMember">The method member name.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.SkinPath">
            <summary>
            Gets the skin path.
            </summary>
            <value>The skin path.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.Skins">
            <summary>
            Gets the skins.
            </summary>
            <value>The skins.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.Variables">
            <summary>
            Gets the skin scope variables.
            </summary>
            <value>The skin scope variables.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.Global">
            <summary>
            Gets the global.
            </summary>
            <value>The global.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.Resources">
            <summary>
            Gets the skin scope resources.
            </summary>
            <value>The skin scope resources.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.Skin">
            <summary>
            Gets the contained skin.
            </summary>
            <value>The contained skin.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.ScopeVariables">
            <summary>
            Exposes readonly variable values
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.ScopeVariables.mobjOwner">
            <summary>
            The owner skin scope 
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.ScopeVariables.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.ScopeVariables"/> class.
            </summary>
            <param name="objOwner">The owner.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope.ScopeVariables.Item(System.String)">
            <summary>
            Gets a variable value.
            </summary>
            <value></value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScopeCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Client.Design.IClinetDesignContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClinetDesignContext.CreateControllerByWebObject(Gizmox.WebGUI.Common.Interfaces.IContext,System.Object)">
            <summary>
            Create controller for a web object instance
            </summary>
            <param name="objContext"></param>
            <param name="objWebObject"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClinetDesignContext.CreateControllerByWebType(Gizmox.WebGUI.Common.Interfaces.IContext,System.Type)">
            <summary>
            Creates controller for a web object type
            </summary>
            <param name="objContext"></param>
            <param name="objWebType"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClinetDesignContext.InitializeController(Gizmox.WebGUI.Client.Design.IClientObjectController)">
            <summary>
            Initialized controller for design time usage
            </summary>
            <param name="objObjectController"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClinetDesignContext.NotifyItemPropertyChanged(Gizmox.WebGUI.Client.Design.IClientObjectController,Gizmox.WebGUI.Common.Interfaces.ObservableItemPropertyChangedArgs,System.Boolean)">
            <summary>
            Notifies the item property changed.
            </summary>
            <param name="objObjectController">The obj object controller.</param>
            <param name="objPropertyChangeArgs">The obj property change args.</param>
            <param name="blnWebEvent">if set to <c>true</c> [BLN web event].</param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClinetDesignContext.SuspendNotifications">
            <summary>
            Suspends the notifications.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClinetDesignContext.ResumeNotifications">
            <summary>
            Resumes the notifications.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Client.Design.IClinetDesignContext.IsNotificationSuspened">
            <summary>
            Gets a value indicating whether this instance is notification suspened.
            </summary>
            <value>
            	<c>true</c> if this instance is notification suspened; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualReference.mobjRootId">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualReference.mstrPath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualReference.mobjPathType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualReference.mstrNodeName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualReference.mobjNodeType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualReference.mobjForestId">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.VirtualReference.mobjVirtualNode">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualReference.#ctor(Gizmox.WebGUI.Virtualization.VirtualNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualReference"/> class.
            </summary>
            <param name="objVirtualNode"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualReference.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualReference"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualReference.#ctor(System.Guid,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualReference"/> class.
            </summary>
            <param name="strPath">The path.</param>
            <param name="objPathType">The type of the path nodes.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualReference.#ctor(Gizmox.WebGUI.Virtualization.VirtualNode,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualReference"/> class.
            </summary>
            <param name="strPath">The path.</param>
            <param name="objPathType">The type of the path nodes.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualReference.#ctor(System.Guid,System.String,System.Guid,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualReference"/> class.
            </summary>
            <param name="objForestId">The forest id.</param>
            <param name="strPath">The path.</param>
            <param name="objPathType">The type of the path nodes.</param>
            <param name="strNodeName">The node name.</param>
            <param name="objNodeType">The node type.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualReference.#ctor(Gizmox.WebGUI.Virtualization.VirtualNode,System.String,System.Guid,System.String,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.VirtualReference"/> class.
            </summary>
            <param name="objForestId">The forest id.</param>
            <param name="strPath">The path.</param>
            <param name="objPathType">The type of the path nodes.</param>
            <param name="strNodeName">The node name.</param>
            <param name="objNodeType">The node type.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.VirtualReference.NormalizeParameter(System.String)">
            <summary>
            Normalizes the parameter.
            </summary>
            <param name="strNodeName">.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualReference.RootId">
            <summary>
            Gets the root id.
            </summary>
            <value>The root id.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualReference.Path">
            <summary>
            Gets the path.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualReference.PathType">
            <summary>
            Gets the type of the path.
            </summary>
            <value>The type of the path.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualReference.NodeName">
            <summary>
            Gets the name of the node.
            </summary>
            <value>The name of the node.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualReference.NodeType">
            <summary>
            Gets the type of the node.
            </summary>
            <value>The type of the node.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualReference.ForestId">
            <summary>
            Gets the forest id.
            </summary>
            <value>The forest id.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualReference.DefaultRoot">
            <summary>
            Gets the default root.
            </summary>
            <value>The default root.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.VirtualReference.Node">
            <summary>
            Gets the node.
            </summary>
            <value>The node.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Html.HtmlTokenReader.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Html.HtmlTokenReader"/> class.
            </summary>
            <param name="objTokenContext"></param>
            <param name="objSource">The source.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Html.HtmlTokenReader.ReadAttributeValueToken(System.String,System.String)">
            <summary>
            Reads the attribute value token.
            </summary>
            <param name="strAttributeName"></param>
            <param name="strAttributeValue"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Html.HtmlTokenReader.ReadTagContentToken(System.String,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Reads the tag content token.
            </summary>
            <param name="strTagName"></param>
            <param name="objAttributes"></param>
            <param name="strTagContent">The tag content.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Switches.WGTracingSwitch">
            <summary>
            Summary description for WGTracingSwitch.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Switches.WGTracingSwitch.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Switches.WGTracingSwitch"/> class.
            </summary>
            <param name="strName">Name of the STR.</param>
            <param name="strDescription">The STR description.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Switches.WGTracingSwitch.Enabled">
            <summary>
            Gets a value indicating whether this <see cref="T:Gizmox.WebGUI.Common.Switches.WGTracingSwitch"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinDependencyAttribute">
            <summary>
            Provides indication of dependencies of skins
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinDependencyAttribute.mobjSkinType">
            <summary>
            The type of the Skin class
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDependencyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinDependencyAttribute"/> class.
            </summary>
            <param name="strSkinType">The type of the Skin class.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDependencyAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinDependencyAttribute"/> class.
            </summary>
            <param name="objSkinType">The type of the Skin class.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinDependencyAttribute.ValidateType(System.Type)">
            <summary>
            Validates the skin type.
            </summary>
            <param name="objSkinType">The type of the Skin class.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinDependencyAttribute.SkinType">
            <summary>
            Gets the type of the skin.
            </summary>
            <value>The type of the skin.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource">
            <summary>
            Represents a skin image resource
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.ImageResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource"/> class.
            </summary>
            <param name="objResource">The resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.FilterType">
            <summary>
            Gets the type of the filter.
            </summary>
            <value>The type of the filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.Value">
            <summary>
            Gets the bitmap image value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.Height">
            <summary>
            Gets the image height.
            </summary>
            <value>The image height.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.Width">
            <summary>
            Gets the image width.
            </summary>
            <value>The image width.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.Presentation">
            <summary>
            Gets or sets the presentation.
            </summary>
            <value>The presentation.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.PresentationEngine">
            <summary>
            Gets or sets the presentation engine.
            </summary>
            <value>The presentation engine.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.PresentationRole">
            <summary>
            Gets or sets the presentation role.
            </summary>
            <value>The presentation role.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.CompilerCollectorType">
            <summary>
            Gets the type of the compiler collector.
            </summary>
            <value>The type of the compiler collector.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.CompilerContentType">
            <summary>
            Gets the type of the content compiler.
            </summary>
            <value>The type of the content compiler.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.ImageFormat">
            <summary>
            Gets the image format.
            </summary>
            <value>The image format.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ImageResource.NewFileExtension">
            <summary>
            Gets the new file extension.
            </summary>
            <value>The new file extension.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.TemplateCollector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TemplateCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.TemplateCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TemplateCollector.WriteStart(System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Performs writing on starting collector serialization
            </summary>
            <param name="objStreamWriter"></param>
            <param name="objController"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TemplateCollector.WriteEnd(System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Performs writing on ending collector serialization
            </summary>
            <param name="objStreamWriter"></param>
            <param name="objController"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TemplateCollector.Write(System.Web.HttpResponse,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the resource to the response.
            </summary>
            <param name="objResponse">The response.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileNamespace">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileNamespace.mstrPrefix">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileNamespace.mstrUrl">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileNamespace.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileNamespace"/> class.
            </summary>
            <param name="strPrefix">The namespace prefix.</param>
            <param name="strUrl">The namespace URL.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileNamespace.Prefix">
            <summary>
            Gets the namespace prefix.
            </summary>
            <value>The namespace prefix.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.XmlFileNamespace.Url">
            <summary>
            Gets the namespace URL.
            </summary>
            <value>The namespace URL.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.mblnComments">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.mblnWhiteSpaces">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.mblnObscuring">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.mblnScoping">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.mstrExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.mobjCollectors">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope"/> class.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.Comments">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope"/> write comments.
            </summary>
            <value><c>true</c> if write comments; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.WhiteSpaces">
            <summary>
            Gets or sets a value indicating whether to keep white spaces.
            </summary>
            <value><c>true</c> if to keep white spaces; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.Obscuring">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope"/> should use obscuring.
            </summary>
            <value><c>true</c> if  should use obscuring; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.Scoping">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope"/>  should use scoping.
            </summary>
            <value><c>true</c> if  should use scoping; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.Global">
            <summary>
            Gets the global.
            </summary>
            <value>The global.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.Extensions">
            <summary>
            Gets the registered extensions.
            </summary>
            <value>The registered extensions.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope.Collectors">
            <summary>
            Gets the registered collectors.
            </summary>
            <value>The registered collectors.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.RequestType">
            <summary>
            Request types
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Unknown">
            <summary>
            Unknown RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Content">
            <summary>
            Content RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Icons">
            <summary>
            Icons RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Types">
            <summary>
            Types RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Resources">
            <summary>
            Resources RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Images">
            <summary>
            Images RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Skins">
            <summary>
            Skins RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Statistics">
            <summary>
            Statistics RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Gateway">
            <summary>
            Gateway RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Data">
            <summary>
            Data RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Post">
            <summary>
            Post RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Preload">
            <summary>
            Preload RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Capture">
            <summary>
            Capture RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Replay">
            <summary>
            Replay RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Assemblies">
            <summary>
            Assemblies RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.StaticGateway">
            <summary>
            StaticGateway RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Mashup">
            <summary>
            Mashup RequestType
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.RequestType.Manifest">
            <summary>
            Manifest RequestType
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IRequestParams">
            <summary>
            Summary description for IRequestParams.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.Resource">
            <summary>
            Gets the resource.
            </summary>
            <value>The resource.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.Page">
            <summary>
            Gets the page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.PageInstance">
            <summary>
            Gets the page instance.
            </summary>
            <value>The page instance.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.OriginalPage">
            <summary>
            Gets the original page.
            </summary>
            <value>The original page.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.Events">
            <summary>
            Gets the events.
            </summary>
            <value>The events.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.IsPostback">
            <summary>
            Gets a value indicating whether this instance is postback.
            </summary>
            <value>
            	<c>true</c> if this instance is postback; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.IsUserPostback">
            <summary>
            Gets a value indicating whether this instance is user postback.
            </summary>
            <value>
            	<c>true</c> if this instance is user postback; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.IsInitialization">
            <summary>
            Gets a value indicating whether this instance is initialization.
            </summary>
            <value>
            	<c>true</c> if this instance is initialization; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.HasEvents">
            <summary>
            Gets a value indicating whether this instance has events.
            </summary>
            <value>
            	<c>true</c> if this instance has events; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRequestParams.LastRender">
            <summary>
            Gets the last render.
            </summary>
            <value>The last render.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ObservableListEventHandler">
            <summary>
            Delegate for the IObservableList interface
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ObservableListEventArgs">
            <summary>
            Arguments for the ItemPropertyChangedHandler event handler
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.ObservableListEventArgs.mobjItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.ObservableListEventArgs.#ctor(System.Object)">
            <summary>
            The Observable List EventArgs
            </summary>		
            <param name="objItem"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ObservableListEventArgs.Item">
            <summary>
            Gets the item that has been added or removed
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IObservableList">
            <summary>
            Intended to be used for lists that need to be observed
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IObservableList.ObservableItemAdded">
            <summary>
            Occurs when [observable item added].
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IObservableList.ObservableItemInserted">
            <summary>
            Occurs when [observable item inserted].
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IObservableList.ObservableItemRemoved">
            <summary>
            Occurs when [observable item removed].
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IObservableList.ObservableListCleared">
            <summary>
            Occurs when [observable list cleared].
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Client.Design.IClientDesigner">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesigner.GetVerbs">
            <summary>
            Gets the verbs.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Vitualization.IO.VirtualFile">
            <summary>Provides static methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <see cref="T:System.IO.VirtualFileStream"></see> objects.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.AppendAllText(System.String,System.String)">
            <summary>Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.</summary>
            <param name="contents">The string to append to the file. </param>
            <param name="path">The file to append the specified string to. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>Appends the specified string to the file, creating the file if it does not already exist.</summary>
            <param name="encoding">The character encoding to use. </param>
            <param name="contents">The string to append to the file. </param>
            <param name="path">The file to append the specified string to. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.AppendText(System.String)">
            <summary>Creates a <see cref="T:System.IO.StreamWriter"></see> that appends UTF-8 encoded text to an existing file.</summary>
            <returns>A StreamWriter that appends UTF-8 encoded text to an existing file.</returns>
            <param name="path">The path to the file to append to. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Copy(System.String,System.String)">
            <summary>Copies an existing file to a new file. Overwriting a file of the same name is not allowed.</summary>
            <param name="destFileName">The name of the destination file. This cannot be a directory or an existing file. </param>
            <param name="sourceFileName">The file to copy. </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path specified in sourceFileName or destFileName is invalid (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.ArgumentException">sourceFileName or destFileName is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>.-or- sourceFileName or destFileName specifies a directory. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">sourceFileName or destFileName is in an invalid format. </exception>
            <exception cref="T:System.IO.VirtualIOException">destFileName exists.-or- An I/O error has occurred. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.ArgumentNullException">sourceFileName or destFileName is null. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">sourceFileName was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Copy(System.String,System.String,System.Boolean)">
            <summary>Copies an existing file to a new file. Overwriting a file of the same name is allowed.</summary>
            <param name="destFileName">The name of the destination file. This cannot be a directory. </param>
            <param name="sourceFileName">The file to copy. </param>
            <param name="overwrite">true if the destination file can be overwritten; otherwise, false. </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path specified in sourceFileName or destFileName is invalid (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.ArgumentException">sourceFileName or destFileName is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>.-or- sourceFileName or destFileName specifies a directory. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">sourceFileName or destFileName is in an invalid format. </exception>
            <exception cref="T:System.IO.VirtualIOException">destFileName is read-only, or destFileName exists and overwrite is false.-or- An I/O error has occurred. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.ArgumentNullException">sourceFileName or destFileName is null. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">sourceFileName was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Create(System.String)">
            <summary>Creates a file in the specified path.</summary>
            <returns>A <see cref="T:System.IO.VirtualFileStream"></see> that provides read/write access to the file specified in path.</returns>
            <param name="path">The path and name of the file to create. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission.-or- path specified a file that is read-only. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while creating the file. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Create(System.String,System.Int32)">
            <summary>Creates or overwrites the specified file.</summary>
            <returns>A <see cref="T:System.IO.VirtualFileStream"></see> with the specified buffer size that provides read/write access to the file specified in path.</returns>
            <param name="bufferSize">The number of bytes buffered for reads and writes to the file. </param>
            <param name="path">The name of the file. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission.-or- path specified a file that is read-only. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while creating the file. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Create(System.String,System.Int32,System.IO.FileOptions)">
            <summary>Creates or overwrites the specified file, specifying a buffer size and a <see cref="T:System.IO.FileOptions"></see> value that describes how to create or overwrite the file.</summary>
            <returns>A new file with the specified buffer size.</returns>
            <param name="bufferSize">The number of bytes buffered for reads and writes to the file. </param>
            <param name="options">One of the <see cref="T:System.IO.FileOptions"></see> values that describes how to create or overwrite the file.</param>
            <param name="path">The name of the file. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission.-or- path specified a file that is read-only. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while creating the file. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
            <summary>Creates or overwrites the specified file with the specified buffer size, file options, and file security.</summary>
            <returns>A new file with the specified buffer size, file options, and file security.</returns>
            <param name="bufferSize">The number of bytes buffered for reads and writes to the file. </param>
            <param name="fileSecurity">One of the <see cref="T:System.Security.AccessControl.FileSecurity"></see> values that determines the access control and audit security for the file.</param>
            <param name="options">One of the <see cref="T:System.IO.FileOptions"></see> values that describes how to create or overwrite the file.</param>
            <param name="path">The name of the file. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission.-or- path specified a file that is read-only. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while creating the file. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.CreateText(System.String)">
            <summary>Creates or opens a file for writing UTF-8 encoded text.</summary>
            <returns>A <see cref="T:System.IO.StreamWriter"></see> that writes to the specified file using UTF-8 encoding.</returns>
            <param name="path">The file to be opened for writing. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Decrypt(System.String)">
            <summary>Decrypts a file that was encrypted by the current account using the <see cref="M:System.IO.VirtualFile.Encrypt(System.String)"></see> method.</summary>
            <param name="path">A path that describes a file to decrypt.</param>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file described by the path parameter could not be found.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.ArgumentException">The path parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>.</exception>
            <exception cref="T:System.IO.VirtualDriveNotFoundException">An invalid drive was specified. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.ArgumentNullException">The path parameter is null.</exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. For example, the encrypted file is already open.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The path parameter specified a file that is read-only.-or- This operation is not supported on the current platform.-or- The path parameter specified a directory.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.NotSupportedException">The file system is not NTFS.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Delete(System.String)">
            <summary>Deletes the specified file. An exception is not thrown if the specified file does not exist.</summary>
            <param name="path">The name of the file to be deleted. </param>
            <exception cref="T:System.IO.VirtualIOException">The specified file is in use. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission.-or- path is a directory.-or- path specified a read-only file. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Encrypt(System.String)">
            <summary>Encrypts a file so that only the account used to encrypt the file can decrypt it.</summary>
            <param name="path">A path that describes a file to encrypt.</param>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file described by the path parameter could not be found.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.ArgumentException">The path parameter is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>.</exception>
            <exception cref="T:System.IO.VirtualDriveNotFoundException">An invalid drive was specified. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.ArgumentNullException">The path parameter is null.</exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The path parameter specified a file that is read-only.-or- This operation is not supported on the current platform.-or- The path parameter specified a directory.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.NotSupportedException">The file system is not NTFS.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Exists(System.String)">
            <summary>Determines whether the specified file exists.</summary>
            <returns>true if the caller has the required permissions and path contains the name of an existing file; otherwise, false. This method also returns false if path is null or a zero-length string. If the caller does not have sufficient permissions to read the specified file, no exception is thrown and the method returns false regardless of the existence of path.</returns>
            <param name="path">The file to check. </param>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.GetAccessControl(System.String)">
            <summary>Gets a <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that encapsulates the access control list (ACL) entries for a specified file.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that encapsulates the access control rules for the file described by the path parameter.     </returns>
            <param name="path">The path to a file containing a <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that describes the file's access control list (ACL) information.</param>
            <exception cref="T:System.Runtime.InteropServices.SEHException">The path parameter is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The path parameter specified a file that is read-only.-or- This operation is not supported on the current platform.-or- The path parameter specified a directory.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.SystemException">The file could not be found.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>Gets a <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that encapsulates the specified type of access control list (ACL) entries for a particular file.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that encapsulates the access control rules for the file described by the path parameter.     </returns>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections"></see> values that specifies the type of access control list (ACL) information to receive.</param>
            <param name="path">The path to a file containing a <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that describes the file's access control list (ACL) information.</param>
            <exception cref="T:System.Runtime.InteropServices.SEHException">The path parameter is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The path parameter specified a file that is read-only.-or- This operation is not supported on the current platform.-or- The path parameter specified a directory.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.SystemException">The file could not be found.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.GetAttributes(System.String)">
            <summary>Gets the <see cref="T:System.IO.FileAttributes"></see> of the file on the path.</summary>
            <returns>The <see cref="T:System.IO.FileAttributes"></see> of the file on the path.</returns>
            <param name="path">The path to the file. </param>
            <exception cref="T:System.ArgumentException">path is empty, contains only white spaces, or contains invalid characters. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">path represents a file and is invalid, such as being on an unmapped drive, or the file cannot be found. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">path represents a directory and is invalid, such as being on an unmapped drive, or the directory cannot be found.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.GetCreationTime(System.String)">
            <summary>Returns the creation date and time of the specified file or directory.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the creation date and time for the specified file or directory. This value is expressed in local time.</returns>
            <param name="path">The file or directory for which to obtain creation date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.GetCreationTimeUtc(System.String)">
            <summary>Returns the creation date and time, in coordinated universal time (UTC), of the specified file or directory.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the creation date and time for the specified file or directory. This value is expressed in UTC time.</returns>
            <param name="path">The file or directory for which to obtain creation date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">path was not found. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.GetLastAccessTime(System.String)">
            <summary>Returns the date and time the specified file or directory was last accessed.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in local time.</returns>
            <param name="path">The file or directory for which to obtain access date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The specified path was not found. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.GetLastAccessTimeUtc(System.String)">
            <summary>Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last accessed.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the date and time that the specified file or directory was last accessed. This value is expressed in UTC time.</returns>
            <param name="path">The file or directory for which to obtain access date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The specified path was not found. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.GetLastWriteTime(System.String)">
            <summary>Returns the date and time the specified file or directory was last written to.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the date and time that the specified file or directory was last written to. This value is expressed in local time.</returns>
            <param name="path">The file or directory for which to obtain write date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The specified path was not found. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.GetLastWriteTimeUtc(System.String)">
            <summary>Returns the date and time, in coordinated universal time (UTC), that the specified file or directory was last written to.</summary>
            <returns>A <see cref="T:System.DateTime"></see> structure set to the date and time that the specified file or directory was last written to. This value is expressed in UTC time.</returns>
            <param name="path">The file or directory for which to obtain write date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The specified path was not found. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Move(System.String,System.String)">
            <summary>Moves a specified file to a new location, providing the option to specify a new file name.</summary>
            <param name="destFileName">The new path for the file. </param>
            <param name="sourceFileName">The name of the file to move. </param>
            <exception cref="T:System.IO.VirtualFileNotFoundException">sourceFileName was not found. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path specified in sourceFileName or destFileName is invalid, (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.NotSupportedException">sourceFileName or destFileName is in an invalid format. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.ArgumentNullException">sourceFileName or destFileName is null. </exception>
            <exception cref="T:System.ArgumentException">sourceFileName or destFileName is a zero-length string, contains only white space, or contains invalid characters as defined in <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.VirtualIOException">The destination file already exists. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Open(System.String,System.IO.FileMode)">
            <summary>Opens a <see cref="T:System.IO.VirtualFileStream"></see> on the specified path with read/write access.</summary>
            <returns>A <see cref="T:System.IO.VirtualFileStream"></see> opened in the specified mode and path, with read/write access and not shared.</returns>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten. </param>
            <param name="path">The file to open. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">mode specified an invalid value. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>Opens a <see cref="T:System.IO.VirtualFileStream"></see> on the specified path, with the specified mode and access.</summary>
            <returns>An unshared <see cref="T:System.IO.VirtualFileStream"></see> that provides access to the specified file, with the specified mode and access.</returns>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten. </param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> value that specifies the operations that can be performed on the file. </param>
            <param name="path">The file to open. </param>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>.-or- access specified Read and mode specified Create, CreateNew, Truncate, or Append. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">mode or access specified an invalid value. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only and access is not Read.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>Opens a <see cref="T:System.IO.VirtualFileStream"></see> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.</summary>
            <returns>A <see cref="T:System.IO.VirtualFileStream"></see> on the specified path, having the specified mode with read, write, or read/write access and the specified sharing option.</returns>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> value specifying the type of access other threads have to the file. </param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> value that specifies whether a file is created if one does not exist, and determines whether the contents of existing files are retained or overwritten. </param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> value that specifies the operations that can be performed on the file. </param>
            <param name="path">The file to open. </param>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>.-or- access specified Read and mode specified Create, CreateNew, Truncate, or Append. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">mode, access, or share specified an invalid value. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only and access is not Read.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.OpenRead(System.String)">
            <summary>Opens an existing file for reading.</summary>
            <returns>A read-only <see cref="T:System.IO.VirtualFileStream"></see> on the specified path.</returns>
            <param name="path">The file to be opened for reading. </param>
            <exception cref="T:System.UnauthorizedAccessException">path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.OpenText(System.String)">
            <summary>Opens an existing UTF-8 encoded text file for reading.</summary>
            <returns>A <see cref="T:System.IO.StreamReader"></see> on the specified path.</returns>
            <param name="path">The file to be opened for reading. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.OpenWrite(System.String)">
            <summary>Opens an existing file for writing.</summary>
            <returns>An unshared <see cref="T:System.IO.VirtualFileStream"></see> object on the specified path with <see cref="F:System.IO.FileAccess.Write"></see> access.</returns>
            <param name="path">The file to be opened for writing. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission.-or- path specified a read-only file or directory. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.ReadAllBytes(System.String)">
            <summary>Opens a binary file, reads the contents of the file into a byte array, and then closes the file.</summary>
            <returns>A byte array containing the contents of the file.</returns>
            <param name="path">The file to open for reading. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.ReadAllLines(System.String)">
            <summary>Opens a text file, reads all lines of the file, and then closes the file.</summary>
            <returns>A string array containing all lines of the file.</returns>
            <param name="path">The file to open for reading. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.ReadAllLines(System.String,System.Text.Encoding)">
            <summary>Opens a file, reads all lines of the file with the specified encoding, and then closes the file.</summary>
            <returns>A string array containing all lines of the file.</returns>
            <param name="encoding">The encoding applied to the contents of the file. </param>
            <param name="path">The file to open for reading. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.ReadAllText(System.String)">
            <summary>Opens a text file, reads all lines of the file, and then closes the file.</summary>
            <returns>A string array containing all lines of the file.</returns>
            <param name="path">The file to open for reading. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.ReadAllText(System.String,System.Text.Encoding)">
            <summary>Opens a file, reads all lines of the file with the specified encoding, and then closes the file.</summary>
            <returns>A string array containing all lines of the file.</returns>
            <param name="encoding">The encoding applied to the contents of the file. </param>
            <param name="path">The file to open for reading. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Replace(System.String,System.String,System.String)">
            <summary>Replaces the contents of a specified file with the contents of another file, deleting the original file, and creating a backup of the replaced file.</summary>
            <param name="sourceFileName">The name of a file that replaces the file specified by destinationFileName.</param>
            <param name="destinationBackupFileName">The name of the backup file.</param>
            <param name="destinationFileName">The name of the file being replaced.</param>
            <exception cref="T:System.ArgumentException">The path described by the destinationFileName parameter was not of a legal form.-or-The path described by the destinationBackupFileName parameter was not of a legal form.</exception>
            <exception cref="T:System.IO.VirtualDriveNotFoundException">An invalid drive was specified. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object could not be found.-or-The file described by the destinationBackupFileName parameter could not be found.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The operating system is Windows 98 Second Edition or earlier and the files system is not NTFS.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The path parameter specified a file that is read-only.-or- This operation is not supported on the current platform.-or- The path parameter specified a directory.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.ArgumentNullException">The destinationFileName parameter is null.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.Replace(System.String,System.String,System.String,System.Boolean)">
            <summary>Replaces the contents of a specified file with the contents of another file, deleting the original file, and creating a backup of the replaced file and optionally ignores merge errors.</summary>
            <param name="sourceFileName">The name of a file that replaces the file specified by destinationFileName.</param>
            <param name="destinationBackupFileName">The name of the backup file.</param>
            <param name="destinationFileName">The name of the file being replaced.</param>
            <param name="ignoreMetadataErrors">true to ignore merge errors (such as attributes and access control lists (ACLs)) from the replaced file to the replacement file; otherwise, false. </param>
            <exception cref="T:System.ArgumentException">The path described by the destinationFileName parameter was not of a legal form.-or-The path described by the destinationBackupFileName parameter was not of a legal form.</exception>
            <exception cref="T:System.IO.VirtualDriveNotFoundException">An invalid drive was specified. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object could not be found.-or-The file described by the destinationBackupFileName parameter could not be found.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The operating system is Windows 98 Second Edition or earlier and the files system is not NTFS.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The path parameter specified a file that is read-only.-or- This operation is not supported on the current platform.-or- The path parameter specified a directory.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.ArgumentNullException">The destinationFileName parameter is null.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)">
            <summary>Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.FileSecurity"></see> object to the specified file.</summary>
            <param name="fileSecurity">A <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that describes an ACL entry to apply to the file described by the path parameter.</param>
            <param name="path">A file to add or remove access control list (ACL) entries from.</param>
            <exception cref="T:System.Runtime.InteropServices.SEHException">The path parameter is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The path parameter specified a file that is read-only.-or- This operation is not supported on the current platform.-or- The path parameter specified a directory.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.SystemException">The file could not be found.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.SetAttributes(System.String,System.IO.FileAttributes)">
            <summary>Sets the specified <see cref="T:System.IO.FileAttributes"></see> of the file on the specified path.</summary>
            <param name="fileAttributes">The desired <see cref="T:System.IO.FileAttributes"></see>, such as Hidden, ReadOnly, Normal, and Archive. </param>
            <param name="path">The path to the file. </param>
            <exception cref="T:System.ArgumentException">path is empty, contains only white spaces, contains invalid characters, or the file attribute is invalid. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, (for example, it is on an unmapped drive). </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.SetCreationTime(System.String,System.DateTime)">
            <summary>Sets the date and time the file was created.</summary>
            <param name="creationTime">A <see cref="T:System.DateTime"></see> containing the value to set for the creation date and time of path. This value is expressed in local time. </param>
            <param name="path">The file for which to set the creation date and time information. </param>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while performing the operation. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">creationTime specifies a value outside the range of dates, times, or both permitted for this operation. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.SetCreationTimeUtc(System.String,System.DateTime)">
            <summary>Sets the date and time, in coordinated universal time (UTC), that the file was created.</summary>
            <param name="creationTimeUtc">A <see cref="T:System.DateTime"></see> containing the value to set for the creation date and time of path. This value is expressed in UTC time. </param>
            <param name="path">The file for which to set the creation date and time information. </param>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while performing the operation. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">creationTime specifies a value outside the range of dates, times, or both permitted for this operation. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.SetLastAccessTime(System.String,System.DateTime)">
            <summary>Sets the date and time the specified file was last accessed.</summary>
            <param name="lastAccessTime">A <see cref="T:System.DateTime"></see> containing the value to set for the last access date and time of path. This value is expressed in local time. </param>
            <param name="path">The file for which to set the access date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.SetLastAccessTimeUtc(System.String,System.DateTime)">
            <summary>Sets the date and time, in coordinated universal time (UTC), that the specified file was last accessed.</summary>
            <param name="lastAccessTimeUtc">A <see cref="T:System.DateTime"></see> containing the value to set for the last access date and time of path. This value is expressed in UTC time. </param>
            <param name="path">The file for which to set the access date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.SetLastWriteTime(System.String,System.DateTime)">
            <summary>Sets the date and time that the specified file was last written to.</summary>
            <param name="lastWriteTime">A <see cref="T:System.DateTime"></see> containing the value to set for the last write date and time of path. This value is expressed in local time. </param>
            <param name="path">The file for which to set the date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.SetLastWriteTimeUtc(System.String,System.DateTime)">
            <summary>Sets the date and time, in coordinated universal time (UTC), that the specified file was last written to.</summary>
            <param name="lastWriteTimeUtc">A <see cref="T:System.DateTime"></see> containing the value to set for the last write date and time of path. This value is expressed in UTC time. </param>
            <param name="path">The file for which to set the date and time information. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The specified path was not found. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.WriteAllBytes(System.String,System.Byte[])">
            <summary>Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.</summary>
            <param name="path">The file to write to. </param>
            <param name="bytes">The bytes to write to the file. </param>
            <exception cref="T:System.ArgumentNullException">path is null or the byte array is empty. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.WriteAllLines(System.String,System.String[])">
            <summary>Creates a new file, write the specified string array to the file, and then closes the file. If the target file already exists, it is overwritten.</summary>
            <param name="contents">The string array to write to the file. </param>
            <param name="path">The file to write to. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
            <summary>Creates a new file, writes the specified string array to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.</summary>
            <param name="encoding">An <see cref="T:System.Text.Encoding"></see> object that represents the character encoding applied to the string array.</param>
            <param name="contents">The string array to write to the file. </param>
            <param name="path">The file to write to. </param>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.ArgumentNullException">path is null or contents string is empty. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.WriteAllText(System.String,System.String)">
            <summary>Creates a new file, writes the specified string array to the file, and then closes the file. If the target file already exists, it is overwritten.</summary>
            <param name="contents">The string array to write to the file. </param>
            <param name="path">The file to write to. </param>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFile.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>Creates a new file, writes the specified string array to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.</summary>
            <param name="encoding">An <see cref="T:System.Text.Encoding"></see> object that represents the encoding to apply to the string array.</param>
            <param name="contents">The string array to write to the file. </param>
            <param name="path">The file to write to. </param>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file specified in path was not found. </exception>
            <exception cref="T:System.ArgumentNullException">path is null or contents string is empty. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.NotSupportedException">path is in an invalid format. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path specified a file that is read-only.-or- This operation is not supported on the current platform.-or- path specified a directory.-or- The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid (for example, it is on an unmapped drive). </exception>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xml.XmlToken.mobjXmlTokenReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlToken.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Xml.XmlToken"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Xml.XmlToken.SubTokens">
            <summary>
            Gets the sub tokens.
            </summary>
            <value>The sub tokens.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xaml.XamlTokenReader.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Xaml.XamlTokenReader"/> class.
            </summary>
            <param name="strSource">The source.</param>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.RegHeader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader"/> class.
            </summary>
            <param name="objTokenContext"></param>
            <param name="objSource">The source.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.ReadToken">
            <summary>
            Reads the token.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.IsEndRegValueQuote(System.Int32)">
            <summary>
            Determines whether [is end reg value quote] [the specified int offset].
            </summary>
            <param name="intOffset">The int offset.</param>
            <returns>
            	<c>true</c> if [is end reg value quote] [the specified int offset]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.IsEndRegValue(System.Int32)">
            <summary>
            Determines whether [is end reg value] [the specified CHR current].
            </summary>
            <param name="intOffset">The int offset.</param>
            <returns>
            	<c>true</c> if [is end reg value] [the specified CHR current]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.ReadRegName(System.Char)">
            <summary>
            Reads the name of the reg.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.IsEndRegName(System.Int32)">
            <summary>
            Determines whether [is end reg name] [the specified int offset].
            </summary>
            <param name="intOffset">The int offset.</param>
            <returns>
            	<c>true</c> if [is end reg name] [the specified int offset]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.IsStartRegName(System.Char)">
            <summary>
            Determines whether [is start reg name] [the specified CHR current].
            </summary>
            <param name="chrCurrent">The CHR current.</param>
            <returns>
            	<c>true</c> if [is start reg name] [the specified CHR current]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.ReadRegPath">
            <summary>
            Reads the reg path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.IsRegPathEnd(System.Char)">
            <summary>
            Determines whether [is reg path end] [the specified CHR current].
            </summary>
            <param name="chrCurrent">The CHR current.</param>
            <returns>
            	<c>true</c> if [is reg path end] [the specified CHR current]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.IsStartRegPath(System.Char)">
            <summary>
            Determines whether [is start reg path] [the specified CHR current].
            </summary>
            <param name="chrCurrent">The CHR current.</param>
            <returns>
            	<c>true</c> if [is start reg path] [the specified CHR current]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.ReadRegHeader">
            <summary>
            Reads the reg header.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.IsRegHeader(System.Char)">
            <summary>
            Determines whether [is reg header] [the specified CHR current].
            </summary>
            <param name="chrCurrent">The CHR current.</param>
            <returns>
            	<c>true</c> if [is reg header] [the specified CHR current]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Reg.RegTokenReader.IsStartRegHeader(System.Char)">
            <summary>
            Determines whether [is start reg header] [the specified CHR current].
            </summary>
            <param name="chrCurrent">The CHR current.</param>
            <returns>
            	<c>true</c> if [is start reg header] [the specified CHR current]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.JS.JSToken.mobjJSTokenReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JS.JSToken.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.JS.JSToken"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.JS.JSToken.SubTokens">
            <summary>
            Gets the sub tokens.
            </summary>
            <value>The sub tokens.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.GetContextParam(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.String)">
            <summary>
            Get context param value
            </summary>
            <param name="objOwner"></param>
            <param name="strParam"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.GetLabelValue(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.String,System.Boolean)">
            <summary>
            Get label value
            </summary>
            <param name="objOwner">The obj owner.</param>
            <param name="strLabel">The STR label.</param>
            <param name="blnEscape">if set to <c>true</c> [BLN escape].</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.GetSkinValue(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.String)">
            <summary>
            Get skin value
            </summary>
            <param name="objOwner"></param>
            <param name="strSkinVariable"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.GetTagName(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.String)">
            <summary>
            Get tag name
            </summary>
            <param name="objOwner"></param>
            <param name="strTagName"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.GetAttributeName(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.SkinScope,System.String)">
            <summary>
            Get attribute name
            </summary>
            <param name="objOwner"></param>
            <param name="strAttributeName"></param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.BrowserExtension">
            <summary>
            Gets the browser extension code
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.Presentation">
            <summary>
            Gets the presentation.
            </summary>
            <value>The presentation.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.PresentationEngine">
            <summary>
            Gets the presentation engine.
            </summary>
            <value>The presentation engine.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.PresetnationCapabilities">
            <summary>
            Gets the presetnation capabilities.
            </summary>
            <value>The presetnation capabilities.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase.TextEncoding">
            <summary>
            Gets the text encoding.
            </summary>
            <value>The text encoding.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Gateways.GatewayHandler">
            <summary>
            Summary description for GatewayAction.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Gateways.GatewayHandler"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayHandler.ProcessGatewayRequest(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent)">
            <summary>
            Processes the gateway request.
            </summary>
            <param name="objContext">The obj context.</param>
            <param name="objComponent">The obj component.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Gateways.GatewayFile">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Gateways.GatewayWriter">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayWriter.ProcessGatewayRequest(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent)">
            <summary>
            Processes the gateway request.
            </summary>
            <param name="objContext">The obj context.</param>
            <param name="objComponent">The obj component.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayWriter.ProcessRequest">
            <summary>
            Processes the request.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayWriter.WriteFile(System.String)">
            <summary>
            Writes the file.
            </summary>
            <param name="strPath">The STR path.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayWriter.Write(System.String)">
            <summary>
            Writes the specified STR value.
            </summary>
            <param name="strValue">The STR value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayWriter.Write(System.Byte[])">
            <summary>
            Writes the specified arr byte.
            </summary>
            <param name="arrByte">The arr byte.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayWriter.SetContentDisposition(System.String)">
            <summary>
            Sets the content disposition.
            </summary>
            <param name="strFileName">Name of the STR file.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayWriter.GetRequestParam(System.String)">
            <summary>
            Gets the request param.
            </summary>
            <param name="strName">Name of the STR.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayWriter.GetFormParam(System.String)">
            <summary>
            Gets the form param.
            </summary>
            <param name="strName">Name of the STR.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayWriter.GetQueryParam(System.String)">
            <summary>
            Gets the query param.
            </summary>
            <param name="strName">Name of the STR.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayWriter.GatewayComponent">
            <summary>
            Gets the gateway component.
            </summary>
            <value>The gateway component.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayWriter.ContentType">
            <summary>
            Gets or sets the type of the content.
            </summary>
            <value>The type of the content.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayFile.#ctor">
            <summary>
            Creates a new <see cref="T:Gizmox.WebGUI.Common.Gateways.GatewayFile"/> instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayFile.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Gizmox.WebGUI.Common.Gateways.GatewayFile"/> instance.
            </summary>
            <param name="strPath">path.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayFile.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:Gizmox.WebGUI.Common.Gateways.GatewayFile"/> instance.
            </summary>
            <param name="strPath">path.</param>
            <param name="strContentType">Type of the STR content.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayFile.ProcessRequest">
            <summary>
            Processes the gateway request.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayFile.Path">
            <summary>
            Gets or sets the path.
            </summary>
            <value></value>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Serialization.SerializableTypeConverterWrapper.mstrTypeConverterType">
            <summary>
            The type of the type converter
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableTypeConverterWrapper.#ctor(System.ComponentModel.TypeConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableTypeConverterWrapper"/> class.
            </summary>
            <param name="objTypeConverter">The property info.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableTypeConverterWrapper.GetInstanceFromData(System.Object)">
            <summary>
            Gets the instance from data.
            </summary>
            <typeparam name="TypeConverter">The type of the instance.</typeparam>
            <param name="objInstance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableTypeConverterWrapper.SaveInstanceData(System.Object)">
            <summary>
            Saves the instance data.
            </summary>
            <typeparam name="TypeConverter">The type of the instance.</typeparam>
            <param name="objInstance">The instance.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.PropertyStore">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.PropertyStore.arrIntegerEntries">
            <summary>
            Holds all the integer entries
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.PropertyStore.arrObjectEntries">
            <summary>
            Holds all the object entries
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.PropertyStore.mblnIsSerializedState">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Forms.PropertyStore"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.PropertyStore"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.PropertyStore"/> class.
            </summary>
            <param name="objSerializationInfo">The serialization info.</param>
            <param name="objStreamingContext">The serialization context.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="objSerializationInfo">The serialization info.</param>
            <param name="objStreamingContext">The streaming context.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.ContainsInteger(System.Int32)">
            <summary>
            Determines whether the specified key contains integer.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified key contains integer; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.ContainsObject(System.Int32)">
            <summary>
            Determines whether the specified key contains object.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified key contains object; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.ContainsValue``1(Gizmox.WebGUI.Forms.SerializableProperty)">
            <summary>
            Determines whether the specified key contains value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objSerializableProperty">The serializable property.</param>
            <returns>
            	<c>true</c> if the specified key contains value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.SetValue``1(Gizmox.WebGUI.Forms.SerializableProperty,``0)">
            <summary>
            Sets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objSerializableProperty">The serializable property.</param>
            <param name="objValue">The obj value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.ShouldWrap(System.Type)">
            <summary>
            Indicates if the value should be stored in a wrapper
            </summary>
            <param name="objType"></param>
            <param name="objValue"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.EnsureSerializable(Gizmox.WebGUI.Forms.SerializableProperty,System.Object)">
            <summary>
            Ensures the instance is serializable serializable.
            </summary>
            <param name="objValue">The obj value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.GetValue``1(Gizmox.WebGUI.Forms.SerializableProperty)">
            <summary>
            Gets the value.
            </summary>
            <param name="objSerializableProperty">The serializable property.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.ConvertToGeneric``1(System.Object)">
            <summary>
            Converts to and object to a generic type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objValue">The value to convert.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.GetValue``1(Gizmox.WebGUI.Forms.SerializableProperty,System.Boolean@)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objSerializableProperty">The serializable property.</param>
            <param name="blnFound">if set to <c>true</c> found value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.GetValue``1(Gizmox.WebGUI.Forms.SerializableProperty,``0)">
            <summary>
            Gets the value.
            </summary>
            <param name="objSerializableProperty">The serializable property.</param>
            <param name="objDefault">The default value to return if key was not set.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.GetInteger(System.Int32)">
            <summary>
            Gets the integer.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.GetInteger(System.Int32,System.Int32)">
            <summary>
            Gets the integer.
            </summary>
            <param name="key">The key.</param>
            <param name="intDefault">The default value to return if key was not set.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.GetInteger(System.Int32,System.Boolean@)">
            <summary>
            Gets the integer.
            </summary>
            <param name="key">The key.</param>
            <param name="found">if set to <c>true</c> [found].</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.GetObject(System.Int32)">
            <summary>
            Gets the object.
            </summary>
            <param name="intKey">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.GetObject(System.Int32,System.Object)">
            <summary>
            Gets the integer.
            </summary>
            <param name="intKey">The key.</param>
            <param name="objDefault">The default value to return if key was not set.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.GetObject(System.Int32,System.Boolean@)">
            <summary>
            Gets the object.
            </summary>
            <param name="intKey">The key.</param>
            <param name="found">if set to <c>true</c> [found].</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.RemoveValue``1(Gizmox.WebGUI.Forms.SerializableProperty)">
            <summary>
            Removes the value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objSerializableProperty">The serializable property.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.RemoveInteger(System.Int32)">
            <summary>
            Removes the integer.
            </summary>
            <param name="intKey">The key.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.RemoveObject(System.Int32)">
            <summary>
            Removes the object.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.SetInteger(System.Int32,System.Int32)">
            <summary>
            Sets the integer.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.SetObject(System.Int32,System.Object)">
            <summary>
            Sets the object.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.PropertyStore.IsSerializedState">
            <summary>
            Gets a value indicating whether this instance is serialized state.
            </summary>
            <value>
            	<c>true</c> if this instance is serialized state; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.PropertyStore.GenericWrapper`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.GenericWrapper`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.PropertyStore.GenericWrapper`1"/> class.
            </summary>
            <param name="objValue">The value to wrap.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property">
            <summary>
            Provides a integer property wrapping implementation of the BitVecrtor32 class
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.IBitVector32">
            <summary>
            Provides an integer wrapper alternative implementation for BitVecrot32 
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.IBitVector32.Data">
            <summary>
            Gets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.IBitVector32.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:System.Boolean"/> in the specified bit.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.IBitVector32.Item(System.Collections.Specialized.BitVector32.Section)">
            <summary>
            Gets or sets the <see cref="T:System.Int32"/> int the specified section.
            </summary>
            <value></value>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.mobjPropertyStore">
            <summary>
            The owner property store
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.mobjSerializableProperty">
            <summary>
            The property key to use
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.muintValueChache">
            <summary>
            The value cache
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.mblnValueCached">
            <summary>
            Indicates if value was cached for faster reads
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.#ctor(Gizmox.WebGUI.Forms.PropertyStore,Gizmox.WebGUI.Forms.SerializableProperty)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property"/> class.
            </summary>
            <param name="objPropertyStore">The property store.</param>
            <param name="objSerializableProperty">The serialization property.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32"></see>.</summary>
            <returns>true if the specified object is equal to the <see cref="T:System.Collections.Specialized.BitVector32"></see>; otherwise, false.</returns>
            <param name="o">The object to compare with the current <see cref="T:System.Collections.Specialized.BitVector32"></see>. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.GetHashCode">
            <summary>Serves as a hash function for the <see cref="T:System.Collections.Specialized.BitVector32"></see>.</summary>
            <returns>A hash code for the <see cref="T:System.Collections.Specialized.BitVector32"></see>.</returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.ToString(Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property)">
            <summary>Returns a string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32"></see>.</summary>
            <returns>A string that represents the specified <see cref="T:System.Collections.Specialized.BitVector32"></see>.</returns>
            <param name="value">The <see cref="T:System.Collections.Specialized.BitVector32"></see> to represent. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.ToString">
            <summary>Returns a string that represents the current <see cref="T:System.Collections.Specialized.BitVector32"></see>.</summary>
            <returns>A string that represents the current <see cref="T:System.Collections.Specialized.BitVector32"></see>.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.Value">
            <summary>
            Gets or sets the property value.
            </summary>
            <value>The property value.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.Item(System.Int32)">
            <summary>Gets or sets the state of the bit flag indicated by the specified mask.</summary>
            <returns>true if the specified bit flag is on (1); otherwise, false.</returns>
            <param name="bit">A mask that indicates the bit to get or set. </param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.Item(System.Collections.Specialized.BitVector32.Section)">
            <summary>Gets or sets the value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section"></see>.</summary>
            <returns>The value stored in the specified <see cref="T:System.Collections.Specialized.BitVector32.Section"></see>.</returns>
            <param name="section">A <see cref="T:System.Collections.Specialized.BitVector32.Section"></see> that contains the value to get or set. </param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.PropertyStore.BitVector32Property.Data">
            <summary>Gets the value of the <see cref="T:System.Collections.Specialized.BitVector32"></see> as an integer.</summary>
            <returns>The value of the <see cref="T:System.Collections.Specialized.BitVector32"></see> as an integer.</returns>
        </member>
        <member name="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValue.#ctor(Gizmox.WebGUI.Virtualization.VirtualNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValue"/> class.
            </summary>
            <param name="objVirtualNode">The virtual node.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValue.Create(Gizmox.WebGUI.Virtualization.VirtualNode)">
            <summary>
            Creates a new registry value object.
            </summary>
            <param name="objVirtualNode">The virtual node.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValue.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValue.DataId">
            <summary>
            Gets the data id.
            </summary>
            <value>The data id.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValue.DataValue">
            <summary>
            Gets the data value.
            </summary>
            <value>The data value.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValue.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream">
            <summary>Exposes a <see cref="T:System.IO.Stream"></see> around a file, supporting both synchronous and asynchronous read and write operations.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.mobjReference">
            <summary>
            The virtual file stream node reference
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.mobjNodeStream">
            <summary>
            The virtual file stream node stream
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.mstrNodePath">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.menmFileMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.menmAccessMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.menmShareMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.mblnUseAsyncMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.mblnIsDirty">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.mintBufferSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.mobjOptionsMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.mobjFileSecurity">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.menmRights">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.mblnIsClosed">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(Gizmox.WebGUI.Virtualization.VirtualReference,System.IO.FileMode)">
            <summary>
            Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path and creation mode.
            </summary>
            <param name="objVirtualReference">The virtual node reference.</param>
            <param name="enmAccessMode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">mode contains an invalid value. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(System.String,System.IO.FileMode)">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path and creation mode.</summary>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file. </param>
            <param name="path">A relative or absolute path for the file that the current VirtualFileStream object will encapsulate. </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">mode contains an invalid value. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(Gizmox.WebGUI.Virtualization.VirtualReference,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, and read/write permission.
            </summary>
            <param name="objVirtualReference">The virtual node reference.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file.</param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant that determines how the file can be accessed by the VirtualFileStream object. This gets the <see cref="P:System.IO.VirtualFileStream.CanRead"></see> and <see cref="P:System.IO.VirtualFileStream.CanWrite"></see> properties of the VirtualFileStream object. <see cref="P:System.IO.VirtualFileStream.CanSeek"></see> is true if path specifies a disk file.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">mode contains an invalid value. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, and read/write permission.</summary>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file. </param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant that determines how the file can be accessed by the VirtualFileStream object. This gets the <see cref="P:System.IO.VirtualFileStream.CanRead"></see> and <see cref="P:System.IO.VirtualFileStream.CanWrite"></see> properties of the VirtualFileStream object. <see cref="P:System.IO.VirtualFileStream.CanSeek"></see> is true if path specifies a disk file. </param>
            <param name="path">A relative or absolute path for the file that the current VirtualFileStream object will encapsulate. </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">mode contains an invalid value. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(Gizmox.WebGUI.Virtualization.VirtualReference,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, read/write permission, and sharing permission.
            </summary>
            <param name="objVirtualReference">The virtual node reference.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file.</param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant that determines how the file can be accessed by the VirtualFileStream object. This gets the <see cref="P:System.IO.VirtualFileStream.CanRead"></see> and <see cref="P:System.IO.VirtualFileStream.CanWrite"></see> properties of the VirtualFileStream object. <see cref="P:System.IO.VirtualFileStream.CanSeek"></see> is true if path specifies a disk file.</param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">mode contains an invalid value. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. The system is running Windows 98 or Windows 98 Second Edition and share is set to FileShare.Delete.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, read/write permission, and sharing permission.</summary>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes. </param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file. </param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant that determines how the file can be accessed by the VirtualFileStream object. This gets the <see cref="P:System.IO.VirtualFileStream.CanRead"></see> and <see cref="P:System.IO.VirtualFileStream.CanWrite"></see> properties of the VirtualFileStream object. <see cref="P:System.IO.VirtualFileStream.CanSeek"></see> is true if path specifies a disk file. </param>
            <param name="path">A relative or absolute path for the file that the current VirtualFileStream object will encapsulate. </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">mode contains an invalid value. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. The system is running Windows 98 or Windows 98 Second Edition and share is set to FileShare.Delete.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(Gizmox.WebGUI.Virtualization.VirtualReference,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, read/write and sharing permission, and buffer size.
            </summary>
            <param name="objVirtualReference">The virtual node reference.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file.</param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant that determines how the file can be accessed by the VirtualFileStream object. This gets the <see cref="P:System.IO.VirtualFileStream.CanRead"></see> and <see cref="P:System.IO.VirtualFileStream.CanWrite"></see> properties of the VirtualFileStream object. <see cref="P:System.IO.VirtualFileStream.CanSeek"></see> is true if path specifies a disk file.</param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes.</param>
            <param name="bufferSize">A positive <see cref="T:System.Int32"></see> value greater than 0 indicating the buffer size. For bufferSize values between zero and eight, the actual buffer size is set to eight bytes.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is negative or zero.-or- mode, access, or share contain an invalid value. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. The system is running Windows 98 or Windows 98 Second Edition and share is set to FileShare.Delete.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, read/write and sharing permission, and buffer size.</summary>
            <param name="bufferSize">A positive <see cref="T:System.Int32"></see> value greater than 0 indicating the buffer size. For bufferSize values between zero and eight, the actual buffer size is set to eight bytes. </param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes. </param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file. </param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant that determines how the file can be accessed by the VirtualFileStream object. This gets the <see cref="P:System.IO.VirtualFileStream.CanRead"></see> and <see cref="P:System.IO.VirtualFileStream.CanWrite"></see> properties of the VirtualFileStream object. <see cref="P:System.IO.VirtualFileStream.CanSeek"></see> is true if path specifies a disk file. </param>
            <param name="path">A relative or absolute path for the file that the current VirtualFileStream object will encapsulate. </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is negative or zero.-or- mode, access, or share contain an invalid value. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. The system is running Windows 98 or Windows 98 Second Edition and share is set to FileShare.Delete.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(Gizmox.WebGUI.Virtualization.VirtualReference,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, read/write and sharing permission, buffer size, and synchronous or asynchronous state.
            </summary>
            <param name="objVirtualReference">The virtual node reference.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file.</param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant that determines how the file can be accessed by the VirtualFileStream object. This gets the <see cref="P:System.IO.VirtualFileStream.CanRead"></see> and <see cref="P:System.IO.VirtualFileStream.CanWrite"></see> properties of the VirtualFileStream object. <see cref="P:System.IO.VirtualFileStream.CanSeek"></see> is true if path specifies a disk file.</param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes.</param>
            <param name="bufferSize">A positive <see cref="T:System.Int32"></see> value greater than 0 indicating the buffer size. For bufferSize values between zero and eight, the actual buffer size is set to eight bytes.</param>
            <param name="useAsync">Specifies whether to use asynchronous I/O or synchronous I/O. However, note that the underlying operating system might not support asynchronous I/O, so when specifying true, the handle might be opened synchronously depending on the platform. When opened asynchronously, the <see cref="M:System.IO.VirtualFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"></see> and <see cref="M:System.IO.VirtualFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"></see> methods perform better on large reads or writes, but they might be much slower for small reads or writes. If the application is designed to take advantage of asynchronous I/O, set the useAsync parameter to true. Using asynchronous I/O correctly can speed up applications by as much as a factor of 10, but using it without redesigning the application for asynchronous I/O can decrease performance by as much as a factor of 10.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is negative or zero.-or- mode, access, or share contain an invalid value. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. The system is running Windows 98 or Windows 98 Second Edition and share is set to FileShare.Delete.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, read/write and sharing permission, buffer size, and synchronous or asynchronous state.</summary>
            <param name="bufferSize">A positive <see cref="T:System.Int32"></see> value greater than 0 indicating the buffer size. For bufferSize values between zero and eight, the actual buffer size is set to eight bytes. </param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes. </param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file. </param>
            <param name="useAsync">Specifies whether to use asynchronous I/O or synchronous I/O. However, note that the underlying operating system might not support asynchronous I/O, so when specifying true, the handle might be opened synchronously depending on the platform. When opened asynchronously, the <see cref="M:System.IO.VirtualFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"></see> and <see cref="M:System.IO.VirtualFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"></see> methods perform better on large reads or writes, but they might be much slower for small reads or writes. If the application is designed to take advantage of asynchronous I/O, set the useAsync parameter to true. Using asynchronous I/O correctly can speed up applications by as much as a factor of 10, but using it without redesigning the application for asynchronous I/O can decrease performance by as much as a factor of 10. </param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant that determines how the file can be accessed by the VirtualFileStream object. This gets the <see cref="P:System.IO.VirtualFileStream.CanRead"></see> and <see cref="P:System.IO.VirtualFileStream.CanWrite"></see> properties of the VirtualFileStream object. <see cref="P:System.IO.VirtualFileStream.CanSeek"></see> is true if path specifies a disk file. </param>
            <param name="path">A relative or absolute path for the file that the current VirtualFileStream object will encapsulate. </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is negative or zero.-or- mode, access, or share contain an invalid value. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. The system is running Windows 98 or Windows 98 Second Edition and share is set to FileShare.Delete.</exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(Gizmox.WebGUI.Virtualization.VirtualReference,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, read/write and sharing permission, the access other FileStreams can have to the same file, the buffer size, and additional file options.
            </summary>
            <param name="objVirtualReference">The virtual node reference.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file.</param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant that determines how the file can be accessed by the VirtualFileStream object. This gets the <see cref="P:System.IO.VirtualFileStream.CanRead"></see> and <see cref="P:System.IO.VirtualFileStream.CanWrite"></see> properties of the VirtualFileStream object. <see cref="P:System.IO.VirtualFileStream.CanSeek"></see> is true if path specifies a disk file.</param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes.</param>
            <param name="bufferSize">A positive <see cref="T:System.Int32"></see> value greater than 0 indicating the buffer size. For bufferSize values between zero and eight, the actual buffer size is set to eight bytes.</param>
            <param name="options">A <see cref="T:System.IO.FileOptions"></see> value that specifies additional file options.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is negative or zero.-or- mode, access, or share contain an invalid value. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, read/write and sharing permission, the access other FileStreams can have to the same file, the buffer size, and additional file options.</summary>
            <param name="bufferSize">A positive <see cref="T:System.Int32"></see> value greater than 0 indicating the buffer size. For bufferSize values between zero and eight, the actual buffer size is set to eight bytes. </param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes. </param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file. </param>
            <param name="options">A <see cref="T:System.IO.FileOptions"></see> value that specifies additional file options.</param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant that determines how the file can be accessed by the VirtualFileStream object. This gets the <see cref="P:System.IO.VirtualFileStream.CanRead"></see> and <see cref="P:System.IO.VirtualFileStream.CanWrite"></see> properties of the VirtualFileStream object. <see cref="P:System.IO.VirtualFileStream.CanSeek"></see> is true if path specifies a disk file. </param>
            <param name="path">A relative or absolute path for the file that the current VirtualFileStream object will encapsulate. </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is negative or zero.-or- mode, access, or share contain an invalid value. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(Gizmox.WebGUI.Virtualization.VirtualReference,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, access rights and sharing permission, the buffer size, and additional file options.
            </summary>
            <param name="objVirtualReference">The virtual node reference.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file.</param>
            <param name="rights">A <see cref="T:System.Security.AccessControl.FileSystemRights"></see> constant that determines the access rights to use when creating access and audit rules for the file.</param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes.</param>
            <param name="bufferSize">A positive <see cref="T:System.Int32"></see> value greater than 0 indicating the buffer size. For bufferSize values between zero and eight, the actual buffer size is set to eight bytes.</param>
            <param name="options">A <see cref="T:System.IO.FileOptions"></see> constant that specifies additional file options.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Windows NT or later.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is negative or zero.-or- mode, access, or share contain an invalid value. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, access rights and sharing permission, the buffer size, and additional file options.</summary>
            <param name="rights">A <see cref="T:System.Security.AccessControl.FileSystemRights"></see> constant that determines the access rights to use when creating access and audit rules for the file.</param>
            <param name="bufferSize">A positive <see cref="T:System.Int32"></see> value greater than 0 indicating the buffer size. For bufferSize values between zero and eight, the actual buffer size is set to eight bytes.</param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file.</param>
            <param name="options">A <see cref="T:System.IO.FileOptions"></see> constant that specifies additional file options.</param>
            <param name="path">A relative or absolute path for the file that the current <see cref="T:System.IO.VirtualFileStream"></see> object will encapsulate.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Windows NT or later.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is negative or zero.-or- mode, access, or share contain an invalid value. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(Gizmox.WebGUI.Virtualization.VirtualReference,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
            <summary>
            Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, access rights and sharing permission, the buffer size, additional file options, access control and audit security.
            </summary>
            <param name="objVirtualReference">The virtual node reference.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file.</param>
            <param name="rights">A <see cref="T:System.Security.AccessControl.FileSystemRights"></see> constant that determines the access rights to use when creating access and audit rules for the file.</param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes.</param>
            <param name="bufferSize">A positive <see cref="T:System.Int32"></see> value greater than 0 indicating the buffer size. For bufferSize values between zero and eight, the actual buffer size is set to eight bytes.</param>
            <param name="options">A <see cref="T:System.IO.FileOptions"></see> constant that specifies additional file options.</param>
            <param name="fileSecurity">A <see cref="T:System.Security.AccessControl.FileSecurity"></see> constant that determines the access control and audit security for the file.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Windows NT or later.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is negative or zero.-or- mode, access, or share contain an invalid value. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualFileStream"></see> class with the specified path, creation mode, access rights and sharing permission, the buffer size, additional file options, access control and audit security.</summary>
            <param name="rights">A <see cref="T:System.Security.AccessControl.FileSystemRights"></see> constant that determines the access rights to use when creating access and audit rules for the file.</param>
            <param name="bufferSize">A positive <see cref="T:System.Int32"></see> value greater than 0 indicating the buffer size. For bufferSize values between zero and eight, the actual buffer size is set to eight bytes.</param>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant that determines how the file will be shared by processes.</param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant that determines how to open or create the file.</param>
            <param name="fileSecurity">A <see cref="T:System.Security.AccessControl.FileSecurity"></see> constant that determines the access control and audit security for the file.</param>
            <param name="options">A <see cref="T:System.IO.FileOptions"></see> constant that specifies additional file options.</param>
            <param name="path">A relative or absolute path for the file that the current <see cref="T:System.IO.VirtualFileStream"></see> object will encapsulate.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Windows NT or later.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">bufferSize is negative or zero.-or- mode, access, or share contain an invalid value. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as specifying FileMode.CreateNew and the file specified by path already exists. </exception>
            <exception cref="T:System.ArgumentException">path is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
            <exception cref="T:System.IO.VirtualFileNotFoundException">The file cannot be found, such as when mode is FileMode.Truncate or FileMode.Open, and the file specified by path does not exist. The file must already exist in these modes. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified path, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.OpenFile">
            <summary>
            Opens the file.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Begins an asynchronous read.</summary>
            <returns>An <see cref="T:System.IAsyncResult"></see> that references the asynchronous read.</returns>
            <param name="offset">The byte offset in array at which to begin reading. </param>
            <param name="array">The buffer to read data into. </param>
            <param name="numBytes">The maximum number of bytes to read. </param>
            <param name="userCallback">The method to be called when the asynchronous read operation is completed. </param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous read request from other requests. </param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or numBytes is negative. </exception>
            <exception cref="T:System.ArgumentException">The array length minus offset is less than numBytes. </exception>
            <exception cref="T:System.IO.VirtualIOException">An asynchronous read was attempted past the end of the file. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Begins an asynchronous write.</summary>
            <returns>An <see cref="T:System.IAsyncResult"></see> that references the asynchronous write.</returns>
            <param name="offset">The zero-based byte offset in array at which to begin copying bytes to the current stream.</param>
            <param name="array">The buffer containing data to write to the current stream.</param>
            <param name="numBytes">The maximum number of bytes to write. </param>
            <param name="userCallback">The method to be called when the asynchronous write operation is completed. </param>
            <param name="stateObject">A user-provided object that distinguishes this particular asynchronous write request from other requests. </param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed. </exception>
            <exception cref="T:System.ArgumentException">array length minus offset is less than numBytes. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or numBytes is negative. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.SetDirty">
            <summary>
            Sets the dirty.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Dispose(System.Boolean)">
            <summary>Releases the unmanaged resources used by the <see cref="T:System.IO.VirtualFileStream"></see> and optionally releases the managed resources.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.EndRead(System.IAsyncResult)">
            <summary>Waits for the pending asynchronous read to complete.</summary>
            <returns>The number of bytes read from the stream, between 0 and the number of bytes you requested. Streams only return 0 at the end of the stream, otherwise, they should block until at least 1 byte is available.</returns>
            <param name="asyncResult">The reference to the pending asynchronous request to wait for. </param>
            <exception cref="T:System.ArgumentNullException">asyncResult is null. </exception>
            <exception cref="T:System.InvalidOperationException"><see cref="M:System.IO.VirtualFileStream.EndRead(System.IAsyncResult)"></see> is called multiple times. </exception>
            <exception cref="T:System.ArgumentException">This <see cref="T:System.IAsyncResult"></see> object was not created by calling <see cref="M:System.IO.VirtualFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"></see> on this class. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.EndWrite(System.IAsyncResult)">
            <summary>Ends an asynchronous write, blocking until the I/O operation has completed.</summary>
            <param name="asyncResult">The pending asynchronous I/O request. </param>
            <exception cref="T:System.ArgumentNullException">asyncResult is null. </exception>
            <exception cref="T:System.ArgumentException">This <see cref="T:System.IAsyncResult"></see> object was not created by calling <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"></see> on this class. </exception>
            <exception cref="T:System.InvalidOperationException"><see cref="M:System.IO.VirtualFileStream.EndWrite(System.IAsyncResult)"></see> is called multiple times. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Flush">
            <summary>Clears all buffers for this stream and causes any buffered data to be written to the underlying device.</summary>
            <exception cref="T:System.ObjectDisposedException">The stream is closed. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.GetAccessControl">
            <summary>Gets a <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that encapsulates the access control list (ACL) entries for the file described by the current <see cref="T:System.IO.VirtualFileStream"></see> object.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that encapsulates the access control settings for the file described by the current <see cref="T:System.IO.VirtualFileStream"></see> object.</returns>
            <exception cref="T:System.SystemException">The file could not be found.</exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This operation is not supported on the current platform.-or- The caller does not have the required permission.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Lock(System.Int64,System.Int64)">
            <summary>Prevents other processes from changing the <see cref="T:System.IO.VirtualFileStream"></see> while permitting read access.</summary>
            <param name="position">The beginning of the range to lock. The value of this parameter must be equal to or greater than zero (0). </param>
            <param name="length">The range to be locked. </param>
            <exception cref="T:System.ObjectDisposedException">The file is closed. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">position or length is negative. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Reads a block of bytes from the stream and writes the data in a given buffer.</summary>
            <returns>The total number of bytes read into the buffer. This might be less than the number of bytes requested if that number of bytes are not currently available, or zero if the end of the stream is reached.</returns>
            <param name="offset">The byte offset in array at which to begin reading. </param>
            <param name="array">When this method returns, contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source. </param>
            <param name="count">The maximum number of bytes to read. </param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs. </exception>
            <exception cref="T:System.ArgumentException">offset and count describe an invalid range in array. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.ReadByte">
            <summary>Reads a byte from the file and advances the read position one byte.</summary>
            <returns>The byte cast to an int, or -1 if reading from the end of the stream.</returns>
            <exception cref="T:System.ObjectDisposedException">The current stream is closed. </exception>
            <exception cref="T:System.NotSupportedException">The current stream does not support reading. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the current position of this stream to the given value.</summary>
            <returns>The new position in the stream.</returns>
            <param name="offset">The point relative to origin from which to begin seeking. </param>
            <param name="origin">Specifies the beginning, the end, or the current position as a reference point for origin, using a value of type <see cref="T:System.IO.SeekOrigin"></see>. </param>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the VirtualFileStream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.ArgumentException">Attempted seeking before the beginning of the stream. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
            <summary>Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.FileSecurity"></see> object to the file described by the current <see cref="T:System.IO.VirtualFileStream"></see> object.</summary>
            <param name="fileSecurity">A <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that describes an ACL entry to apply to the current file.</param>
            <exception cref="T:System.SystemException">The file could not be found or modified.</exception>
            <exception cref="T:System.ArgumentNullException">The fileSecurity parameter is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current process does not have access to open the file.</exception>
            <exception cref="T:System.ObjectDisposedException">The file is closed.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.SetLength(System.Int64)">
            <summary>Sets the length of this stream to the given value.</summary>
            <param name="value">The new length of the stream. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">Attempted to set the value parameter to less than 0. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error has occurred. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Unlock(System.Int64,System.Int64)">
            <summary>Allows access by other processes to all or part of a file that was previously locked.</summary>
            <param name="position">The beginning of the range to unlock. </param>
            <param name="length">The range to be unlocked. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">position or length is negative. </exception>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Writes a block of bytes to this stream using data from a buffer.</summary>
            <param name="offset">The zero-based byte offset in array at which to begin copying bytes to the current stream. </param>
            <param name="array">The buffer containing data to write to the stream.</param>
            <param name="count">The maximum number of bytes to be written to the current stream. </param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ObjectDisposedException">The stream is closed. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs. </exception>
            <exception cref="T:System.ArgumentException">offset and count describe an invalid range in array. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception>
            <exception cref="T:System.NotSupportedException">The current stream instance does not support writing. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.WriteByte(System.Byte)">
            <summary>Writes a byte to the current position in the file stream.</summary>
            <param name="value">A byte to write to the stream. </param>
            <exception cref="T:System.ObjectDisposedException">The stream is closed. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Close">
            <summary>
            Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.CanRead">
            <summary>Gets a value indicating whether the current stream supports reading.</summary>
            <returns>true if the stream supports reading; false if the stream is closed or was opened with write-only access.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.CanSeek">
            <summary>Gets a value indicating whether the current stream supports seeking.</summary>
            <returns>true if the stream supports seeking; false if the stream is closed or if the VirtualFileStream was constructed from an operating-system handle such as a pipe or output to the console.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.CanWrite">
            <summary>Gets a value indicating whether the current stream supports writing.</summary>
            <returns>true if the stream supports writing; false if the stream is closed or was opened with read-only access.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.IsAsync">
            <summary>Gets a value indicating whether the VirtualFileStream was opened asynchronously or synchronously.</summary>
            <returns>true if the VirtualFileStream was opened asynchronously; otherwise, false.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Length">
            <summary>Gets the length in bytes of the stream.</summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
            <exception cref="T:System.NotSupportedException"><see cref="P:System.IO.VirtualFileStream.CanSeek"></see> for this stream is false. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs, such as the file being closed. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Name">
            <summary>Gets the name of the VirtualFileStream that was passed to the constructor.</summary>
            <returns>A string that is the name of the VirtualFileStream.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Position">
            <summary>Gets or sets the current position of this stream.</summary>
            <returns>The current position of this stream.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Attempted to set the position to a negative value. </exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurs. - or -The position was set to a very large value beyond the end of the stream in Windows 98 or earlier.</exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
            <exception cref="T:System.IO.VirtualEndOfStreamException">Attempted seeking past the end of a stream that does not support this. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.NodeStream">
            <summary>
            Gets the node stream.
            </summary>
            <value>The node stream.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileStream.Reference">
            <summary>
            Gets the reference.
            </summary>
            <value>The reference.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo">
            <summary>Exposes instance methods for creating, moving, and enumerating through directories and subdirectories. This class cannot be inherited.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualDirectoryInfo"></see> class on the specified path.</summary>
            <param name="path">A string specifying the path on which to create the VirtualDirectoryInfo. </param>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. The specified path, file name, or both are too long.</exception>
            <exception cref="T:System.ArgumentException">path contains invalid characters such as ", &lt;, &gt;, or |. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.#ctor(Gizmox.WebGUI.Virtualization.VirtualNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo"/> class.
            </summary>
            <param name="objVirtualNode">The virtual node.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.Create">
            <summary>Creates a directory.</summary>
            <exception cref="T:System.IO.VirtualIOException">The directory cannot be created. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.Create(System.Security.AccessControl.DirectorySecurity)">
            <summary>Creates a directory using a <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object.</summary>
            <param name="directorySecurity">The access control to apply to the directory.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.NotSupportedException">Creating a directory with only the colon (:) character was attempted. </exception>
            <exception cref="T:System.IO.VirtualIOException">The directory specified by path is read-only or is not empty. </exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars"></see>. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.CreateSubdirectory(System.String)">
            <summary>Creates a subdirectory or subdirectories on the specified path. The specified path can be relative to this instance of the <see cref="T:System.IO.VirtualDirectoryInfo"></see> class.</summary>
            <returns>The last directory specified in path.</returns>
            <param name="path">The specified path. This cannot be a different disk volume or Universal Naming Convention (UNC) name. </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentException">path does not specify a valid file path or contains invalid VirtualDirectoryInfo characters. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. The specified path, file name, or both are too long.</exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.IO.VirtualIOException">The subdirectory cannot be created.-or- A file or directory already has the name specified by path. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have code access permission to create the directory.-or-The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.VirtualDirectoryInfo"></see> object.  This can occur when the path parameter describes an existing directory.</exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.CreateSubdirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
            <summary>Creates a subdirectory or subdirectories on the specified path with the specified security. The specified path can be relative to this instance of the <see cref="T:System.IO.VirtualDirectoryInfo"></see> class.</summary>
            <returns>The last directory specified in path.</returns>
            <param name="directorySecurity">The security to apply.</param>
            <param name="path">The specified path. This cannot be a different disk volume or Universal Naming Convention (UNC) name.</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentException">path does not specify a valid file path or contains invalid VirtualDirectoryInfo characters. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. The specified path, file name, or both are too long.</exception>
            <exception cref="T:System.ArgumentNullException">path is null. </exception>
            <exception cref="T:System.IO.VirtualIOException">The subdirectory cannot be created.-or- A file or directory already has the name specified by path. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have code access permission to create the directory.-or-The caller does not have code access permission to read the directory described by the returned <see cref="T:System.IO.VirtualDirectoryInfo"></see> object.  This can occur when the path parameter describes an existing directory.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.Delete">
            <summary>Deletes this <see cref="T:System.IO.VirtualDirectoryInfo"></see> if it is empty.</summary>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">The directory is not empty. -or-The directory is the application's current working directory.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.Delete(System.Boolean)">
            <summary>Deletes this instance of a <see cref="T:System.IO.VirtualDirectoryInfo"></see>, specifying whether to delete subdirectories and files.</summary>
            <param name="recursive">true to delete this directory, its subdirectories, and all files; otherwise, false. </param>
            <exception cref="T:System.IO.VirtualIOException">The directory is read-only.-or- The directory contains one or more files or subdirectories and recursive is false.-or-The directory is the application's current working directory. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetAccessControl">
            <summary>Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that encapsulates the access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.VirtualDirectoryInfo"></see> object.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that encapsulates the access control rules for the directory.</returns>
            <exception cref="T:System.SystemException">The directory could not be found or modified.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows 2000 or later.</exception>
            <exception cref="T:System.IO.VirtualIOException">An I/O error occurred while opening the directory.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The directory is read-only.-or- This operation is not supported on the current platform.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current process does not have access to open the directory.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
            <summary>Gets a <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that encapsulates the specified type of access control list (ACL) entries for the directory described by the current <see cref="T:System.IO.VirtualDirectoryInfo"></see> object.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that encapsulates the access control rules for the file described by the path parameter.ExceptionsException typeCondition<see cref="T:System.SystemException"></see>The directory could not be found or modified.<see cref="T:System.UnauthorizedAccessException"></see>The current process does not have access to open the directory.<see cref="T:System.IO.VirtualIOException"></see>An I/O error occurred while opening the directory.<see cref="T:System.PlatformNotSupportedException"></see>The current operating system is not Microsoft Windows 2000 or later.<see cref="T:System.UnauthorizedAccessException"></see>The directory is read-only.-or- This operation is not supported on the current platform.-or- The caller does not have the required permission.</returns>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections"></see> values that specifies the type of access control list (ACL) information to receive.</param>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetDirectories">
            <summary>Returns the subdirectories of the current directory.</summary>
            <returns>An array of <see cref="T:System.IO.VirtualDirectoryInfo"></see> objects.</returns>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path encapsulated in the VirtualDirectoryInfo object is invalid, such as being on an unmapped drive. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetDirectories(System.String)">
            <summary>Returns an array of directories in the current <see cref="T:System.IO.VirtualDirectoryInfo"></see> matching the given search criteria.</summary>
            <returns>An array of type VirtualDirectoryInfo matching searchPattern.</returns>
            <param name="searchPattern">The search string, such as "System*", used to search for all directories beginning with the word "System". </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path encapsulated in the VirtualDirectoryInfo object is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">searchPattern is null. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetDirectories(System.String,System.IO.SearchOption)">
            <summary>Returns an array of directories in the current <see cref="T:System.IO.VirtualDirectoryInfo"></see> matching the given search criteria and using a value to determine whether to search subdirectories.</summary>
            <returns>An array of type VirtualDirectoryInfo matching searchPattern.</returns>
            <param name="searchOption">One of the values of the <see cref="T:System.IO.SearchOption"></see> enumeration that specifies whether the search operation should include only the current directory or should include all subdirectories.</param>
            <param name="searchPattern">The search string, such as "System*", used to search for all directories beginning with the word "System".</param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path encapsulated in the VirtualDirectoryInfo object is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">searchPattern is null. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetFiles">
            <summary>Returns a file list from the current directory.</summary>
            <returns>An array of type <see cref="T:System.IO.VirtualFileInfo"></see>.</returns>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path is invalid, such as being on an unmapped drive. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetFiles(System.String)">
            <summary>Returns a file list from the current directory matching the given searchPattern.</summary>
            <returns>An array of type <see cref="T:System.IO.VirtualFileInfo"></see>.</returns>
            <param name="searchPattern">The search string, such as "*.txt". </param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">searchPattern is null. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path is invalid, such as being on an unmapped drive. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetFiles(System.String,System.IO.SearchOption)">
            <summary>Returns a file list from the current directory matching the given searchPattern and using a value to determine whether to search subdirectories.</summary>
            <returns>An array of type <see cref="T:System.IO.VirtualFileInfo"></see>.</returns>
            <param name="searchOption">One of the values of the <see cref="T:System.IO.SearchOption"></see> enumeration that specifies whether the search operation should include only the current directory or should include all subdirectories.</param>
            <param name="searchPattern">The search string, such as "System*", used to search for all directories beginning with the word "System".</param>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">searchPattern is null. </exception>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path is invalid, such as being on an unmapped drive. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetFileSystemInfos">
            <summary>Returns an array of strongly typed <see cref="T:System.IO.VirtualFileSystemInfo"></see> entries representing all the files and subdirectories in a directory.</summary>
            <returns>An array of strongly typed <see cref="T:System.IO.VirtualFileSystemInfo"></see> entries.</returns>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The path is invalid, such as being on an unmapped drive. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetFileSystemInfos(System.String)">
            <summary>Retrieves an array of strongly typed <see cref="T:System.IO.VirtualFileSystemInfo"></see> objects representing the files and subdirectories matching the specified search criteria.</summary>
            <returns>An array of strongly typed VirtualFileSystemInfo objects matching the search criteria.</returns>
            <param name="searchPattern">The search string, such as "System*", used to search for all directories beginning with the word "System". </param>
            <exception cref="T:System.IO.VirtualDirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">searchPattern is null. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.MoveTo(System.String)">
            <summary>Moves a <see cref="T:System.IO.VirtualDirectoryInfo"></see> instance and its contents to a new path.</summary>
            <param name="destDirName">The name and path to which to move this directory. The destination cannot be another disk volume or a directory with the identical name. It can be an existing directory to which you want to add this directory as a subdirectory. </param>
            <exception cref="T:System.ArgumentNullException">destDirName is null.-or- The directory being moved and the destination directory have the same name. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.VirtualIOException">An attempt was made to move a directory to a different volume, or destDirName already exists. </exception>
            <exception cref="T:System.ArgumentException">destDirName is an empty string (''"). </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.SetAccessControl(System.Security.AccessControl.DirectorySecurity)">
            <summary>Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object to the directory described by the current <see cref="T:System.IO.VirtualDirectoryInfo"></see> object.</summary>
            <param name="directorySecurity">A <see cref="T:System.Security.AccessControl.DirectorySecurity"></see> object that describes an ACL entry to apply to the directory described by the path parameter.</param>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows 2000 or later.</exception>
            <exception cref="T:System.SystemException">The file could not be found or modified.</exception>
            <exception cref="T:System.ArgumentNullException">The directorySecurity parameter is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current process does not have access to open the file.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.ToString">
            <summary>Returns the original path that was passed by the user.</summary>
            <returns>Returns the original path that was passed by the user.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.GetReference(System.String)">
            <summary>
            Gets the reference.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.Exists">
            <summary>Gets a value indicating whether the directory exists.</summary>
            <returns>true if the directory exists; otherwise, false.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.Name">
            <summary>Gets the name of this <see cref="T:System.IO.VirtualDirectoryInfo"></see> instance.</summary>
            <returns>The directory name.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.Parent">
            <summary>Gets the parent directory of a specified subdirectory.</summary>
            <returns>The parent directory, or null if the path is null or if the file path denotes a root (such as "\", "C:", or * "\\server\share").</returns>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.Root">
            <summary>Gets the root portion of a path.</summary>
            <returns>A <see cref="T:System.IO.VirtualDirectoryInfo"></see> object representing the root of a path.</returns>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo.NodeTypeId">
            <summary>
            Gets the node type id.
            </summary>
            <value>The node type id.</value>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.JSTokenContext.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.JSTokenContext"/> class.
            </summary>
            <param name="objParentContext">The parent context.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinVisibilityState">
            <summary>
            Definies the design time visibility of a skin or a skin resource
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinVisibilityState.Never">
            <summary>
            The skin or skin resoures is never browsable from within an editor.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinVisibilityState.Always">
            <summary>        
            The skin or skin resoures is always browsable from within an editor.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinVisibilityState.Advanced">
            <summary>
            The skin or skin resoures is browsable only by advanced users. 
            An editor can either show or hide such resorues.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinVisibilityAttribute">
            <summary>
            Provides skin designer visibility definition for a skin or a skin property
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinVisibilityAttribute.menmSkinVisibilityState">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinVisibilityAttribute.#ctor(Gizmox.WebGUI.Forms.Skins.SkinVisibilityState)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinVisibilityAttribute"/> class.
            </summary>
            <param name="enmSkinVisibilityState">The skin or skin resoruce visibility.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinVisibilityAttribute.Visibility">
            <summary>
            Gets the skin or skin resoruce visibility.
            </summary>
            <value>The skin or skin resoruce visibility.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateResource">
            <summary>
            Represents a Silverlight template
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateResource"/> class.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateResource.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateResource.CompilerCollectorType">
            <summary>
            Gets the type of the compiler collector.
            </summary>
            <value>The type of the compiler collector.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateResource.CompilerContentType">
            <summary>
            Gets the type of the content compiler.
            </summary>
            <value>The type of the content compiler.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateResource.NewFileExtension">
            <summary>
            Gets the new file extension.
            </summary>
            <value>The new file extension.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.ResourceHandleConverter">
            <summary>
            <para>Provides a type converter to convert <see cref="T:Gizmox.WebGUI.ResourceHandle" />
            objects to and from various other representations.</para>
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandleConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.ResourceHandleConverter"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="destinationType"/> parameter is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.FileHandle">
            <summary>
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Resources.FileHandle.InternalStream">
            <summary>
            Holds the file stream. InternalStream can be null. to get
            the Stream, use <see cref="P:Gizmox.WebGUI.Common.Resources.FileHandle.InputStream"/> property
            </summary>        
        </member>
        <member name="F:Gizmox.WebGUI.Common.Resources.FileHandle.mblnIsDisposed">
            <summary>
            Indicates whether Dispose method was invoked
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.FileHandle.SaveAs(System.String)">
            <summary>
            Saves the contents of the file.
            </summary>
            <remarks>
            if a file with that name already exists it will be overwrite.
            </remarks>
            <param name="filename">
            The name of the saved file.
            </param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.FileHandle.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.FileHandle.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.FileHandle.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Gizmox.WebGUI.Common.Resources.FileHandle"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.FileHandle.Dispose(System.Boolean)">
            <summary>
            Releases all resources used by the <see cref="T:Gizmox.WebGUI.Common.Resources.FileHandle"/>
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.FileHandle.ContentLength">
            <summary>
            Gets the size of an uploaded file, in bytes.
            </summary>
            <returns>
            The file length, in bytes.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.FileHandle.ContentType">
            <summary>
            Gets the MIME content type of a file sent by a client.
            </summary>
            <returns>
            The MIME content type of the uploaded file.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.FileHandle.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.FileHandle.InputStream">
            <summary>
            Gets the input stream.
            </summary>
            <value>The input stream.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.PhysicalFileHandle">
            <summary>
            Physical File Handle points to a file
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Resources.PhysicalFileHandle.mstrFileName">
            <summary>
            The file name that this phisical file handle it pointing to
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.PhysicalFileHandle.Create(System.String)">
            <summary>
            Create new FileHandle that wraps filename string.
            </summary>
            <param name="filename"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.PhysicalFileHandle.InternalFileName">
            <summary>
            Sets the name of the internal file.
            </summary>
            <value>The name of the internal file.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.PhysicalFileHandle.ContentLength">
            <summary>
            Gets the size of an uploaded file, in bytes.
            </summary>
            <value></value>
            <returns>
            The file length, in bytes.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.PhysicalFileHandle.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.PhysicalFileHandle.InputStream">
            <summary>
            Gets the input stream.
            </summary>
            <value>The input stream.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.FileStreamHandle">
            <summary>
            FileStreamHandle wrap <see cref="T:System.Web.HttpPostedFile"/> object.
            for more details see <see cref="T:Gizmox.WebGUI.Common.Resources.FileHandle"/> documentation
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.FileStreamHandle.Create(System.IO.FileStream)">
            <summary>
            Create new FileHandle that wraps FileStream object.
            In this case all calls made to properties and methods are being
            being delegeted to the FileStream object.
            </summary>
            <param name="fileStream"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.FileStreamHandle.ContentLength">
            <summary>
            Gets the size of an uploaded file, in bytes.
            </summary>
            <value></value>
            <returns>
            The file length, in bytes.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.FileStreamHandle.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.FileStreamHandle.InputStream">
            <summary>
            Gets the input stream.
            </summary>
            <value>The input stream.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.HttpPostedFileHandle">
            <summary>
            HttpPostedFileHandle wrap <see cref="T:System.Web.HttpPostedFile"/> object.
            for more details see <see cref="T:Gizmox.WebGUI.Common.Resources.FileHandle"/> documentation
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Resources.HttpPostedFileHandle.mintContentLength">
            <summary>
            Holds the content length
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Resources.HttpPostedFileHandle.mstrFileName">
            <summary>
            Holds the file name
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Resources.HttpPostedFileHandle.mstrContentType">
            <summary>
            Holds the content type
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.HttpPostedFileHandle.Create(System.Web.HttpPostedFile)">
            <summary>
            Flushs the posted file to disk and create new HttpPostedFileHandle with the file metadata.
            </summary>
            <param name="postedFile"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.HttpPostedFileHandle.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.HttpPostedFileHandle.ContentLength">
            <summary>
            Gets the size of an uploaded file, in bytes.
            </summary>
            <value></value>
            <returns>
            The file length, in bytes.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.HttpPostedFileHandle.FileName">
            <summary>
            Gets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.HttpPostedFileHandle.PostedFileName">
            <summary>
            Gets the name of the posted file.
            </summary>
            <value>The name of the posted file.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.HttpPostedFileHandle.InputStream">
            <summary>
            Gets the input stream.
            </summary>
            <value>The input stream.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IApplicationContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.SetUnhandledExceptionMode(Gizmox.WebGUI.Forms.UnhandledExceptionMode,System.Boolean)">
            <summary>
            Sets the unhandled exception mode.
            </summary>
            <param name="enmMode">The enm mode.</param>
            <param name="blnThreadScope">if set to <c>true</c> [BLN thread scope].</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.SetThreadBookmark(System.Object,System.String)">
            <summary>
            Adds the history bookmark.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.SendThreadMessage(Gizmox.WebGUI.Forms.ThreadMessage)">
            <summary>
            Sends a thread message.
            </summary>
            <param name="objThreadMessage">The thread message.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.OnThreadException(System.Exception)">
            <summary>
            Called when an unhandeled thread exception was thrown.
            </summary>
            <param name="objThreadException">The thread exception.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.HandleThreadException(System.Exception)">
            <summary>
            Handles the thread exception.
            </summary>
            <param name="objThreadException">The thread exception.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.SetFocused(Gizmox.WebGUI.Common.Interfaces.IControl)">
            <summary>
            Sets the focused control.
            </summary>
            <param name="objControl">The control.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.GetFocused">
            <summary>
            Gets the focused.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.IsFocused(Gizmox.WebGUI.Common.Interfaces.IControl)">
            <summary>
            Determines whether the specified obj control is focused.
            </summary>
            <param name="objControl">The obj control.</param>
            <returns>
            	<c>true</c> if the specified obj control is focused; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.ThreadException">
            <summary>
            Occurs when an untrapped thread exception is thrown.
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.ApplicationExit">
            <summary>
            Occurs when the application is about to shut down.
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.EnterThreadModal">
            <summary>
            Occurs when the application is about to enter a modal state. 
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.Idle">
            <summary>
            Occurs when the application finishes processing and is about to enter the idle state.
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.LeaveThreadModal">
            <summary>
            Occurs when the application is about to leave a modal state. 
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.ThreadExit">
            <summary>
            Occurs when a thread is about to shut down. When the main thread for 
            an application is about to be shut down, this event is raised first, 
            followed by an <see cref="E:Gizmox.WebGUI.Forms.Application.ApplicationExit"></see> event.
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.ThreadSuspend">
            <summary>
            Provides notification when client view is refreshed / exited / closed
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.ThreadTick">
            <summary>
            Occurs when a on every thread event queue handling.
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.ThreadRefresh">
            <summary>
            Provides notification when client view is refreshed
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.ThreadBookmarkNavigate">
            <summary>
            Provides notification when user navigated to a thread bookmark
            </summary>
        </member>
        <member name="E:Gizmox.WebGUI.Common.Interfaces.IApplicationContext.ThreadMessage">
            <summary>
            Provides notification when a thread message is available
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Gateways.GatewayReference">
            <summary>
            Returns a reference to a gateway control
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayReference.#ctor(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,Gizmox.WebGUI.Common.Gateways.GatewayHandler,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Gateways.GatewayReference"/> class.
            </summary>
            <param name="objComponent">The gateway component.</param>
            <param name="objHandler">The gateway handler.</param>
            <param name="strAction">The gateway action.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayReference.#ctor(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Gateways.GatewayReference"/> class.
            </summary>
            <param name="objComponent">The gateway component.</param>
            <param name="strAction">The gateway action.</param>
            <param name="blnCachable">The gateway url will not have unique url for every use.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayReference.#ctor(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Gateways.GatewayReference"/> class.
            </summary>
            <param name="objComponent">The gateway component.</param>
            <param name="strAction">The gateway action.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayReference.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Common.Gateways.GatewayReference"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GatewayReference.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayReference.Action">
            <summary>
            Gets the gateway action.
            </summary>
            <value>The gateway action.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayReference.Component">
            <summary>
            Gets the gateway component.
            </summary>
            <value>The gateway component.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayReference.Chachable">
            <summary>
            Gets a value indicating whether this <see cref="T:Gizmox.WebGUI.Common.Gateways.GatewayReference"/> is chachable.
            </summary>
            <value><c>true</c> if chachable; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayReference.Handler">
            <summary>
            Gets the gateway handler if specified.
            </summary>
            <value>The gateway handler if specified.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GatewayReference.ReferencePrefix">
            <summary>
            Gets the reference prefix.
            </summary>
            <value>The reference prefix.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Gateways.GZipGatewayReference">
            <summary>
            Returns a reference to a gateway control that will served using GZip
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GZipGatewayReference.#ctor(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,Gizmox.WebGUI.Common.Gateways.GatewayHandler,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Gateways.GZipGatewayReference"/> class.
            </summary>
            <param name="objComponent">The gateway component.</param>
            <param name="objHandler">The gateway handler.</param>
            <param name="strAction">The gateway action.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.GZipGatewayReference.#ctor(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Gateways.GZipGatewayReference"/> class.
            </summary>
            <param name="objComponent">The gateway component.</param>
            <param name="strAction">The gateway action.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.GZipGatewayReference.ReferencePrefix">
            <summary>
            Gets the reference prefix.
            </summary>
            <value>The reference prefix.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.SRCategoryAttribute">
            <summary>
            Summary description for SRCategoryAttribute.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.MetadataTagAttribute">
            <summary>
            Indicates the tag name to be used when generating the control metadata
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.MetadataTagAttribute.mstrTagName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.MetadataTagAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.MetadataTagAttribute"/> class.
            </summary>
            <param name="strTagName">The metadata tag name to use.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.MetadataTagAttribute.TagName">
            <summary>
            Gets the name of the tag.
            </summary>
            <value>The name of the tag.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Extensibility.ClientControllerAttribute">
            <summary>
            Provides reference to the client runtime time controller
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.ClientControllerAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Extensibility.ClientControllerAttribute"/> class.
            </summary>
            <param name="strTypeName">Name of the STR type.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Extensibility.ClientControllerAttribute.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xslt.XsltToken.mobjXsltTokenReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xslt.XsltToken.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Xslt.XsltToken"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Xslt.XsltToken.SubTokens">
            <summary>
            Gets the sub tokens.
            </summary>
            <value>The sub tokens.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xml.XmlContentToken.mobjTokenReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlContentToken.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Xml.XmlContentToken"/> class.
            </summary>
            <param name="strType">Type of the STR.</param>
            <param name="strContent">Content of the STR.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Xml.XmlContentToken.SubTokens">
            <summary>
            Gets the sub tokens.
            </summary>
            <value>The sub tokens.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinException"/> class.
            </summary>
            <param name="strMessage">The exception message.</param>
            <param name="objInnerException">The inner exception.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinResolvingException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinResolvingException.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinResolvingException"/> class.
            </summary>
            <param name="objInstance">The instance for which the skin was beening resloved.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinResolvingException.#ctor(System.Object,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinResolvingException"/> class.
            </summary>
            <param name="objInstance">The instance for which the skin was beening resloved.</param>
            <param name="objInnerException">The obj inner exception.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinResolvingException.GetExceptionMessage(System.Object)">
            <summary>
            Sets the exception message.
            </summary>
            <param name="objInstance">The instace for which the skin was beening resloved.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.HtmlContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.HtmlContent.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.HtmlContent"/> class.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.ResourceManager">
            <summary>
            Impementation for ResourceManager class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceManager.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.ResourceManager"/> class.
            </summary>
            <param name="objType">Type of the obj.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.ResourceManager"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceManager.GetObject(System.String)">
            <summary>
            Gets the object.
            </summary>
            <param name="strFile">The STR file.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)">
            <summary>
            Gets the object.
            </summary>
            <param name="strFile">The STR file.</param>
            <param name="objCulture">The obj culture.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceManager.GetIcon(System.String)">
            <summary>
            Gets the icon.
            </summary>
            <param name="strFile">The STR file.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceManager.GetImage(System.String)">
            <summary>
            Gets the image.
            </summary>
            <param name="strFile">The STR file.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceManager.GetAssemblyResource(System.String)">
            <summary>
            Gets the assembly resource.
            </summary>
            <param name="strFile">The STR file.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.ResourceHandle">
            <summary><para>An base abstract class for resource handles to various storages</para></summary>
            <remarks>
            	<para>What Are Resources?<br/>
                Visual WebGui has a slightly different concept handling resources then
                WinForms.<br/>
                WinForms holds live bitmaps with in an Image object which can be loaded through the
                resource manager.<br/>
                Visual WebGui applies a concept of resource handles. Resource handles are actually
                pointers to the actual resource.<br/>
                When a control requires a resource such as an Image it should declare a
                ResourceHandle typed property.<br/>
                The developer can apply to this property any resource handle that inherits from
                ResourceHandle.<br/>
                Visual WebGui is delivered with a few built in resource handlers such as
                IconResourceHandle which points to a resource with in the icons resource folder or
                the UrlResourceHandle that allows the developer to link to an external located
                resource that will be retrieved through HTTP.</para>
            	<para><br/><br/>
                Working with resource handles in design time<br/>
                Currently the is no visual editor for a recourse handle property but there is a
                type converter that allows you to insert formatted strings that are converted to
                resource handlers instances.<br/>
                For example if you enter "Icons.MyImage.gif" string you get an IconResourceHandle
                object initialized with "MyImage.gif".</para>
            </remarks>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandle.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandle.Equals(System.Object)">
            <summary>
            Equalses the specified obj object.
            </summary>
            <param name="objObject">The obj object.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandle.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandle.ToStream">
            <summary>
            Gets the resource stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandle.ToImage">
            <summary>
            Gets an image from the resource stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandle.ToIcon">
            <summary>
            Gets an icon from the resource stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandle.op_Implicit(System.String)~Gizmox.WebGUI.Common.Resources.ResourceHandle">
            <summary>
            Handle implicit converting from string to resource handle
            </summary>
            <param name="strResource"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ResourceHandle.op_Implicit(System.Drawing.Image)~Gizmox.WebGUI.Common.Resources.ResourceHandle">
            <summary>
            Handle implicit converting from image to resource handle
            </summary>
            <param name="objImage"></param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.ResourceHandle.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>The file.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.ResourceHandle.Config">
            <summary>
            Gets the config.
            </summary>
            <value>The config.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.TypeResourceHandle">
            <summary>
            The TypeResourceHandle allows generating resources from embedded type resources.
            The TypeResourceHandle receives a type reference and the code of the embedded
            resource.
            </summary>
            <example>
            	<code lang="CS">
            		<![CDATA[
            Gizmox.WebGUI.Common.Resources.TypeResourceHandle typeResourceHandle1 = new Gizmox.WebGUI.Common.Resources.TypeResourceHandle(this.GetType(),"BackgroundImage");            
            this.objPictureBox.Image = typeResourceHandle1;]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            Dim typeResourceHandle1 As New Gizmox.WebGUI.Common.Resources.TypeResourceHandle(Me.GetType(), "BackgroundImage")
            Me.objPictureBox.Image = typeResourceHandle1]]>
            	</code>
            </example>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.TypeResourceHandle.#ctor(System.Type,System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.TypeResourceHandle"/> class.
            </summary>
            <param name="objType">Type of the obj.</param>
            <param name="strFile">The STR file.</param>
            <param name="objCulture">The obj culture.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.TypeResourceHandle.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.TypeResourceHandle"/> class.
            </summary>
            <param name="objType">Type of the obj.</param>
            <param name="strFile">The STR file.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.TypeResourceHandle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.TypeResourceHandle"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.TypeResourceHandle.ToStream">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.TypeResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.TypeResourceHandle.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.TypeResourceHandle.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle">
            <summary>
            The AssemblyResoruceHandle allows generating resources from embedded assembly
            resources. The AssemblyResourceHandle receives an assembly reference and a full path
            file including namespace and directories in a dot separated format.
            </summary>
            <example>
            	<code lang="CS">
            		<![CDATA[
            Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle assemblyResourceHandle1 = new Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle(this.GetType().Assembly, "Gizmox.WebGUI.Forms.FolderName.PictureName.gif");
            this.objPictureBox.Image = assemblyResourceHandle1;]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            Dim assemblyResourceHandle1 As New Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle(Me.GetType().Assembly, "Gizmox.WebGUI.Forms.FolderName.PictureName.gif")
            Me.objPictureBox.Image = assemblyResourceHandle1]]>
            	</code>
            </example>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle"/> class.
            </summary>
            <param name="objType">Type of the obj.</param>
            <param name="strFile">The STR file.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle.#ctor(System.Reflection.Assembly,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle"/> class.
            </summary>
            <param name="objAssembly">The obj assembly.</param>
            <param name="strFile">The STR file.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle.ToStream">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.AssemblyResourceHandle.Assembly">
            <summary>
            Gets or sets the assembly.
            </summary>
            <value>The assembly.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.IconResourceHandle">
            <summary>
            	<para>The IconResourceHandle is a resource handle that points to the "Icons"
                directory configured in the web.config. The Visual WebGui configuration section
                contains a "Directories" section which maps named directories to directory code
                names and the icons directory is one of them. The value of the defined directory
                can either be relative to the root project / assembly bin in client mode or
                absolute path. The absolute path enables sharing icons between projects. By default
                this directory is configured to "Resources/Icons".</para>
            	<para>Initializing the IconResoureHandle requires a file name in the constructor
                that is in embedded assembly resource format which means directories are separated
                with dots. Meaning "dira/dirb/file.gif" will be "dira.dirb.file.gif".</para>
            	<para>You can create an IconResourceHandle in design time using the
                "Icons.DirA.DirB.FileName.gif" format, which is actually the format passed to the
                constructor with the addition of the "Icons." Prefix.</para>
            </summary>
            <example>
                This example creates a new IconResourceHandle and sets it to the image property in
                the picture box.<br/>
                This example assumes that this icon is located in the Resources folder of the
                project under the Icons folder .
                <code lang="CS">
            		<![CDATA[
            Gizmox.WebGUI.Common.Resources.IconResourceHandle iconResourceHandle1 = new Gizmox.WebGUI.Common.Resources.IconResourceHandle();
            iconResourceHandle1.File = "Add.png";
            this.objPictureBox.Image = iconResourceHandle1;]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            Dim iconResourceHandle1 As New Gizmox.WebGUI.Common.Resources.IconResourceHandle()
            iconResourceHandle1.File = "Add.png"
            Me.objPictureBox.Image = iconResourceHandle1]]>
            	</code>
            </example>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.IconResourceHandle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.IconResourceHandle"/> class.
            </summary>
            <param name="strFile">The STR file.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.IconResourceHandle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.IconResourceHandle"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.IconResourceHandle.ToStream">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.IconResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.UrlResourceHandle">
            <summary>
            Creates a new url resource handle
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.UrlResourceHandle.#ctor">
            <summary>
            Creates a new url resource handle
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.UrlResourceHandle.#ctor(System.String)">
            <summary>
            Creates a new url resource handle
            </summary>
            <param name="strUrl">A url prefixed with http or ftp. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.UrlResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.UrlResourceHandle.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>The file.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.UrlResourceHandle.Url">
            <summary>
            Sets or gets the resource URL.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.ImageResourceHandle">
            <summary>
            	<para>The ImageResourceHandle is a resource handle that points to the "Images"
                directory configured in the web.config. The Visual WebGui configuration section
                contains a "Directories" section which maps named directories to directory code
                names and the images directory is one of them. The value of the defined directory
                can either be relative to the root project / assembly bin in client mode or
                absolute path. The absolute path enables sharing images between projects. By
                default this directory is configured to "Resources/Images".</para>
            	<para>Initializing the ImageResourceHandle requires a file name in the constructor
                that is in embedded assembly resource format which means directories are separated
                with dots. Meaning "dira/dirb/file.gif" will be "dira.dirb.file.gif".</para>
            	<para>You can create an ImageResourceHandle in design time using the
                "Images.DirA.DirB.FileName.gif" format in the property grid, which is actually the
                format passed to the constructor with the addition of the "Images." Prefix.</para>
            </summary>
            <example>
            	<code lang="CS">
            		<![CDATA[
            Gizmox.WebGUI.Common.Resources.ImageResourceHandle imageResourceHandle1 = new Gizmox.WebGUI.Common.Resources.ImageResourceHandle();
            imageResourceHandle1.File = "Add.png";
            this.objPictureBox.Image = imageResourceHandle1;]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            Dim imageResourceHandle1 As New Gizmox.WebGUI.Common.Resources.ImageResourceHandle()
            imageResourceHandle1.File = "Add.png"
            Me.objPictureBox.Image = imageResourceHandle1]]>
            	</code>
            </example>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ImageResourceHandle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.ImageResourceHandle"/> class.
            </summary>
            <param name="strFile">The STR file.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ImageResourceHandle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.ImageResourceHandle"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ImageResourceHandle.ToStream">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.ImageResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.SkinResourceHandle">
            <summary>
            	<para><font size="2">The SkinResourceHandle allows generating resources from skin
                embedded type resources. Skins are sets of resources that can be overridden by
                themes.</font></para>
            </summary>
            <example>
            	<code lang="CS">
            		<![CDATA[
            Gizmox.WebGUI.Common.Resources.SkinResourceHandle skinResourceHandle1 = new Gizmox.WebGUI.Common.Resources.SkinResourceHandle(this.Skin,"WindowCloseButton.gif");
            this.objPictureBox.Image = skinResourceHandle1;]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            Dim skinResourceHandle1 As New Gizmox.WebGUI.Common.Resources.SkinResourceHandle(Me.Skin, "WindowCloseButton.gif")
            Me.objPictureBox.Image = skinResourceHandle1]]>
            	</code>
            </example>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.SkinResourceHandle.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.SkinResourceHandle"/> class.
            </summary>
            <param name="objSkinType">The skin type.</param>
            <param name="strResourceName">The skin resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.SkinResourceHandle.#ctor(Gizmox.WebGUI.Forms.Skins.Skin,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.SkinResourceHandle"/> class.
            </summary>
            <param name="objSkin">The obj skin.</param>
            <param name="strResourceName">The skin resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.SkinResourceHandle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.SkinResourceHandle"/> class.
            </summary>
            <param name="strResourceName">The skin resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.SkinResourceHandle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.SkinResourceHandle"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.SkinResourceHandle.ToStream">
            <summary>
            Gets the skin stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.SkinResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.DataResourceHandle">
            <summary>
            	<para>The DataResourceHandle is a resource handle that points to the "Data"
                directory configured in the web.config. The Visual WebGui configuration section
                contains a "Directories" section which maps named directories to directory code
                names and the data directory is one of them. The value of the defined directory can
                either be relative to the root project / assembly bin in client mode or absolute
                path. The absolute path enables sharing Data between projects. By default this
                directory is configured to "Resources/Data".</para>
            	<para>Initializing the DataResourceHandle requires a file name in the constructor
                that is in embedded assembly resource format which means directories are separated
                with dots. Meaning "dira/dirb/file.gif" will be "dira.dirb.file.gif".</para>
            	<para>You can create a DataResourceHandle in design time using the
                "Data.DirA.DirB.FileName.gif" format, which is actually the format passed to the
                constructor with the addition of the "Data." Prefix.</para>
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DataResourceHandle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.DataResourceHandle"/> class.
            </summary>
            <param name="strFile">The STR file.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DataResourceHandle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.DataResourceHandle"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DataResourceHandle.ToStream">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DataResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.GatewayResourceHandle">
            <summary>
            The GatewayResourceHandle allows generating resources on demand.<br/>
            The GatewayResourceHandle receives a GatewayReference which is actually a pointer to a
            gateway. This resource handle currently can only be initialized through code.
            </summary>
            <example>
            	<para>This example creates a new control PieControl. this control uses data values
                to create a pie chart and save it as an image.<br/>
                The image is created in the ProcessGatewayRequest method.</para>
            	<para>In the control constructor we create a new GatewayResourceHandle that return
                a ResourceHandle to this control gateway.</para>
            	<para></para>
            	<code lang="CS">
            		<![CDATA[
            public partial class PieControl : PictureBox
             {
             private int[] dataValues = new int[] { };
             private string[] dataLabels = new string[] { };
             
            public int[] Values
             {
             get
             {
             return dataValues;
             }
             set
             {
             dataValues = value;
             }
             }
             
            public string[] Labels
             {
             get
             {
             return dataLabels;
             }
             set
             {
             dataLabels = value;
             }
             }
             
            public PieControl()
             {
             //Creates a GatewayResourceHandle to the is control GatewayReference.
             this.Image = new GatewayResourceHandle(new GatewayReference(this, "graph"));
             
            this.SizeMode = PictureBoxSizeMode.Normal;
             }
             
            /// <SUMMARY>
            /// Provides a way to handle gateway requests.
             /// </SUMMARY>
            /// <PARAM name="objHttpContext">The gateway request HTTP context.</PARAM>
             /// <PARAM name="strAction">The gateway request action.</PARAM>
             /// <RETURNS>
            /// By default this method returns a instance of a class which implements the IGatewayHandler and
             /// throws a non implemented HttpException.
             /// </RETURNS>
            /// <REMARKS>
            /// This method is called from the implementation of IGatewayComponent which replaces the
             /// IGatewayControl interface. The IGatewayCompoenent is implemented by default in the
             /// RegisteredComponent class which is the base class of most of the Visual WebGui
             /// components.
             /// Referencing a RegisterComponent that overrides this method is done the same way that
             /// a control implementing IGatewayControl, which is by using the GatewayReference class.
             /// </REMARKS>
            protected override IGatewayHandler ProcessGatewayRequest(HttpContext objHttpContext, string strAction)
             {
             // If is "graph" action print a graph to the response, otherwise let the base class handle the request.
             if (strAction == "graph")
             {
             // find the total of the numeric data
             float total = 100;
             int width = 300;
             string title = "What do we eat and drink?";
             
            int iLoop = 0;
             
            // we need to create fonts for our legend and title
             Font fontLegend = new Font("Verdana", 10), fontTitle = new Font("Verdana", 15, FontStyle.Bold);
             
            // We need to create a legend and title, how big do these need to be?
             // Also, we need to resize the height for the pie chart, respective to the
             // height of the legend and title
             const int bufferSpace = 15;
             int legendHeight = fontLegend.Height * (dataValues.Length + 1) + bufferSpace;
             int titleHeight = fontTitle.Height + bufferSpace;
             int height = width + legendHeight + titleHeight + bufferSpace;
             int pieHeight = width; // maintain a one-to-one ratio
             
            // Create a rectange for drawing our pie
             Rectangle pieRect = new Rectangle(0, titleHeight, width, pieHeight);
             
            // Create our pie chart, start by creating an ArrayList of colors
             ArrayList colors = new ArrayList();
             Random rnd = new Random();
             for (iLoop = 0; iLoop &lt; dataValues.Length; iLoop++)
             colors.Add(new SolidBrush(Color.FromArgb(rnd.Next(255), rnd.Next(255), rnd.Next(255))));
             
            float currentDegree = 0.0F;
             
            // Create a Bitmap instance 
            Bitmap objBitmap = new Bitmap(width, height);
             Graphics objGraphics = Graphics.FromImage(objBitmap);
             
            SolidBrush blackBrush = new SolidBrush(Color.Black);
             
            // Put a white backround in
             objGraphics.FillRectangle(new SolidBrush(Color.White), 0, 0, width, height);
             for (iLoop = 0; iLoop &lt; dataValues.Length; iLoop++)
             {
             objGraphics.FillPie((SolidBrush)colors[iLoop], pieRect, currentDegree,
             dataValues[iLoop] / total * 360);
             
            // increment the currentDegree
             currentDegree += Convert.ToSingle(dataValues[iLoop]) / total * 360;
             }
             
            // Create the title, centered
             StringFormat stringFormat = new StringFormat();
             stringFormat.Alignment = StringAlignment.Center;
             stringFormat.LineAlignment = StringAlignment.Center;
             
            objGraphics.DrawString(title, fontTitle, blackBrush,
             new Rectangle(0, 0, width, titleHeight), stringFormat);
             
            // Create the legend
             objGraphics.DrawRectangle(new Pen(Color.Black, 2), 0, height - legendHeight, width, legendHeight);
             for (iLoop = 0; iLoop &lt; dataValues.Length; iLoop++)
             {
             objGraphics.FillRectangle((SolidBrush)colors[iLoop], 5,
             height - legendHeight + fontLegend.Height * iLoop + 5, 10, 10);
             objGraphics.DrawString(dataLabels[iLoop], fontLegend, blackBrush,
             20, height - legendHeight + fontLegend.Height * iLoop + 1);
             }
             
            // display the total
             objGraphics.DrawString("Total: " + Convert.ToString(total), fontLegend, blackBrush,
             5, height - fontLegend.Height - 5);
             
            // Since we are outputting a Jpeg, set the ContentType appropriately
             HttpContext.Current.Response.ContentType = "image/jpeg";
             
            // Save the image to a file
             objBitmap.Save(HttpContext.Current.Response.OutputStream, ImageFormat.Jpeg);
             
            // clean up...
             objGraphics.Dispose();
             objBitmap.Dispose();
             
            return null;
             }
             else
             {
             return base.ProcessGatewayRequest(objHttpContext, strAction);
             }
             }
             
            }]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            Partial Public Class PieControl
             Inherits PictureBox
             Private dataValues As Integer() = New Integer() {}
             Private dataLabels As String() = New String() {}
             
            Public Property Values() As Integer()
             Get
             Return dataValues
             End Get
             Set(ByVal value As Integer())
             dataValues = value
             End Set
             End Property
             
            Public Property Labels() As String()
             Get
             Return dataLabels
             End Get
             Set(ByVal value As String())
             dataLabels = value
             End Set
             End Property
             
            Public Sub New()
             'Creates a GatewayResourceHandle to the is control GatewayReference.
             Me.Image = New GatewayResourceHandle(New GatewayReference(Me, "graph"))
             
            Me.SizeMode = PictureBoxSizeMode.Normal
             End Sub
             
            ' <SUMMARY>
            ' Provides a way to handle gateway requests.
             ' </SUMMARY>
            ' <PARAM name="objHttpContext">The gateway request HTTP context.</PARAM>
             ' <PARAM name="strAction">The gateway request action.</PARAM>
             ' <RETURNS>
            ' By default this method returns a instance of a class which implements the IGatewayHandler and
             ' throws a non implemented HttpException.
             ' </RETURNS>
            ' <REMARKS>
            ' This method is called from the implementation of IGatewayComponent which replaces the
             ' IGatewayControl interface. The IGatewayCompoenent is implemented by default in the
             ' RegisteredComponent class which is the base class of most of the Visual WebGui
             ' components.
             ' Referencing a RegisterComponent that overrides this method is done the same way that
             ' a control implementing IGatewayControl, which is by using the GatewayReference class.
             ' </REMARKS>
            Protected Overloads Overrides Function ProcessGatewayRequest(ByVal objHttpContext As HttpContext, ByVal strAction As String) As IGatewayHandler
             ' If is "graph" action print a graph to the response, otherwise let the base class handle the request.
             If strAction = "graph" Then
             ' find the total of the numeric data
             Dim total As Single = 100
             Dim width As Integer = 300
             Dim title As String = "What do we eat and drink?"
             
            Dim iLoop As Integer = 0
             
            ' we need to create fonts for our legend and title
             Dim fontLegend As New Font("Verdana", 10), fontTitle As New Font("Verdana", 15, FontStyle.Bold)
             
            ' We need to create a legend and title, how big do these need to be?
             ' Also, we need to resize the height for the pie chart, respective to the
             ' height of the legend and title
             Const bufferSpace As Integer = 15
             Dim legendHeight As Integer = fontLegend.Height * (dataValues.Length + 1) + bufferSpace
             Dim titleHeight As Integer = fontTitle.Height + bufferSpace
             Dim height As Integer = width + legendHeight + titleHeight + bufferSpace
             Dim pieHeight As Integer = width
             ' maintain a one-to-one ratio
             ' Create a rectange for drawing our pie
             Dim pieRect As New Rectangle(0, titleHeight, width, pieHeight)
             
            ' Create our pie chart, start by creating an ArrayList of colors
             Dim colors As New ArrayList()
             Dim rnd As New Random()
             For iLoop = 0 To dataValues.Length - 1
             colors.Add(New SolidBrush(Color.FromArgb(rnd.[Next](255), rnd.[Next](255), rnd.[Next](255))))
             Next
             
            Dim currentDegree As Single = 0.0F
             
            ' Create a Bitmap instance 
            Dim objBitmap As New Bitmap(width, height)
             Dim objGraphics As Graphics = Graphics.FromImage(objBitmap)
             
            Dim blackBrush As New SolidBrush(Color.Black)
             
            ' Put a white backround in
             objGraphics.FillRectangle(New SolidBrush(Color.White), 0, 0, width, height)
             For iLoop = 0 To dataValues.Length - 1
             objGraphics.FillPie(DirectCast(colors(iLoop), SolidBrush), pieRect, currentDegree, dataValues(iLoop) / total * 360)
             
            ' increment the currentDegree
             currentDegree += Convert.ToSingle(dataValues(iLoop)) / total * 360
             Next
             
            ' Create the title, centered
             Dim stringFormat As New StringFormat()
             stringFormat.Alignment = StringAlignment.Center
             stringFormat.LineAlignment = StringAlignment.Center
             
            objGraphics.DrawString(title, fontTitle, blackBrush, New Rectangle(0, 0, width, titleHeight), stringFormat)
             
            ' Create the legend
             objGraphics.DrawRectangle(New Pen(Color.Black, 2), 0, height - legendHeight, width, legendHeight)
             For iLoop = 0 To dataValues.Length - 1
             objGraphics.FillRectangle(DirectCast(colors(iLoop), SolidBrush), 5, height - legendHeight + fontLegend.Height * iLoop + 5, 10, 10)
             objGraphics.DrawString(dataLabels(iLoop), fontLegend, blackBrush, 20, height - legendHeight + fontLegend.Height * iLoop + 1)
             Next
             
            ' display the total
             objGraphics.DrawString("Total: " &amp; Convert.ToString(total), fontLegend, blackBrush, 5, height - fontLegend.Height - 5)
             
            ' Since we are outputting a Jpeg, set the ContentType appropriately
             HttpContext.Current.Response.ContentType = "image/jpeg"
             
            ' Save the image to a file
             objBitmap.Save(HttpContext.Current.Response.OutputStream, ImageFormat.Jpeg)
             
            ' clean up...
             objGraphics.Dispose()
             objBitmap.Dispose()
             
            Return Nothing
             Else
             Return MyBase.ProcessGatewayRequest(objHttpContext, strAction)
             End If
             End Function
             
            End Class]]>
            	</code>
            </example>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.GatewayResourceHandle.#ctor(Gizmox.WebGUI.Common.Gateways.GatewayReference)">
            <summary>
            Create a new gateway resource handle from a gateway reference
            </summary>
            <param name="objGatewayReference"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.GatewayResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.GatewayResourceHandle.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.GatewayResourceHandle.Component">
            <summary>
            Gets the component.
            </summary>
            <value>The component.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.GatewayResourceHandle.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>The file.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.StaticGatewayResourceHandle">
            <summary>
            	<para><span class="Forum_Normal" id="spBody">The <span class="Forum_Normal">StaticGatewayResourceHandle</span> allows generating resources on
                demand.</span><span class="Forum_Normal">StaticGatewayResourceHandle receives a
                type instead of an instance and using this type it generates a gateway on
                demand.</span></para>
            </summary>
            <example>
            	<para>This example creates a class that inherits from IStaticGateway that renders
                an html page with 2 properties sent via the query string.</para>
            	<para>The class returns a static gatway resource handle and it's url is used in an
                html box.</para>
            	<para></para>
            	<code lang="VB">
            		<![CDATA[
            Public Class MyClass1
             Implements IStaticGateway
             
            Private Readonly Property FirstName() As String
             Get
             Return HttpContext.Current.Request.QueryString("fn")
             End Get
             End Property
             
            Private Readonly Property LastName() As String
             Get
             Return HttpContext.Current.Request.QueryString("ln")
             End Get
             End Property
             
            Public Function GetGatewayHandler(ByVal objContext As IContext) As IStaticGatewayHandler Implements IStaticGateway.GetGatewayHandler
             
            Dim strContent As String = "
            <para>FirstName: " + FirstName + "<BR>LastName: " + LastName + "</para>"
             objContext.HttpContext.Response.Cache.SetCacheability(HttpCacheability.ServerAndPrivate)
             objContext.HttpContext.Response.ExpiresAbsolute = DateTime.Now.AddMonths(6)
             
            objContext.HttpContext.Response.Write(strContent)
             Return Nothing
             
            End Function
             
            End Class
             
            Public Class Form1
             
            Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
             Dim objStaticGatewayResourceHandle As New StaticGatewayResourceHandle("DataResourceHandleTest.MyClass", GetType(MyClass1))
             HtmlBox1.Url = String.Format(objStaticGatewayResourceHandle.ToString() + "?fn={0}&amp;ln={1}", TextBox1.Text, TextBox2.Text)
             End Sub
            End Class]]>
            	</code>
            	<code lang="CS" title="[New Example]">
            		<![CDATA[
            public class MyClass : IStaticGateway
            {
             private string FirstName
             {
             get
             {
             return HttpContext.Current.Request.QueryString["fn"];
             }
             }
             
            private string LastName
             {
             get
             {
             return HttpContext.Current.Request.QueryString["ln"];
             }
             }
             
            #region IStaticGateway Members
             
            public IStaticGatewayHandler GetGatewayHandler(IContext objContext)
             {
             string strContent = @"
            <para>FirstName: " + FirstName
             + "<BR>LastName: " + LastName + "</para>";
             objContext.HttpContext.Response.Cache.SetCacheability(HttpCacheability.ServerAndPrivate);
             objContext.HttpContext.Response.ExpiresAbsolute = DateTime.Now.AddMonths(6);
             
            objContext.HttpContext.Response.Write(strContent);
             return null;
             
            }
             
            #endregion
            }
             
            public partial class Form1 : Form
            {
             public Form1()
             {
             InitializeComponent();
             }
             
            private void button1_Click(object sender, EventArgs e)
             {
             StaticGatewayResourceHandle objStaticGatewayResourceHandle = new StaticGatewayResourceHandle("DataResourceHandleTest.MyClass", typeof(MyClass));
             htmlBox1.Url = string.Format(objStaticGatewayResourceHandle.ToString() + "?fn={0}&amp;ln={1}", textBox1.Text, textBox2.Text);
             }
            }]]>
            	</code>
            </example>
            <defaultconstructorsummary><para></para></defaultconstructorsummary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.StaticGatewayResourceHandle.#ctor(System.String,System.Type)">
            <summary>StaticGatewayResourceHandle</summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.StaticGatewayResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.StaticGatewayResourceHandle.GetMappedType(System.String)">
            <summary>
            Gets the type of the mapped.
            </summary>
            <param name="strFile">The STR file.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.StaticGatewayResourceHandle.RegisterType(System.String,System.Type)">
            <summary>
            Registers the type.
            </summary>
            <param name="strFile">The STR file.</param>
            <param name="objType">Type of the obj.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.StaticGatewayResourceHandle.SetMappedType(System.String,System.Type)">
            <summary>
            Sets the type of the mapped.
            </summary>
            <param name="strFile">The STR file.</param>
            <param name="objType">Type of the obj.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.StaticGatewayResourceHandle.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>The file.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle">
            <summary>
            Provides a base class that enables to create a smart database resource handle
            </summary>
            <example>
                This example gets a
                <para><font size="2">DatabaseResourceHandle</font></para>
            	<code lang="CS">
            		<![CDATA[
            public class DBPictureResourceHandleAuth : DatabaseResourceHandle
             {
             public DBPictureResourceHandleAuth()
             {
             }
             
            public DBPictureResourceHandleAuth(int intImageId)
             : base(intImageId.ToString())
             {
             }
             
            public DBPictureResourceHandleAuth(int intEmployeeID, string strToken)
             : base(intEmployeeID.ToString(), strToken)
             {
             }
             
            /// <SUMMARY>
            /// Creates a conection to the database
             /// </SUMMARY>
            /// <RETURNS></RETURNS>
            protected override IDbConnection GetConnection()
             {
             return new SqlConnection(@"Data Source=DEVSRV\SQLEXPRESS;Initial Catalog=ImageTest;Integrated Security=True;");
             
            }
             
            /// <SUMMARY>
            /// Returns a reader with the current data
             /// </SUMMARY>
            /// <PARAM name="objConnection"></PARAM>
            /// <PARAM name="strQualifier"></PARAM>
            /// <RETURNS></RETURNS>
            protected override IDataReader GetDataReader(IDbConnection objConnection, string strQualifier)
             {
             
            SqlCommand objCommand = new SqlCommand("SELECT Image AS [Content], 'image/jpeg' AS ContentType FROM Images WHERE (Id = @Id)", (SqlConnection)objConnection);
             objCommand.Parameters.Add(new SqlParameter("Id", strQualifier));
             
            return objCommand.ExecuteReader();
             }
             
            /// <SUMMARY>
            /// Sets if this DatabaseResourceHandle uses authentication. If set to true checks if a token is placed in the url.
             /// </SUMMARY>
            protected override bool UseAuthentication
             {
             get
             {
             return true;
             }
             }
             
            /// <SUMMARY>
            /// Checks if the right tooken was used in the url
             /// </SUMMARY>
            /// <PARAM name="objConnection"></PARAM>
            /// <PARAM name="strToken"></PARAM>
            protected override void Authenticate(IDbConnection objConnection, string strToken)
             {
             if (strToken != "ImageKey")
             {
             throw new HttpException(401, "The token must be 'ImageKey'...");
             }
             }
             
            }]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            Imports Gizmox.WebGUI.Common.Resources
            Imports System.Data.SqlClient
             
            Public Class DBPictureResourceHandleAuth
             Inherits DatabaseResourceHandle
             Public Sub New()
             End Sub
             
            Public Sub New(ByVal intImageId As Integer)
             MyBase.New(intImageId.ToString())
             End Sub
             
            Public Sub New(ByVal intEmployeeID As Integer, ByVal strToken As String)
             MyBase.New(intEmployeeID.ToString(), strToken)
             End Sub
             
            ''' <SUMMARY>
            ''' Creates a conection to the database
             ''' </SUMMARY>
            ''' <RETURNS></RETURNS>
            Protected Overloads Overrides Function GetConnection() As IDbConnection
             Return New SqlConnection("Data Source=DEVSRV\SQLEXPRESS;Initial Catalog=ImageTest;Integrated Security=True;")
             
            End Function
             
            ''' <SUMMARY>
            ''' Returns a reader with the current data
             ''' </SUMMARY>
            ''' <PARAM name="objConnection"></PARAM>
            ''' <PARAM name="strQualifier"></PARAM>
            ''' <RETURNS></RETURNS>
            Protected Overloads Overrides Function GetDataReader(ByVal objConnection As IDbConnection, ByVal strQualifier As String) As IDataReader
             
            Dim objCommand As New SqlCommand("SELECT Image AS [Content], 'image/jpeg' AS ContentType FROM Images WHERE (Id = @Id)", DirectCast(objConnection, SqlConnection))
             objCommand.Parameters.Add(New SqlParameter("Id", strQualifier))
             
            Return objCommand.ExecuteReader()
             End Function
             
            ''' <SUMMARY>
            ''' Sets if this DatabaseResourceHandle uses authentication. If set to true checks if a token is placed in the url.
             ''' </SUMMARY>
            Protected Overloads Overrides ReadOnly Property UseAuthentication() As Boolean
             Get
             Return True
             End Get
             End Property
             
            ''' <SUMMARY>
            ''' Checks if the right tooken was used in the url
             ''' </SUMMARY>
            ''' <PARAM name="objConnection"></PARAM>
            ''' <PARAM name="strToken"></PARAM>
            Protected Overloads Overrides Sub Authenticate(ByVal objConnection As IDbConnection, ByVal strToken As String)
             If strToken &lt;&gt; "ImageKey" Then
             Throw New HttpException(401, "The token must be 'ImageKey'...")
             End If
             End Sub
            End Class
             
            ]]>
            	</code>
            </example>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.mstrQualifier">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.mstrToken">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.mobjContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle"/> class.
            </summary>
            <param name="strQualifier">The resource qualifier.</param>
            <param name="strToken">The token.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.Gizmox#WebGUI#Common#Interfaces#IStaticGateway#GetGatewayHandler(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the gateway handler.
            </summary>
            <param name="objContext">Request context.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.GetSpecificResourceHandle">
            <summary>
            Gets the specific resource handle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.ToIcon">
            <summary>
            Gets an icon from the resource stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.ToImage">
            <summary>
            Gets an image from the resource stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.ToStream">
            <summary>
            Gets the resource stream
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.ToString">
            <summary>
            Toes the string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.Authenticate(System.Data.IDbConnection,System.String)">
            <summary>
            Authenticates the specified obj connection.
            </summary>
            <param name="objConnection">The current connection.</param>
            <param name="strToken">The resource handle token.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.GetConnection">
            <summary>
            Gets a connection for the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.GetDataReader(System.Data.IDbConnection,System.String)">
            <summary>
            Gets the data reader for the requested resource.
            </summary>
            <param name="objConnection">The current connection.</param>
            <param name="strQualifier">The resource qualifier.</param>        
            <remarks>To enable autorization you can raise a non authorized exception.</remarks>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.Write(System.Web.HttpResponse,System.Data.IDataReader)">
            <summary>
            Writes the resource and it's headers to the response.
            </summary>
            <param name="objResponse">The response.</param>
            <param name="objDataReader">The data reader.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.WriteCacheHeaders(System.Web.HttpResponse)">
            <summary>
            Writes the caching headers.
            </summary>
            <param name="objResponse">The response.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.WriteContentType(System.Web.HttpResponse,System.Data.IDataReader)">
            <summary>
            Writes the content type header.
            </summary>
            <param name="objResponse">The response.</param>
            <param name="objDataReader">The data reader.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.WriteContent(System.Web.HttpResponse,System.Data.IDataReader)">
            <summary>
            Writes the binary content.
            </summary>
            <param name="objResponse">The response.</param>
            <param name="objDataReader">The data reader.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.GetUniqueName">
            <summary>
            Gets the unique name of the database resource handle type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.ValidateToken(System.String)">
            <summary>
            Validates the token.
            </summary>
            <param name="strToken">The token to validate.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.File">
            <summary>
            Gets or sets the file.
            </summary>
            <value>The file.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.ContentTypeColumn">
            <summary>
            Gets the content type column.
            </summary>
            <value>The content type column.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.ContentColumn">
            <summary>
            Gets the content column.
            </summary>
            <value>The content column.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.Qualifier">
            <summary>
            Gets the resource qualifier.
            </summary>
            <value>The resource qualifier.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.Token">
            <summary>
            Gets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.UseAuthentication">
            <summary>
            Gets a value indicating whether to user session authentication.
            </summary>
            <value>
            	<c>true</c> if to use session authentication; otherwise, <c>false</c>.
            </value>
            <remarks>
            If SessionAuthentication returns true the token will automaticly be populated with the session id
            and the server will enforce caller to have a session id matching token. This is the the default 
            Authentication method implementation.
            
            </remarks>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.Cacheability">
            <summary>
            Gets the cacheability.
            </summary>
            <value>The cacheability.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.Expires">
            <summary>
            Gets the expires value.
            </summary>
            <value>The expires value.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Resources.DatabaseResourceHandle.Context">
            <summary>
            Gets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Serialization.SerializableEventDescriptorWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableEventDescriptorWrapper.#ctor(System.ComponentModel.EventDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableEventDescriptorWrapper"/> class.
            </summary>
            <param name="objEventDescriptor">The property info.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Vitualization.VirtualizationException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.VirtualizationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Vitualization.VirtualizationException"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.VirtualizationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Vitualization.VirtualizationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.VirtualizationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Vitualization.VirtualizationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinValue">
            <summary>
            Provides a way to return a translatable value
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinValue.GetValue(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the translated value.
            </summary>
            <param name="objContext">The current context.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.BidirectionalSkinValue">
            <summary>
            Provides a way to return a translatable value of one of two values depending on the current 
            culture right to left specifications.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.BidirectionalSkinValue.mobjRTLValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.BidirectionalSkinValue.mobjLTRValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.BidirectionalSkinValue.#ctor(System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.BidirectionalSkinValue"/> class.
            </summary>
            <param name="objLTRValue">The value to use when Left To Right culture.</param>
            <param name="objRTLValue">The value to use when Right To Left culture.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.BidirectionalSkinValue.GetValue(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the translated value.
            </summary>
            <param name="objContext">The current context.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.BidirectionalSkinValue.GetObject(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the localized object.
            </summary>
            <param name="objContext">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinMultiValue">
            <summary>
            Provides a way to return a translatable value collection
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.mobjSkin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.mstrPrefix">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.mobjBaseStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.mobjDefaults">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.mblnIsInitializing">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.mblnLocalizeBaseStyleValues">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.#ctor(Gizmox.WebGUI.Forms.Skins.Skin,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinMultiValue"/> class.
            </summary>
            <param name="objPropertyOwner">The property owner.</param>
            <param name="strPropertyPrefix">The property prefix.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.#ctor(Gizmox.WebGUI.Forms.Skins.Skin,System.String,Gizmox.WebGUI.Forms.Skins.SkinMultiValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinMultiValue"/> class.
            </summary>
            <param name="objPropertyOwner">The property owner.</param>
            <param name="strPropertyPrefix">The property prefix.</param>
            <param name="objBaseStyle">The base type instance.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.#ctor(Gizmox.WebGUI.Forms.Skins.Skin,System.String,Gizmox.WebGUI.Forms.Skins.SkinMultiValue,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinMultiValue"/> class.
            </summary>
            <param name="objPropertyOwner">The property owner.</param>
            <param name="strPropertyPrefix">The property prefix.</param>
            <param name="objBaseStyle">The base type instance.</param>
            <param name="blnLocalizeBaseStyleValues">Treats inherited base style values as locals.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.BeginInit">
            <summary>
            Sets the instance in initializing mode which stores default values instead of the actual value.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.EndInit">
            <summary>
            Cancel initializing mode
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetMultiKey(System.String)">
            <summary>
            Gets the multi key.
            </summary>
            <param name="strKey">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetMultiKeys(System.String[])">
            <summary>
            Gets the multi keys.
            </summary>
            <param name="strKeys">The keys.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetValue``1(System.String,``0)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T">The type of the value that should be returned</typeparam>
            <param name="strKey">The key.</param>
            <param name="objDefaultValue">The default value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetAmbientValue``1(System.String,``0)">
            <summary>
            Gets the value.
            </summary>
            <typeparam name="T">The type of the value that should be returned</typeparam>
            <param name="strKey">The key.</param>
            <param name="objDefaultValue">The default value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetImageHeight(Gizmox.WebGUI.Forms.Skins.ImageResourceReference,System.Int32)">
            <summary>
            Gets the height of the image.
            </summary>
            <param name="objImageResourceReference">The resource reference.</param>
            <param name="intDefault">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetImageWidth(Gizmox.WebGUI.Forms.Skins.ImageResourceReference,System.Int32)">
            <summary>
            Gets the width of the image.
            </summary>
            <param name="objImageResourceReference">The resource reference.</param>
            <param name="intDefault">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetImageHeight(System.String,System.Int32)">
            <summary>
            Gets the height of the image.
            </summary>
            <param name="strKey">The resource key.</param>
            <param name="intDefault">The int default.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetMaxImageHeight(System.Int32,System.String[])">
            <summary>
            Gets the maximum height a list of images.
            </summary>
            <param name="intDefault">The int default.</param>
            <param name="strKeys">The resource keys.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetImageWidth(System.String,System.Int32)">
            <summary>
            Gets the width of the image.
            </summary>
            <param name="strKey">The resource key.</param>
            <param name="intDefault">The int default.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetImageSize(Gizmox.WebGUI.Forms.Skins.ImageResourceReference,System.Drawing.Size)">
            <summary>
            Gets the size of the image.
            </summary>
            <param name="objImageResourceReference">The image resource reference.</param>
            <param name="objDefault">The default size to return if no image was found.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.GetMaxImageWidth(System.Int32,System.String[])">
            <summary>
            Gets the maximum width a list of images.
            </summary>
            <param name="intDefault">The int default.</param>
            <param name="strKeys">The resource keys.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.ShouldSerialize(System.String)">
            <summary>
            Indicates if should serialize a resource
            </summary>
            <param name="strKey"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.Reset(System.String)">
            <summary>
            Resets a givven key
            </summary>
            <param name="strKey"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.SetValue(System.String,System.Object)">
            <summary>
            Sets the value (editing skins is enabled in design time only).
            </summary>
            <param name="strKey">The key.</param>
            <param name="objValue">The value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.HasValue(System.String)">
            <summary>
            Determines whether the specified key has value.
            </summary>
            <param name="strKey">The key.</param>
            <returns>
            	<c>true</c> if the specified key has value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.SetDefaultValue(System.String,System.Object)">
            <summary>
            Sets the default value.
            </summary>
            <param name="strKey">The key.</param>
            <param name="objValue">The value.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.Skin">
            <summary>
            Gets the owner skin.
            </summary>
            <value>The owner skin.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.Prefix">
            <summary>
            Gets the prefix.
            </summary>
            <value>The prefix.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.Defaults">
            <summary>
            Gets the defaults.
            </summary>
            <value>The defaults.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.DesignMode">
            <summary>
            Gets a value that indicates whether the <see cref="T:Gizmox.WebGUI.Forms.Skins.Skin"></see> is currently in design mode.
            </summary>
            <returns>
            true if the <see cref="T:Gizmox.WebGUI.Forms.Skins.Skin"></see> is in design mode; otherwise, false.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinMultiValue.Gizmox#WebGUI#Forms#Skins#ISkinContainer#Skin">
            <summary>
            Gets the skin.
            </summary>
            <value>The skin.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinMultiValueConverter">
            <summary>
            Provides a type converter for the SkinMultiValue class
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValueConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object"/> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that is used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> with the properties that are exposed for this data type, or null if there are no properties.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinMultiValueConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"/> should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource">
            <summary>
            Represents a Style Template Resource 
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource"/> class.
            </summary>        
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource"/> class.
            </summary>
            <param name="objResource">The resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource.CompilerCollectorType">
            <summary>
            Gets the type of the compiler collector.
            </summary>
            <value>The type of the compiler collector.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource.CompilerContentType">
            <summary>
            Gets the type of the content compiler.
            </summary>
            <value>The type of the content compiler.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.TemplateResource.NewFileExtension">
            <summary>
            Gets the new file extension.
            </summary>
            <value>The new file extension.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.TemplateContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TemplateContent.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetContent"/> class.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TemplateContent.WriteStart(System.IO.StreamWriter)">
            <summary>
            Performs writing on starting collector serialization
            </summary>
            <param name="objStreamWriter"></param>        
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.TemplateContent.WriteEnd(System.IO.StreamWriter)">
            <summary>
            Performs writing on ending collector serialization
            </summary>
            <param name="objStreamWriter"></param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetContent.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetContent"/> class.
            </summary>
            <param name="objStream">The file stream.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetCollector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.StyleSheetCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IResultsProvider">
            <summary>
            Summary description for IResultsProvider.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IResultsProvider.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IResultsProvider.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified STR argument name.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IResultsProvider.AllKeys">
            <summary>
            Gets all keys.
            </summary>
            <value>All keys.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IResultsReaderProvider">
            <summary>
            Summary description for IResultsReaderProvider.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IResultsReaderProvider.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the specified STR argument name.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IResultsReaderProvider.AllKeys">
            <summary>
            Gets all keys.
            </summary>
            <value>All keys.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IRenderableComponent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IRenderableComponent.RenderComponent(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IResponseWriter,System.Int64)">
            <summary>
            Renders the component.
            </summary>
            <param name="objContext">The obj context.</param>
            <param name="objWriter">The obj writer.</param>
            <param name="lngRequestID">The LNG request ID.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IRenderableComponentMember">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IRenderableComponentMember.RenderComponent(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IResponseWriter,System.Int64,System.Boolean)">
            <summary>
            Renders the component.
            </summary>
            <param name="objContext">The obj context.</param>
            <param name="objWriter">The obj writer.</param>
            <param name="lngRequestID">The LNG request ID.</param>
            <param name="blnRenderOwner">if set to <c>true</c> [BLN render owner].</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IForm">
            <summary>
            Summary description for IForm.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IForm.RenderForm(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IResponseWriter,System.Int64)">
            <summary>
            Renders the form.
            </summary>
            <param name="objContext">The obj context.</param>
            <param name="objWriter">The obj writer.</param>
            <param name="lngRequestID">The LNG request ID.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IForm.SetContext(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Sets the context.
            </summary>
            <param name="objContext">The obj context.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IForm.ClearContext">
            <summary>
            Clears the context.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IForm.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IForm.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IForm.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Gizmox.WebGUI.Common.Interfaces.IForm"/> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IForm.IsClosed">
            <summary>
            Gets a value indicating whether this instance is closed.
            </summary>
            <value><c>true</c> if this instance is closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IForm.Forms">
            <summary>
            Gets the forms.
            </summary>
            <value>The forms.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IForm.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IForm.Menu">
            <summary>
            Gets the menu.
            </summary>
            <value>The menu.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IContextMenu">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Configuration.Config">
            <summary>
            Implementation of Config class.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mobjSection">
            <summary>
            Xml config section
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mobjProperties">
            <summary>
            Config hash properties
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mobjLanguages">
            <summary>
            Supported langauages
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mobjThemes">
            <summary>
            The theme instances
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mobjThemesSemaphore">
            <summary>
            Provides for looking the access to mobjThemes
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mobjDefaultThemeSemaphore">
            <summary>
            Provides for looking the access to mstrDefaultTheme
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mstrStaticExtension">
            <summary>
            Extension of static resources 
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mstrDynamicExtension">
            <summary>
            Extension of dynamic resources
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mstrSilverlightExtension">
            <summary>
            Extension of silverlight resources
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mstrPrivateVersion">
            <summary>
            Get the user private version extension
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mobjConfigInstance">
            <summary>
            The global config instance
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mstrDefaultFactory">
            <summary>
            The default factory
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mblnRightToLeft">
            <summary>
            Right to left enabled
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mblnUseStaticResources">
            <summary>
            Use static resources
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mstrRootDirectory">
            <summary>
            Application root directory
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mstrDefaultTheme">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mstrTimeFormat">
            <summary>
            Default time format
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mstrShortDateFormat">
            <summary>
            Default short date format
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mstrLongDateFormat">
            <summary>
            Default long date format
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mblnInlineWindows">
            <summary>
            Flag indicating if inline windows whould be used
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mblnTimersEnabled">
            <summary>
            Flag indicating if timers are enabled
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mblnAspCompatMode">
            <summary>
            Flag indicating is ASP compatible mode is requiered
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mblnGZipCompression">
            <summary>
            Flag indicating if GZip compression is required
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mblnShowLGPLWaiver">
            <summary>
            Flag indicating if to display the LGPL waver
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mblnWinFormsCompatible">
            <summary>
            Flag indicating if windows whould be used
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Configuration.Config.mobjRegisteredComponents">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.#ctor(System.Xml.XmlElement)">
            <summary>
            Creates a new configuration object from the config section
            </summary>
            <param name="objSection">The config section.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetFormsAssembly">
            <summary>
            Gets the forms assembly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetCommonAssembly">
            <summary>
            Get the common assembly
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetDirectory(System.String,System.String)">
            <summary>
            Get a directory path
            </summary>
            <param name="strCode"></param>
            <param name="strDefault"></param>
            <returns>if directory found return the directory path, else return strDefault</returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetDirectory(System.String)">
            <summary>
            Get a directory path
            </summary>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetApplication(System.String)">
            <summary>
            Get a application type
            </summary>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.CheckApplication(System.String)">
            <summary>
            Check valid appliction
            </summary>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetApplicationMode(System.String)">
            <summary>
            Get a application mode
            </summary>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetAuthenticationParam(System.String)">
            <summary>
            Get a authentication parameter
            </summary>
            <param name="strCode"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetCommonRegisteredControls">
            <summary>
            Gets the common registered controls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetFormRegisteredControls">
            <summary>
            Gets the form registered controls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetRegisteredControls(System.IO.Stream)">
            <summary>
            Gets the registered controls.
            </summary>
            <param name="objResourcesStream">The resources stream.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetConfiguredControls">
            <summary>
            Gets the configured controls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetRegisterdControls(System.Xml.XmlNodeList)">
            <summary>
            Gets the registerd controls.
            </summary>
            <param name="objResourceNodes">The resource nodes.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetRegisterdControls(System.String)">
            <summary>
            Gets the registerd controls.
            </summary>
            <param name="strControlType">The control type string.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.IsSkinable(System.Type)">
            <summary>
            Determines whether the specified type is skinable.
            </summary>
            <param name="objType">Type of the obj.</param>
            <returns>
            	<c>true</c> if the specified type is skinable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.IsFeatureEnabled(System.String,System.Boolean)">
            <summary>
            Determines whether a feature is enabled.
            </summary>
            <param name="strFeature">feature.</param>
            <param name="blnDefault">default.</param>
            <returns>
            	<c>true</c> if feature is enabled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetFeatureValue(System.String,System.String)">
            <summary>
            Gets the value defined for a specific feature .
            </summary>
            <param name="strFeature">The feature name.</param>
            <param name="strDefault">The default value if value is not defined.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetFeatureValue(System.String,System.Int32)">
            <summary>
            Gets the value defined for a specific feature .
            </summary>
            <param name="strFeature">The feature name.</param>
            <param name="intDefault">The default value if value is not defined.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetFeatureValue(System.String,System.Boolean)">
            <summary>
            Gets the value defined for a specific feature .
            </summary>
            <param name="strFeature">The feature name.</param>
            <param name="blnDefault">The default value if value is not defined.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetSection(System.String)">
            <summary>
            Gets the section.
            </summary>
            <param name="strSection">The STR section.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetResourceStream(System.Reflection.Assembly,System.String)">
            <summary>
            Gets the resource stream.
            </summary>
            <param name="objAssembly">The assembly.</param>
            <param name="strResourceName">The resource name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetCommonResourceStream(System.String)">
            <summary>
            Gets common resource stream.
            </summary>
            <param name="strResourceName">The resource name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetFormsResourceStream(System.String)">
            <summary>
            Gets forms resource stream.
            </summary>
            <param name="strResourceName">The resource name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetInstance">
            <summary>
            Gets a single tone instance of the configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.Config.GetInstance(System.Xml.XmlElement)">
            <summary>
            Gets a single tone instance of the configuration.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.UseAuthentication">
            <summary>
            Gets a value indicating whether to use authentication.
            </summary>
            <value>
            	<c>true</c> if use authentication; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.DefaultLongDateFormat">
            <summary>
            Gets the default long date format
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.DefaultTimeFormat">
            <summary>
            Gets the default time format
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.DefaultShortDateFormat">
            <summary>
            Gets the default short date format
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.AspCompatMode">
            <summary>
            Gets a value indicating whether ASP compat mode is required.
            </summary>
            <value><c>true</c> if ASP compat mode is required; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.ShowLGPLWaiver">
            <summary>
            Gets a value indicating whether to show the LGPL waver.
            </summary>
            <value><c>true</c> if to show the LGPL waver; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.Languages">
            <summary>
            Gets the configured languages.
            </summary>
            <value>The configured languages.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.Themes">
            <summary>
            Gets the configured themes.
            </summary>
            <value>The configured themes.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.DefaultTheme">
            <summary>
            Gets the default theme.
            </summary>
            <value>The default theme.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.ThemeTypes">
            <summary>
            Gets the theme types hash.
            </summary>
            <value>The theme types hash.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.PrivateVersion">
            <summary>
            Gets the configured private version
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.UseStaticResources">
            <summary>
            Gets a flag indicating if static resources is to be used
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.StaticExtension">
            <summary>
            Gets the extension for static content
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.DynamicExtension">
            <summary>
            Gets the extension for dynamic content
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.SilverlightExtension">
            <summary>
            Gets the extension for silverlight
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.InlineWindows">
            <summary>
            Gets a value indicating whether to use inline windows.
            </summary>
            <value><c>true</c> if to use inline windows; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.WinFormsCompatible">
            <summary>
            Gets a value indicating whether to work in winforms compatible mode.
            </summary>
            <value><c>true</c> if to use inline windows; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.RightToLeft">
            <summary>
            Is right to left enabled
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Configuration.Config.RegisteredControls">
            <summary>
            Gets the registered controls.
            </summary>
            <value>The registered controls.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Configuration.ConfigHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Configuration.ConfigHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
            <summary>
            Creates a configuration object from the given section.
            </summary>
            <param name="objParent">Section parent.</param>
            <param name="objConfigContext">Configuration context.</param>
            <param name="objSection">The current section.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo">
            <summary>Provides instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <see cref="T:System.IO.VirtualFileStream"></see> objects. This class cannot be inherited.</summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.IO.VirtualFileInfo"></see> class, which acts as a wrapper for a file path.</summary>
            <param name="fileName">The fully qualified name of the new file, or the relative file name. </param>
            <exception cref="T:System.UnauthorizedAccessException">Access to fileName is denied. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">fileName is null. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.NotSupportedException">fileName contains a colon (:) in the middle of the string. </exception>
            <exception cref="T:System.ArgumentException">The file name is empty, contains only white spaces, or contains invalid characters. </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.#ctor(Gizmox.WebGUI.Virtualization.VirtualNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo"/> class.
            </summary>
            <param name="objVirtualNode">The virtual node.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.AppendText">
            <summary>Creates a <see cref="T:System.IO.StreamWriter"></see> that appends text to the file represented by this instance of the <see cref="T:System.IO.VirtualFileInfo"></see>.</summary>
            <returns>A new StreamWriter.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.CopyTo(System.String)">
            <summary>Copies an existing file to a new file, disallowing the overwriting of an existing file.</summary>
            <returns>A new file with a fully qualified path.</returns>
            <param name="destFileName">The name of the new file to copy to. </param>
            <exception cref="T:System.ArgumentException">destFileName is empty, contains only white spaces, or contains invalid characters. </exception>
            <exception cref="T:System.IO.IOException">An error occurs, or the destination file already exists. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">destFileName is null. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.NotSupportedException">destFileName contains a colon (:) in the middle of the string. </exception>
            <exception cref="T:System.UnauthorizedAccessException">A directory path is passed in, or the file is being moved to a different drive. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.CopyTo(System.String,System.Boolean)">
            <summary>Copies an existing file to a new file, allowing the overwriting of an existing file.</summary>
            <returns>A new file, or an overwrite of an existing file if overwrite is true. If the file exists and overwrite is false, an <see cref="T:System.IO.IOException"></see> is thrown.</returns>
            <param name="destFileName">The name of the new file to copy to. </param>
            <param name="overwrite">true to allow an existing file to be overwritten; otherwise, false. </param>
            <exception cref="T:System.ArgumentException">destFileName is empty, contains only white spaces, or contains invalid characters. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">destFileName is null. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.IO.IOException">An error occurs, or the destination file already exists and overwrite is false. </exception>
            <exception cref="T:System.NotSupportedException">destFileName contains a colon (:) in the middle of the string. </exception>
            <exception cref="T:System.UnauthorizedAccessException">A directory path is passed in, or the file is being moved to a different drive. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Create">
            <summary>Creates a file.</summary>
            <returns>A new file.</returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.CreateText">
            <summary>Creates a <see cref="T:System.IO.StreamWriter"></see> that writes a new text file.</summary>
            <returns>A new StreamWriter.</returns>
            <exception cref="T:System.IO.IOException">The disk is read-only. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The file name is a directory. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Decrypt">
            <summary>Decrypts a file that was encrypted by the current account using the <see cref="M:System.IO.VirtualFileInfo.Encrypt"></see> method.</summary>
            <exception cref="T:System.UnauthorizedAccessException">The file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object is read-only.-or- This operation is not supported on the current platform.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.IO.DriveNotFoundException">An invalid drive was specified. </exception>
            <exception cref="T:System.IO.FileNotFoundException">The file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object could not be found.</exception>
            <exception cref="T:System.NotSupportedException">The file system is not NTFS.</exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Delete">
            <summary>Permanently deletes a file.</summary>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.IO.IOException">The target file is open or memory-mapped on a computer running Microsoft Windows NT. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The path is a directory. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Encrypt">
            <summary>Encrypts a file so that only the account used to encrypt the file can decrypt it.</summary>
            <exception cref="T:System.UnauthorizedAccessException">The file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object is read-only.-or- This operation is not supported on the current platform.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.IO.DriveNotFoundException">An invalid drive was specified. </exception>
            <exception cref="T:System.IO.FileNotFoundException">The file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object could not be found.</exception>
            <exception cref="T:System.NotSupportedException">The file system is not NTFS.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.GetAccessControl">
            <summary>Gets a <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that encapsulates the access control list (ACL) entries for the file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that encapsulates the access control rules for the current file.</returns>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows 2000 or later.</exception>
            <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">The current system account does not have administrative privileges.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.SystemException">The file could not be found.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This operation is not supported on the current platform.-or- The caller does not have the required permission.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.GetAccessControl(System.Security.AccessControl.AccessControlSections)">
            <summary>Gets a <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that encapsulates the specified type of access control list (ACL) entries for the file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object.</summary>
            <returns>A <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that encapsulates the access control rules for the current file.     </returns>
            <param name="includeSections">One of the <see cref="T:System.Security.AccessControl.AccessControlSections"></see> values that specifies which group of access control entries to retrieve. </param>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows 2000 or later.</exception>
            <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">The current system account does not have administrative privileges.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.SystemException">The file could not be found.</exception>
            <exception cref="T:System.UnauthorizedAccessException">This operation is not supported on the current platform.-or- The caller does not have the required permission.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.MoveTo(System.String)">
            <summary>Moves a specified file to a new location, providing the option to specify a new file name.</summary>
            <param name="destFileName">The path to move the file to, which can specify a different file name. </param>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentException">destFileName is empty, contains only white spaces, or contains invalid characters. </exception>
            <exception cref="T:System.UnauthorizedAccessException">destFileName is read-only or is a directory. </exception>
            <exception cref="T:System.IO.FileNotFoundException">The file is not found. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentNullException">destFileName is null. </exception>
            <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
            <exception cref="T:System.NotSupportedException">destFileName contains a colon (:) in the middle of the string. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs, such as the destination file already exists or the destination device is not ready. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Open(System.IO.FileMode)">
            <summary>Opens a file in the specified mode.</summary>
            <returns>A file opened in the specified mode, with read/write access and unshared.</returns>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant specifying the mode (for example, Open or Append) in which to open the file. </param>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The file is read-only or is a directory. </exception>
            <exception cref="T:System.IO.IOException">The file is already open. </exception>
            <exception cref="T:System.IO.FileNotFoundException">The file is not found. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
            <summary>Opens a file in the specified mode with read, write, or read/write access.</summary>
            <returns>A <see cref="T:System.IO.VirtualFileStream"></see> object opened in the specified mode and access, and unshared.</returns>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant specifying the mode (for example, Open or Append) in which to open the file. </param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant specifying whether to open the file with Read, Write, or ReadWrite file access. </param>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">One or more arguments is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is empty or contains only white spaces. </exception>
            <exception cref="T:System.IO.IOException">The file is already open. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path is read-only or is a directory. </exception>
            <exception cref="T:System.IO.FileNotFoundException">The file is not found. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Open(System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.</summary>
            <returns>A <see cref="T:System.IO.VirtualFileStream"></see> object opened with the specified mode, access, and sharing options.</returns>
            <param name="share">A <see cref="T:System.IO.FileShare"></see> constant specifying the type of access other VirtualFileStream objects have to this file. </param>
            <param name="mode">A <see cref="T:System.IO.FileMode"></see> constant specifying the mode (for example, Open or Append) in which to open the file. </param>
            <param name="access">A <see cref="T:System.IO.FileAccess"></see> constant specifying whether to open the file with Read, Write, or ReadWrite file access. </param>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.ArgumentNullException">One or more arguments is null. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.ArgumentException">path is empty or contains only white spaces. </exception>
            <exception cref="T:System.IO.IOException">The file is already open. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path is read-only or is a directory. </exception>
            <exception cref="T:System.IO.FileNotFoundException">The file is not found. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.OpenRead">
            <summary>Creates a read-only <see cref="T:System.IO.VirtualFileStream"></see>.</summary>
            <returns>A new read-only <see cref="T:System.IO.VirtualFileStream"></see> object.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.IO.IOException">The file is already open. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path is read-only or is a directory. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.OpenText">
            <summary>Creates a <see cref="T:System.IO.StreamReader"></see> with UTF8 encoding that reads from an existing text file.</summary>
            <returns>A new StreamReader with UTF8 encoding.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path is read-only or is a directory. </exception>
            <exception cref="T:System.IO.FileNotFoundException">The file is not found. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.OpenWrite">
            <summary>Creates a write-only <see cref="T:System.IO.VirtualFileStream"></see>.</summary>
            <returns>A new write-only unshared <see cref="T:System.IO.VirtualFileStream"></see> object.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.UnauthorizedAccessException">path is read-only or is a directory. </exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Replace(System.String,System.String)">
            <summary>Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object, deleting the original file, and creating a backup of the replaced file.</summary>
            <returns>A <see cref="T:System.IO.VirtualFileInfo"></see> object that encapsulates information about the file described by the destFileName parameter.</returns>
            <param name="destFileName">The name of a file to replace with the current file.</param>
            <param name="destBackupFileName">The name of a file with which to create a backup of the file described by the destFileName parameter.</param>
            <exception cref="T:System.IO.FileNotFoundException">The file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object could not be found.-or-The file described by the destBackupFileName parameter could not be found.</exception>
            <exception cref="T:System.ArgumentNullException">The destFileName parameter is null.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.ArgumentException">The path described by the destFileName parameter was not of a legal form.-or-The path described by the destBackupFileName parameter was not of a legal form.</exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Replace(System.String,System.String,System.Boolean)">
            <summary>Replaces the contents of a specified file with the file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object, deleting the original file, and creating a backup of the replaced file.  Also specifies whether to ignore merge errors. </summary>
            <returns>A <see cref="T:System.IO.VirtualFileInfo"></see> object that encapsulates information about the file described by the destFileName parameter.</returns>
            <param name="destFileName">The name of a file to replace with the current file.</param>
            <param name="ignoreMetadataErrors">true to ignore merge errors (such as attributes and ACLs) from the replaced file to the replacement file; otherwise false. </param>
            <param name="destBackupFileName">The name of a file with which to create a backup of the file described by the destFileName parameter.</param>
            <exception cref="T:System.IO.FileNotFoundException">The file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object could not be found.-or-The file described by the destBackupFileName parameter could not be found.</exception>
            <exception cref="T:System.ArgumentNullException">The destFileName parameter is null.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows NT or later.</exception>
            <exception cref="T:System.ArgumentException">The path described by the destFileName parameter was not of a legal form.-or-The path described by the destBackupFileName parameter was not of a legal form.</exception>
            <filterpriority>2</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.SetAccessControl(System.Security.AccessControl.FileSecurity)">
            <summary>Applies access control list (ACL) entries described by a <see cref="T:System.Security.AccessControl.FileSecurity"></see> object to the file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object.</summary>
            <param name="fileSecurity">A <see cref="T:System.Security.AccessControl.FileSecurity"></see> object that describes an access control list (ACL) entry to apply to the current file.</param>
            <exception cref="T:System.PlatformNotSupportedException">The current operating system is not Microsoft Windows 2000 or later.</exception>
            <exception cref="T:System.SystemException">The file could not be found or modified.</exception>
            <exception cref="T:System.ArgumentNullException">The fileSecurity parameter is null.</exception>
            <exception cref="T:System.UnauthorizedAccessException">The current process does not have access to open the file.</exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.ToString">
            <summary>Returns the path as a string.</summary>
            <returns>A string representing the path.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.GetReference(System.String)">
            <summary>
            Gets the reference.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Directory">
            <summary>Gets an instance of the parent directory.</summary>
            <returns>A <see cref="T:System.IO.VirtualDirectoryInfo"></see> object representing the parent directory of this file.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.DirectoryName">
            <summary>Gets a string representing the directory's full path.</summary>
            <returns>A string representing the directory's full path.</returns>
            <exception cref="T:System.ArgumentNullException">null was passed in for the directory name. </exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Exists">
            <summary>Gets a value indicating whether a file exists.</summary>
            <returns>true if the file exists; false if the file does not exist or if the file is a directory.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.IsReadOnly">
            <summary>Gets or sets a value that determines if the current file is read only.</summary>
            <returns>true if the current file is read only; otherwise, false.</returns>
            <exception cref="T:System.UnauthorizedAccessException">The file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object is read-only.-or- This operation is not supported on the current platform.-or- The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred while opening the file.</exception>
            <exception cref="T:System.IO.FileNotFoundException">The file described by the current <see cref="T:System.IO.VirtualFileInfo"></see> object could not be found.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Length">
            <summary>Gets the size of the current file.</summary>
            <returns>The size of the current file.</returns>
            <exception cref="T:System.IO.IOException"><see cref="M:System.IO.VirtualFileSystemInfo.Refresh"></see> cannot update the state of the file or directory. </exception>
            <exception cref="T:System.IO.FileNotFoundException">The file does not exist.-or- The Length property is called for a directory. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.Name">
            <summary>Gets the name of the file.</summary>
            <returns>The name of the file.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo.NodeTypeId">
            <summary>
            Gets the node type id.
            </summary>
            <value>The node type id.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinFactory">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinFactory.mobjComponentTypeSkin">
            <summary>
            The instance type to skin mapping
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinFactory.mobjSkinInstances">
            <summary>
            The skin type to instance mapping
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinFactory.mobjLockInstaceSkinCreation">
            <summary>
            Provides locking capabilities when creating a sking for the instance
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinFactory.mobjLockSkinCreation">
            <summary>
            Provides locking capabilities when creating a skin
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinFactory.mobjConfig">
            <summary>
            The application configuration
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinFactory.mobjSkinDataStore">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Forms.Skins.Skin"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetSkinDependedTypes(System.Type)">
            <summary>
            Gets the skin depended types.
            </summary>
            <param name="objSkinType">The skin type.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetSkin(Gizmox.WebGUI.Forms.Skins.ISkinable)">
            <summary>
            Gets the skin for the specified instance.
            </summary>
            <param name="objSkinable">The obj skinable.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetSkinType(System.Type)">
            <summary>
            Gets the skin type from the component type
            </summary>
            <param name="objComponentType">The component type.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetTheme(System.String)">
            <summary>
            Gets the theme.
            </summary>
            <param name="strThemeName">Gets the theme from a theme name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.InitializeResources(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Initializes the skin resources of the current context.
            </summary>
            <param name="objContext">The context.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetSkinResourcePath(System.Type,System.String)">
            <summary>
            Gets the full skin resource path.
            </summary>
            <param name="objSkinType">Type of the obj skin.</param>
            <param name="strResourceName">Name of the STR resource.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetSkinResourcesList(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the skin resources list.
            </summary>
            <param name="objContext">The context.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.WriteSkinResource(Gizmox.WebGUI.Common.Interfaces.IContext,System.Web.HttpResponse,System.String)">
            <summary>
            Writes the skin resource.
            </summary>
            <param name="objContext">The context.</param>
            <param name="objResponse">The response object.</param>
            <param name="strResourceName">The resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.WriteSkinResource(Gizmox.WebGUI.Common.Interfaces.IContext,System.IO.Stream,System.String)">
            <summary>
            Writes the skin resource.
            </summary>
            <param name="objContext">The context.</param>
            <param name="objOutputStream">The stream to write to.</param>
            <param name="strResourceName">The resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.WriteSkinManifest(Gizmox.WebGUI.Common.Interfaces.IContext,System.Web.HttpResponse)">
            <summary>
            Writes the skin manifest.
            </summary>
            <param name="objContext">The context.</param>
            <param name="objResponse">The response object.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.WriteSkinManifest(Gizmox.WebGUI.Common.Interfaces.IContext,System.IO.Stream)">
            <summary>
            Writes the skin manifest.
            </summary>
            <param name="objContext">The context.</param>
            <param name="objOutputStream">The output stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetSkinMethod(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent,System.String)">
            <summary>
            Gets the skin method.
            </summary>
            <param name="objContext">The context.</param>
            <param name="objComponent">The component.</param>
            <param name="strMember">The member.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetType(System.String)">
            <summary>
            Get type name
            </summary>
            <param name="strName"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetTypeName(System.String,System.Boolean)">
            <summary>
            Gets type name from name and adds the skin namespace if required
            </summary>
            <param name="name">The name.</param>
            <param name="blnIsResources">if set to <c>true</c> [BLN is resources].</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetFullCommonType(System.String)">
            <summary>
            Gets the full type name of a common type.
            </summary>
            <param name="strTypeName">The type name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinFactory.GetSkinTypeByResourceNamespace(System.String)">
            <summary>
            Gets the skin type by resource namespace.
            </summary>
            <param name="strResourceNamespace">The resource namespace.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinFactory.DataStore">
            <summary>
            Gets the data store.
            </summary>
            <value>The data store.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinFactory.StaticExtension">
            <summary>
            Gets the static extension.
            </summary>
            <value>The static extension.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinCollectorController.mobjContext">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinCollectorController.mobjConfig">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinCollectorController.mobjTranslator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinCollectorController.#ctor(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Configuration.Config)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinCollectorController"/> class.
            </summary>
            <param name="objContext">The current context.</param>
            <param name="objConfig">The application config.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinCollectorController.Presentation">
            <summary>
            Gets the presentation.
            </summary>
            <value>The presentation.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinCollectorController.PresentationEngine">
            <summary>
            Gets the presentation engine.
            </summary>
            <value>The presentation engine.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinCollectorController.PresetnationCapabilities">
            <summary>
            Gets the presetnation capabilities.
            </summary>
            <value>The presetnation capabilities.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinCollectorController.Translator">
            <summary>
            Gets the translator.
            </summary>
            <value>The translator.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.ValueResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.ValueResource.mobjValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ValueResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.ValueResource"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ValueResource.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.ValueResource"/> class.
            </summary>
            <param name="objValue">The resource value.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ValueResource.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ValueResource.Presentation">
            <summary>
            Gets or sets the presentation.
            </summary>
            <value>The presentation.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.ValueResource.PresentationEngine">
            <summary>
            Gets or sets the presentation engine.
            </summary>
            <value>The presentation engine.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ISealedComponent">
            <summary>
            Summary description for ISealedComponent.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IAttributeWriter">
            <summary>
            Summary description for IAttributeWriter.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IAttributeWriter.WriteAttributeString(System.String,System.String)">
            <summary>
            Writes the attribute string.
            </summary>
            <param name="strAttribute">The STR attribute.</param>
            <param name="strValue">The STR value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IAttributeWriter.WriteAttributeString(System.String,System.Int32)">
            <summary>
            Writes the attribute string.
            </summary>
            <param name="strAttribute">The STR attribute.</param>
            <param name="intValue">The int value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IAttributeWriter.WriteAttributeString(System.String,System.Boolean)">
            <summary>
            Writes the attribute string.
            </summary>
            <param name="strAttribute">The STR attribute.</param>
            <param name="blnValue">if set to <c>true</c> [BLN value].</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IAttributeWriter.WriteAttributeString(System.String,System.Double)">
            <summary>
            Writes the attribute string.
            </summary>
            <param name="strAttribute">The STR attribute.</param>
            <param name="dblValue">The DBL value.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IAttributeExtender">
            <summary>
            Defines generic attribute container capabilities
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IAttributeExtender.SetAttribute(System.String,System.String)">
            <summary>
            Sets an attribute to the container
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IAttributeExtender.GetAttribute(System.String)">
            <summary>
            Gets an attribute from the container
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IAttributeExtender.RenderAttributes(Gizmox.WebGUI.Common.Interfaces.IAttributeWriter)">
            <summary>
            Writes the container attributes to an IAttributeWriter
            </summary>
            <param name="attributeWriter"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IAttributeExtender.RenderUpdatedAttributes(Gizmox.WebGUI.Common.Interfaces.IAttributeWriter,System.Int64)">
            <summary>
            Renders the updated attributes.
            </summary>
            <param name="objWriter">The writer.</param>
            <param name="lngRequestID">The request ID.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ThemeFonts">
            <summary>
            Specifies the fonts used to display text in Windows display elements.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThemeFonts.CaptionFont">
            <summary>
            Gets the caption font that is used to display text in the title bars
            </summary>
            <value>The caption font.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThemeFonts.DefaultFont">
            <summary>
            Gets the default font that applications can use for dialog boxes and forms.
            </summary>
            <value>
            The default System.Drawing.Font of the system. The value returned will vary
            depending on the user's operating system and the local culture setting of
            their system.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThemeFonts.DialogFont">
            <summary>
            Gets the dialog font that applications can use for dialog boxes and forms.
            </summary>
            <value> A System.Drawing.Font that can be used for dialog boxes and forms, depending
                on the operating system and local culture setting of the system.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThemeFonts.IconTitleFont">
            <summary>
            Gets the icon title font  that is used for icon titles.
            </summary>
            <value>The icon title font.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThemeFonts.MenuFont">
            <summary>
            Gets the menu font that is used for menus.
            </summary>
            <value>The menu font.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThemeFonts.MessageBoxFont">
            <summary>
            Gets the message box font that is used for message boxes.
            </summary>
            <value>The message box font.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThemeFonts.SmallCaptionFont">
            <summary>
            Gets the small caption font that is used to display text in the title bars
                of small windows, such as tool windows.
            </summary>
            <value>The small caption font.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ThemeFonts.StatusFont">
            <summary>
            Gets the status font that is used to display text in the status bar.
            </summary>
            <value>The status font.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.SerializableEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableEvent.mobjCurrentIdByType">
            <summary>
            The current key rolling number
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableEvent.mstrName">
            <summary>
            The property name
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableEvent.mobjHandlerType">
            <summary>
            The handler type
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableEvent.mobjOwnerType">
            <summary>
            The handler owner type
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.SerializableEvent.mintKey">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableEvent.#ctor(System.Int32,System.String,System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.SerializableEvent"/> class.
            </summary>
            <param name="intKey">The int key.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableEvent.Register(System.String,System.Type,System.Type)">
            <summary>
            Creates the serializable event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableEvent.GeneratePropertyId(System.Type)">
            <summary>
            Generates the property id.
            </summary>
            <param name="objOwnerType">The property owner type.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.SerializableEvent.GetFirstTypeGeneratedId(System.Type)">
            <summary>
            Gets the first type id.
            </summary>
            <param name="objType">The type to get its first id.</param>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableEvent.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableEvent.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableEvent.HandlerType">
            <summary>
            Gets the handler type.
            </summary>
            <value>The handler type.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.SerializableEvent.OwnerType">
            <summary>
            Gets the owner type.
            </summary>
            <value>The owner type.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.KeysConverter">
            <summary>Provides a <see cref="T:System.ComponentModel.TypeConverter"></see> to convert <see cref="T:Gizmox.WebGUI.Forms.Keys"></see> objects to and from other representations.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns a value indicating whether this converter can convert an object in the specified source type to the native type of the converter using the specified context.</summary>
            <returns>true if the conversion can be performed; otherwise, false.</returns>
            <param name="objContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be null. </param>
            <param name="objSourceType">The <see cref="T:System.Type"></see> to convert from. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Returns a value indicating whether this converter can convert an object in the specified source type to the native type of the converter using the specified context.</summary>
            <returns>true if the conversion can be performed; otherwise, false.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be null. </param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert to. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.KeysConverter.Compare(System.Object,System.Object)">
            <summary>Compares two key values for equivalence.</summary>
            <returns>An integer indicating the relationship between the two parameters.Value Type Condition A negative integer. a is less than b. zero a equals b. A positive integer. a is greater than b. </returns>
            <param name="objFirstValue">An <see cref="T:System.Object"></see> that represents the first key to compare. </param>
            <param name="objSecondValue">An <see cref="T:System.Object"></see> that represents the second key to compare. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts the specified object to the converter's native type.</summary>
            <returns>An object that represents the converted value.</returns>
            <param name="objCulture">A CultureInfo object to provide locale information. </param>
            <param name="objContext">An ITypeDescriptorContext that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be null. </param>
            <param name="objValue">The object to convert. </param>
            <exception cref="T:System.FormatException">An invalid key combination was supplied.-or- An invalid key name was supplied. </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts the specified object to the specified destination type.</summary>
            <returns>An <see cref="T:System.Object"></see> that represents the converted value.</returns>
            <param name="objCulture">A <see cref="T:System.Globalization.CultureInfo"></see> to provide locale information. </param>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be null. </param>
            <param name="objDestinationType">The <see cref="T:System.Type"></see> to convert the object to. </param>
            <param name="objValue">The <see cref="T:System.Object"></see> to convert. </param>
            <exception cref="T:System.ArgumentNullException">destinationType is null.</exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Returns a collection of standard values for the data type that this type converter is designed for when provided with a format context.</summary>
            <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> that holds a standard set of valid values, which can be empty if the data type does not support a standard set of values.</returns>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be null. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Determines if the list of standard values returned from GetStandardValues is an exclusive list using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see>.</summary>
            <returns>true if the collection returned from <see cref="!:Overload:System.Windows.Forms.KeysConverter.GetStandardValues"></see> is an exhaustive list of possible values; otherwise, false if other values are possible. The default implementation for this method always returns false. </returns>
            <param name="objContext">A formatter context. This object can be used to extract additional information about the environment this converter is being invoked from. This may be null, so you should always check. Also, properties on the context object may also return null. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>Gets a value indicating whether this object supports a standard set of values that can be picked from a list.</summary>
            <returns>Always returns true.</returns>
            <param name="objContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context, which can be used to extract additional information about the environment this converter is being invoked from. This parameter or properties of this parameter can be null. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Design.ToolboxItemCategoryAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Design.ToolboxItemCategoryAttribute.mstrCategory">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Design.ToolboxItemCategoryAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Design.ToolboxItemCategoryAttribute"/> class.
            </summary>
            <param name="strCategory">The toolbox item category.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Design.ToolboxItemCategoryAttribute.Category">
            <summary>
            Gets the toolbox item category.
            </summary>
            <value>The toolbox item category.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry">
            <summary>
            Provides <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> objects that represent the root keys in the Windows registry, and static methods to access key/value pairs.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.KeyTypeId">
            <summary>
            The key type guid
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.ValueTypeId">
            <summary>
            The value type guid
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.GetValue(System.String,System.String)">
            <summary>Retrieves the value associated with the specified name, in the specified registry key. If the name is not found in the specified key, returns a default value that you provide, or null if the specified key does not exist. </summary>
            <returns>null if the subkey specified by keyName does not exist; otherwise, the value associated with valueName, or defaultValue if valueName is not found.</returns>
            <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
            <param name="valueName">The name of the name/value pair.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value has been marked for deletion. </exception>
            <exception cref="T:System.ArgumentException">keyName does not begin with a valid registry root. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.GetValue(System.String,System.String,System.Object)">
            <summary>Retrieves the value associated with the specified name, in the specified registry key. If the name is not found in the specified key, returns a default value that you provide, or null if the specified key does not exist. </summary>
            <returns>null if the subkey specified by keyName does not exist; otherwise, the value associated with valueName, or defaultValue if valueName is not found.</returns>
            <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
            <param name="valueName">The name of the name/value pair.</param>
            <param name="defaultValue">The value to return if name does not exist.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value has been marked for deletion. </exception>
            <exception cref="T:System.ArgumentException">keyName does not begin with a valid registry root. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.GetValue(System.String,System.String,System.Object,Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueOptions)">
            <summary>Retrieves the value associated with the specified name, in the specified registry key. If the name is not found in the specified key, returns a default value that you provide, or null if the specified key does not exist. </summary>
            <returns>null if the subkey specified by keyName does not exist; otherwise, the value associated with valueName, or defaultValue if valueName is not found.</returns>
            <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
            <param name="valueName">The name of the name/value pair.</param>
            <param name="defaultValue">The value to return if name does not exist.</param>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key. </exception>
            <exception cref="T:System.IO.IOException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> that contains the specified value has been marked for deletion. </exception>
            <exception cref="T:System.ArgumentException">keyName does not begin with a valid registry root. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="\" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.GetValueKind(Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey,System.String)">
            <summary>
            
            </summary>
            <param name="registryKey"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.GetTypedValue(Gizmox.WebGUI.Virtualization.VirtualNode)">
            <summary>
            Gets the data value.
            </summary>
            <param name="objVirtualNode">The virtual node.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.SetValue(System.String,System.String,System.Object)">
            <summary>Sets the specified name/value pair on the specified registry key. If the specified key does not exist, it is created.</summary>
            <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
            <param name="valueName">The name of the name/value pair.</param>
            <param name="value">The value to be stored.</param>
            <exception cref="T:System.ArgumentException">keyName does not begin with a valid registry root.-or-valueName is longer than the maximum length allowed (255 characters). </exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> is read-only, and thus cannot be written to; for example, it is a root-level node. </exception>
            <exception cref="T:System.ArgumentNullException">value is null. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.SetValue(System.String,System.String,System.Object,Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryValueKind)">
            <summary>Sets the name/value pair on the specified registry key, using the specified registry data type. If the specified key does not exist, it is created.</summary>
            <param name="keyName">The full registry path of the key, beginning with a valid registry root, such as "HKEY_CURRENT_USER".</param>
            <param name="valueKind">The registry data type to use when storing the data.</param>
            <param name="valueName">The name of the name/value pair.</param>
            <param name="value">The value to be stored.</param>
            <exception cref="T:System.ArgumentException">keyName does not begin with a valid registry root.-or-keyName is longer than the maximum length allowed (255 characters).-or- The type of value did not match the registry data type specified by valueKind, therefore the data could not be converted properly. </exception>
            <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys. </exception>
            <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistryKey"></see> is read-only, and thus cannot be written to; for example, it is a root-level node, or the key has not been opened with write access. </exception>
            <exception cref="T:System.ArgumentNullException">value is null. </exception>
            <PermissionSet><IPermission class="System.Security.Permissions.RegistryPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" /></PermissionSet>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.GetRegistryKey(System.String)">
            <summary>
            Gets the registry key.
            </summary>
            <param name="strPath">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.GetRegistryKey(System.String,System.String)">
            <summary>
            Gets the registry key.
            </summary>
            <param name="strPath">The path.</param>
            <param name="strName">The name of the value node.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.GetRegistryKey(Gizmox.WebGUI.Virtualization.VirtualNode,System.String,System.String)">
            <summary>
            Gets the registry key.
            </summary>
            <param name="objRoot">The root.</param>
            <param name="strPath">The path.</param>
            <param name="strName">The name of the value node.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.ImportFromFile(System.String)">
            <summary>
            Imports the specified registry dump.
            </summary>
            <param name="strRegistryDumpPath">The registry dump path.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.Import(System.String)">
            <summary>
            Imports the specified registry dump.
            </summary>
            <param name="strRegistryDump">The registry dump.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.Import(System.IO.TextReader)">
            <summary>
            Imports the specified registry dump.
            </summary>
            <param name="objRegistryDump">The registry dump.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.ClassesRoot">
            <summary>
            Defines the types (or classes) of documents and the properties associated with those types. This field reads the Windows registry base key HKEY_CLASSES_ROOT.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.CurrentConfig">
            <summary>
            Contains configuration information pertaining to the hardware that is not specific to the user. This field reads the Windows registry base key HKEY_CURRENT_CONFIG.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.CurrentUser">
            <summary>
            Contains information about the current user preferences. This field reads the Windows registry base key HKEY_CURRENT_USER 
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.DynData">
            <summary>
            Contains dynamic registry data. This field reads the Windows registry base key HKEY_DYN_DATA.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The operating system is not Windows 98, Windows 98 Second Edition, or Windows Millennium Edition.</exception>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.LocalMachine">
            <summary>
            Contains the configuration data for the local machine. This field reads the Windows registry base key HKEY_LOCAL_MACHINE.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.PerformanceData">
            <summary>
            Contains performance information for software components. This field reads the Windows registry base key HKEY_PERFORMANCE_DATA.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Virtualization.Win32.VirtualRegistry.Users">
            <summary>
            Contains information about the default user configuration. This field reads the Windows registry base key HKEY_USERS.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenContext.mstrTagName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenContext.mobjAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenContext.#ctor(Gizmox.WebGUI.Common.Tokens.TokenContext,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenContext"/> class.
            </summary>
            <param name="objParentContext">The parent context.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenContext.TagName">
            <summary>
            Gets or sets the name of the tag.
            </summary>
            <value>The name of the tag.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Tokens.Xml.XmlTokenContext.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="F:Gizmox.WebGUI.Common.SR.mobjLoader">
            <summary>
            The singltone SR class
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.SR.mobjResources">
            <summary>
            The string resource resource manegar
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.SR.#cctor">
            <summary>
            Creates a new <see cref="T:Gizmox.WebGUI.Common.SR"/> instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.SR.#ctor">
            <summary>
            Creates a new <see cref="T:Gizmox.WebGUI.Common.SR"/> instance.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinResourceReference">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinResourceReference.mstrResourceName">
            <summary>
            The resource name to reference
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinResourceReference.mstrResourceNamespace">
            <summary>
            The resource namespace
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinResourceReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinResourceReference"/> class.
            </summary>
            <param name="strResourceNamespace">The resource namespace.</param>
            <param name="strResourceName">The resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinResourceReference.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinResourceReference"/> class.
            </summary>
            <param name="strResourceData">The resource data.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinResourceReference.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinResourceReference.Resource">
            <summary>
            Gets the resource.
            </summary>
            <value>The resource.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinResourceReference.ResourceName">
            <summary>
            Gets the name of the resource.
            </summary>
            <value>The name of the resource.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinResourceReference.ResourceNamespace">
            <summary>
            Gets the resource namespace.
            </summary>
            <value>The resource namespace.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinResourceReference.ResourceData">
            <summary>
            Gets the resource data.
            </summary>
            <value>The resource data.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.SkinResourceReference.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is empty.
            </summary>
            <value><c>true</c> if this instance is empty; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.ImageResourceReference">
            <summary>
            Provides a way to reference other images with in the skin / theme
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.ImageResourceReference.mobjEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReference.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Forms.Skins.ImageResourceReference"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.ImageResourceReference"/> class.
            </summary>
            <param name="strResourceNamespace">The resource namespace.</param>
            <param name="strResourceName">The resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReference.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.ImageResourceReference"/> class.
            </summary>
            <param name="objResourceOwner">The resource owner.</param>
            <param name="strResourceName">The resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReference.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.ImageResourceReference"/> class.
            </summary>
            <param name="strResourceData">The resource data.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReference.GetValue(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the translated value.
            </summary>
            <param name="objContext">The current context.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReference.op_Implicit(System.String)~Gizmox.WebGUI.Forms.Skins.ImageResourceReference">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Gizmox.WebGUI.Forms.Skins.ImageResourceReference"/>.
            </summary>
            <param name="strResourceData">The resource data.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReference.op_Implicit(Gizmox.WebGUI.Forms.Skins.ImageResourceReference)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:Gizmox.WebGUI.Forms.Skins.ImageResourceReference"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="objResource">The obj resource.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.ImageResourceReference.Resource">
            <summary>
            Gets the resource.
            </summary>
            <value>The resource.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.ImageResourceReference.Empty">
            <summary>
            Gets an empty resoruce reference.
            </summary>
            <value>The empty resoruce reference.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.ImageResourceReferenceTypeConverter">
            <summary>
            Provides a way to browse for skin resources
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReferenceTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReferenceTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReferenceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="destinationType"/> parameter is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReferenceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReferenceTypeConverter.GetSkinFromInstance(System.Object)">
            <summary>
            Gets the skin from instance.
            </summary>
            <param name="objInstance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReferenceTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> should be called to find a common set of values the object supports; otherwise, false.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReferenceTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> is an exhaustive list of possible values; false if other values are possible.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.ImageResourceReferenceTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or null if the data type does not support a standard set of values.
            </returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.TextResourceReference">
            <summary>
            Provides a way to incluse other text resources with in another resource
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.TextResourceReference.mobjEmpty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReference.#cctor">
            <summary>
            Initializes the <see cref="T:Gizmox.WebGUI.Forms.Skins.TextResourceReference"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReference.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.TextResourceReference"/> class.
            </summary>
            <param name="strResourceNamespace">The resource namespace.</param>
            <param name="strResourceName">The resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReference.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.TextResourceReference"/> class.
            </summary>
            <param name="objResourceOwner">The resource owner.</param>
            <param name="strResourceName">The resource name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReference.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.TextResourceReference"/> class.
            </summary>
            <param name="strResourceData">The resource data.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReference.GetValue(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gets the translated value.
            </summary>
            <param name="objContext">The current context.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReference.op_Implicit(System.String)~Gizmox.WebGUI.Forms.Skins.TextResourceReference">
            <summary>
            Performs an implicit conversion from <see cref="T:System.String"/> to <see cref="T:Gizmox.WebGUI.Forms.Skins.TextResourceReference"/>.
            </summary>
            <param name="strResourceData">The resource data.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReference.op_Implicit(Gizmox.WebGUI.Forms.Skins.TextResourceReference)~System.String">
            <summary>
            Performs an implicit conversion from <see cref="T:Gizmox.WebGUI.Forms.Skins.TextResourceReference"/> to <see cref="T:System.String"/>.
            </summary>
            <param name="objResource">The obj resource.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.TextResourceReference.Empty">
            <summary>
            Gets an empty resoruce reference.
            </summary>
            <value>The empty resoruce reference.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.TextResourceReferenceTypeConverter">
            <summary>
            Provides a way to browse for skin resources
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReferenceTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReferenceTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReferenceTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="destinationType"/> parameter is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReferenceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReferenceTypeConverter.GetSkinFromInstance(System.Object)">
            <summary>
            Gets the skin from instance.
            </summary>
            <param name="objInstance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReferenceTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> should be called to find a common set of values the object supports; otherwise, false.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReferenceTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> is an exhaustive list of possible values; false if other values are possible.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.TextResourceReferenceTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or null if the data type does not support a standard set of values.
            </returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.FileContentLoadingException">
            <summary>
            File Content Loading Exception
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.FileContentLoadingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.FileContentLoadingException"/> class.
            </summary>
            <param name="strMessage">The STR message.</param>
            <param name="objInnerException">The obj inner exception.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateCollector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateCollector.WriteStart(System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Performs writing on starting collector serialization
            </summary>
            <param name="objStreamWriter"></param>
            <param name="objController"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateCollector.WriteEnd(System.IO.StreamWriter,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Performs writing on ending collector serialization
            </summary>
            <param name="objStreamWriter"></param>
            <param name="objController"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.SilverlightTemplateCollector.Write(System.Web.HttpResponse,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the resource to the response.
            </summary>
            <param name="objResponse">The response.</param>
            <param name="objController">The controller.</param>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Skins.Resources.Compiler.SkinExpression.mobjBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Skins.Resources.Compiler.SkinExpression.mobjExpression">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Skins.Resources.Compiler.SkinExpression.mobjRegularExpressions">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Skins.Resources.Compiler.SkinExpression.mobjRegularExpressionsLock">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Skins.Resources.Compiler.SkinExpression.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Skins.Resources.Compiler.SkinExpression.AddExpression(System.String)">
            <summary>
            
            </summary>
            <param name="strExpression"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Skins.Resources.Compiler.SkinExpression.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.BinaryCollector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.BinaryCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.BinaryCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.BinaryCollector.Write(System.Web.HttpResponse,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the resources to response.
            </summary>
            <param name="objResponse">The current response.</param>
            <param name="objController">The current controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.BinaryCollector.Write(System.IO.Stream,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the specified obj stream.
            </summary>
            <param name="objStream">The obj stream.</param>
            <param name="objController">The obj controller.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IFormFactory">
            <summary>
            Interface for external main form factoring
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IFormFactory.CreateForm(System.String,System.Object[])">
            <summary>
            Creates the application main form.
            </summary>
            <param name="strCurrentPage">The current page code.</param>
            <param name="arrArguments">The application arguments.</param>
            <returns>A form object that will be the main form of the application.</returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Serialization.SerializableAttributeCollectionWrapper">
            <summary>
            Provides a serialization wrapper for AttributeCollection
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Serialization.SerializableAttributeCollectionWrapper.mobjSerializableAttributes">
            <summary>
            The serializable attribute list
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableAttributeCollectionWrapper.#ctor(System.ComponentModel.AttributeCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableAttributeCollectionWrapper"/> class.
            </summary>
            <param name="objAttributeCollection">The attribute collection.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableAttributeCollectionWrapper.GetInstanceFromData(System.Object)">
            <summary>
            Gets the instance from data.
            </summary>
            <param name="objInstance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableAttributeCollectionWrapper.SaveInstanceData(System.Object)">
            <summary>
            Saves the instance data.
            </summary>
            <param name="objInstance">The instance.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Extensibility.WinCompilerControllerAttribute">
            <summary>
            Defines a controller and control to be used in client mode.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.WinCompilerControllerAttribute.#ctor(System.Type,System.Type)">
            <summary>
            Defines a controller and control to be used in client mode
            </summary>
            <param name="objControllerType">The controller type.</param>
            <param name="objControlType">The control type.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.WinCompilerControllerAttribute.#ctor(System.String,System.String)">
            <summary>
            Defines a controller and control to be used in client mode
            </summary>
            <param name="strControllerType">The controller type.</param>
            <param name="strControlType">The control type.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Extensibility.WinCompilerControllerAttribute.ControllerType">
            <summary>
            Gets the type of the controller.
            </summary>
            <value>The type of the controller.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Extensibility.WinCompilerControllerAttribute.ControlType">
            <summary>
            Gets the type of the control.
            </summary>
            <value>The type of the control.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.SkinTranslator">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.SkinTranslator.mobjContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinTranslator.#ctor(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.SkinTranslator"/> class.
            </summary>
            <param name="objContext">The current context.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinTranslator.GetValue(Gizmox.WebGUI.Common.Interfaces.IContext,System.Object)">
            <summary>
            Translates an unkown type
            </summary>
            <param name="objContext">The current context.</param>
            <param name="objValue">The obj value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinTranslator.GetValue(System.Object)">
            <summary>
            Translates an unkown type
            </summary>
            <param name="objValue">The obj value.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinTranslator.GetColor(Gizmox.WebGUI.Common.Interfaces.IContext,System.Drawing.Color)">
            <summary>
            Returns a web color
            </summary>
            <param name="objColor"></param>
            <param name="objContext"></param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.SkinTranslator.GetFont(Gizmox.WebGUI.Common.Interfaces.IContext,System.Drawing.Font)">
            <summary>
            Gets the web font.
            </summary>
            <param name="objContext"></param>
            <param name="objFont">The font.</param>
            <returns></returns>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IMenu">
            <summary>
            Summary description for IControl.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IMenu.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>The parent.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IMenu.MenuItems">
            <summary>
            Gets the menu items.
            </summary>
            <value>The menu items.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.ICookies">
            <summary>
            	<para>Summary description for ICookies.</para>
            	<para>The coockies context can be accessed through the VWGContext.Current.Cookies
                static context or through the Form.Context.Cookies property and it stores data in
                cookies in web mode and in registry hives in client mode.</para>
            </summary>
            <example>
            	<code lang="CS">
            		<![CDATA[
            //Access the Cookies from form context
            this.Context.Cookies["ParameterName"] = "Value";
             
            //Access the Cookies from the static context 
            VWGContext.Current.Cookies["ParameterName"] = "Value";]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            'Access the Cookies from form context
            Me.Context.Cookies("ParameterName") = "Value"
             
            'Access the Cookies from the static context 
            VWGContext.Current.Cookies("ParameterName") = "Value"]]>
            	</code>
            </example>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.ICookies.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.String"/> with the specified STR key.
            </summary>
            <value></value>
        </member>
        <member name="T:Gizmox.WebGUI.Client.Design.IClientDesignServices">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.FireWebComponentChanged(System.Object,System.String,System.Object,System.Object)">
             <summary>
            
             </summary>
             <param name="objSource"></param>
             <param name="strPropertyName"></param>
             <param name="objOldValue"></param>
             <param name="objNewValue"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.FireWebComponentChanging(System.Object,System.String)">
             <summary>
            
             </summary>
             <param name="objSource"></param>
             <param name="strPropertyName"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.RegisterWinComponent(System.ComponentModel.IComponent)">
             <summary>
            
             </summary>
             <param name="objWinComponent"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.IsRegisteredWinComponent(System.ComponentModel.IComponent)">
             <summary>
            
             </summary>
             <param name="objWinComponent"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.RegisterWinComponent(System.ComponentModel.IComponent,System.String)">
             <summary>
            
             </summary>
             <param name="objWinComponent"></param>
             <param name="strName"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.RegisterWebComponent(System.ComponentModel.IComponent)">
             <summary>
            
             </summary>
             <param name="objWebComponent"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.IsRegisteredWebComponent(System.ComponentModel.IComponent)">
             <summary>
            
             </summary>
             <param name="objWebComponent"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.RegisterWebComponent(System.ComponentModel.IComponent,System.String)">
             <summary>
            
             </summary>
             <param name="objWebComponent"></param>
             <param name="strName"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.RegisterWebComponent(System.ComponentModel.IComponent,System.ComponentModel.IComponent)">
            <summary>
            Registers the web component.
            </summary>
            <param name="objContainerComponent">The container component.</param>
            <param name="objWebComponent">The web component.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.RegisterWebComponent(System.ComponentModel.IComponent,System.ComponentModel.IComponent,System.String)">
            <summary>
            Registers the web component.
            </summary>
            <param name="objContainerComponent">The container component.</param>
            <param name="objWebComponent">The web component.</param>
            <param name="strName">Name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.GetNamedDirecotry(System.String)">
            <summary>
            Gets the full path of a named direcotry.
            </summary>
            <param name="strDirectoryName">The directory name.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.UnregisterWebComponent(System.ComponentModel.IComponent)">
             <summary>
            
             </summary>
             <param name="objWebComponent"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.UnregisterWinComponent(System.ComponentModel.IComponent)">
             <summary>
            
             </summary>
             <param name="objWinComponent"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.SelectWebComponent(System.ComponentModel.IComponent)">
             <summary>
            
             </summary>
             <param name="objWebComponent"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.GetSelectedWebComponents">
             <summary>
            
             </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.GetSelectedWinComponents">
             <summary>
            
             </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.GetConfiguration">
            <summary>
            Gets the configuration instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Client.Design.IClientDesignServices.RefreshDesigner">
            <summary>
            Updates and synchronizes the designer
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Gateways.StaticGateway">
            <summary>
            	<span class="Forum_Normal" id="spBody">Static Gateways - The new gateway provides
            a way to define a gateway with out the need to have a binded component. Static gateways
            have a constant URL which makes them excellent for caching and other service oriented
            services.</span>
            </summary>
            <example>
            	<code lang="CS">
            		<![CDATA[
            public class MyClass : IStaticGateway
                {
             
                    private string FirstName
                    {
                        get
                        {
                            return HttpContext.Current.Request.QueryString["fn"];
                        }
                    }
             
                    private string LastName
                    {
                        get
                        {
                            return HttpContext.Current.Request.QueryString["ln"];
                        }
                    }
             
                    #region IStaticGateway Members
             
                    public IStaticGatewayHandler GetGatewayHandler(IContext objContext)
                    {
                        string strContent = @"<html xmlns=""http:////www.w3.org//1999//xhtml"" ><head><title></title></head><body><p>FirstName: " + FirstName
             
                            + "</br>LastName: " + LastName + "</p></body></html>";
                        objContext.HttpContext.Response.Cache.SetCacheability(HttpCacheability.ServerAndPrivate);
                        objContext.HttpContext.Response.ExpiresAbsolute = DateTime.Now.AddMonths(6);
             
                        objContext.HttpContext.Response.Write(strContent);
                        return null;
             
                    }
             
                    #endregion
                }]]>
            	</code>
            	<code lang="VB">
            		<![CDATA[
            public class MyClass : IStaticGateway
                {
             
                    private string FirstName
                    {
                        get
                        {
                            return HttpContext.Current.Request.QueryString["fn"];
                        }
                    }
             
                    private string LastName
                    {
                        get
                        {
                            return HttpContext.Current.Request.QueryString["ln"];
                        }
                    }
             
                    #region IStaticGateway Members
             
                    public IStaticGatewayHandler GetGatewayHandler(IContext objContext)
                    {
                        string strContent = @"<html xmlns=""http:////www.w3.org//1999//xhtml"" ><head><title></title></head><body><p>FirstName: " + FirstName
             
                            + "</br>LastName: " + LastName + "</p></body></html>";
                        objContext.HttpContext.Response.Cache.SetCacheability(HttpCacheability.ServerAndPrivate);
                        objContext.HttpContext.Response.ExpiresAbsolute = DateTime.Now.AddMonths(6);
             
                        objContext.HttpContext.Response.Write(strContent);
                        return null;
             
                    }
             
                    #endregion
                }]]>
            	</code>
            </example>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.StaticGateway.#ctor(Gizmox.WebGUI.Common.Interfaces.IContext)">
            <summary>
            Gateway constructor 
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Gateways.StaticGateway.ProcessRequest(System.Web.HttpContext)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Gateways.StaticGateway.IsReusable">
            <summary>
            Indicates that the request object can be pooled.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.AttributeType">
            <summary>
            Attribute Types
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.Redraw">
            <summary>
            Redraw
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.Layout">
            <summary>
            Layout
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.Visual">
            <summary>
            Visual
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.Control">
            <summary>
            Control
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.ToolTip">
            <summary>
            ToolTip
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.Drag">
            <summary>
            Drag
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.Enabled">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.Extended">
            <summary>
            Extended
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.AttributeType.All">
            <summary>
            All
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.EventTypes">
            <summary>
            Client events enumerator
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.Click">
            <summary>
            Compnent click event
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.DoubleClick">
            <summary>
            Component double click event
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.KeyDown">
            <summary>
            Component key down event
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.ValueChange">
            <summary>
            Component value change event
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.GotFocus">
            <summary>
            Control has received focus
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.LostFocus">
            <summary>
            Control has lost focus
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.CheckedChange">
            <summary>
            Item checkbox/es status was changed
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.SizeChange">
            <summary>
            Item size was changed
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.EnterKeyDown">
            <summary>
            Enter key down event
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.LocationChange">
            <summary>
            Item location was changed
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.Expand">
            <summary>
            Item was expanded
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.Collapse">
            <summary>
            Item was collapsed
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.SelectionChange">
            <summary>
            Item selection changed
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.ContentClick">
            <summary>
            Cell content clicked.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.ContentDoubleClick">
            <summary>
            Cell content double clicked.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.RowHeaderMouseClick">
            <summary>
            Cell row header clicked.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.CellBeginEdit">
            <summary>
            DataGridView Cell begin edit.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.CellEndEdit">
            <summary>
            DataGridView Cell end edit.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.DragDrop">
            <summary>
            Drag and drop event.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.RowHeaderMouseDoubleClick">
            <summary>
            Row header mouse double click event.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.AfterLabelEdit">
            <summary>
            After label edit event.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.CellEnter">
            <summary>
            After cell was entered (selected).
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.ChangeColumnWidth">
            <summary>
            After column width has changed.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.RightClick">
            <summary>
             Right click event.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.EventTypes.Closed">
            <summary>
            Closed event.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ComponentBase">
            <summary>
            Simple component provides a serializable component base class
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.ComponentBase.DisposedEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ComponentBase.Dispose">
            <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Component"></see>.</summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ComponentBase.Dispose(System.Boolean)">
            <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"></see> and optionally releases the managed resources.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ComponentBase.Finalize">
            <summary>Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.ComponentModel.Component"></see> is reclaimed by garbage collection.</summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ComponentBase.GetService(System.Type)">
            <summary>Returns an object that represents a service provided by the <see cref="T:System.ComponentModel.Component"></see> or by its <see cref="T:System.ComponentModel.Container"></see>.</summary>
            <returns>An <see cref="T:System.Object"></see> that represents a service provided by the <see cref="T:System.ComponentModel.Component"></see>, or null if the <see cref="T:System.ComponentModel.Component"></see> does not provide the specified service.</returns>
            <param name="service">A service provided by the <see cref="T:System.ComponentModel.Component"></see>. </param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.ComponentBase.ToString">
            <summary>Returns a <see cref="T:System.String"></see> containing the name of the <see cref="T:System.ComponentModel.Component"></see>, if any. This method should not be overridden.</summary>
            <returns>A <see cref="T:System.String"></see> containing the name of the <see cref="T:System.ComponentModel.Component"></see>, if any, or null if the <see cref="T:System.ComponentModel.Component"></see> is unnamed.</returns>
        </member>
        <member name="E:Gizmox.WebGUI.Forms.ComponentBase.Disposed">
            <summary>Adds an event handler to listen to the <see cref="E:System.ComponentModel.Component.Disposed"></see> event on the component.</summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ComponentBase.CanRaiseEvents">
            <summary>Gets a value indicating whether the component can raise an event.</summary>
            <returns>true if the component can raise events; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ComponentBase.Container">
            <summary>Gets the <see cref="T:System.ComponentModel.IContainer"></see> that contains the <see cref="T:System.ComponentModel.Component"></see>.</summary>
            <returns>The <see cref="T:System.ComponentModel.IContainer"></see> that contains the <see cref="T:System.ComponentModel.Component"></see>, if any, or null if the <see cref="T:System.ComponentModel.Component"></see> is not encapsulated in an <see cref="T:System.ComponentModel.IContainer"></see>.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ComponentBase.DesignMode">
            <summary>Gets a value that indicates whether the <see cref="T:System.ComponentModel.Component"></see> is currently in design mode.</summary>
            <returns>true if the <see cref="T:System.ComponentModel.Component"></see> is in design mode; otherwise, false.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.ComponentBase.Site">
            <summary>Gets or sets the <see cref="T:System.ComponentModel.ISite"></see> of the <see cref="T:System.ComponentModel.Component"></see>.</summary>
            <returns>The <see cref="T:System.ComponentModel.ISite"></see> associated with the <see cref="T:System.ComponentModel.Component"></see>, if any. null if the <see cref="T:System.ComponentModel.Component"></see> is not encapsulated in an <see cref="T:System.ComponentModel.IContainer"></see>, the <see cref="T:System.ComponentModel.Component"></see> does not have an <see cref="T:System.ComponentModel.ISite"></see> associated with it, or the <see cref="T:System.ComponentModel.Component"></see> is removed from its <see cref="T:System.ComponentModel.IContainer"></see>.</returns>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.IFilteredCompoenent">
            <summary>
            Filters a component from the designer property grid or surface
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.RegisteredComponent">
            <summary>Provides the base implementation for the <see cref="T:System.ComponentModel.IComponent"></see> interface and enables object sharing between applications.</summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.RegisteredComponent.IsRegisteredProperty">
            <summary>
            The bool property registration.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.RegisteredComponent.LastModifiedProperty">
            <summary>
            The long property registration.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.RegisteredComponent.LastModifiedParamsProperty">
            <summary>
            The long property registration.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.RegisteredComponent.LastModifiedParamsTypeProperty">
            <summary>
            The AttributeType property registration.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.RegisteredComponent"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.Update">
            <summary>
            Full updates of this instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.Update(System.Boolean)">
            <summary>
            Redraw only
            </summary>
            <param name="blnRedrawOnly"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.UpdateParams">
            <summary>
            Updates only the parameters of this instance.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.UpdateParams(Gizmox.WebGUI.Forms.AttributeType)">
            <summary>
            Updates the params.
            </summary>
            <param name="enmParams">The enm params.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.IsDirty(System.Int64)">
            <summary>
            Determines whether the specified component is dirty.
            </summary>
            <param name="lngRequestID">Request ID.</param>
            <returns>
            	<c>true</c> if the specified component is dirty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.IsDirtyAttributes(System.Int64)">
            <summary>
            Determines whether the specified component is dirty.
            </summary>
            <param name="lngRequestID">Request ID.</param>
            <returns>
            	<c>true</c> if the specified component is dirty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.IsDirtyAttributes(System.Int64,Gizmox.WebGUI.Forms.AttributeType)">
            <summary>
            Determines whether [is dirty attributes] [the specified LNG request ID].
            </summary>
            <param name="lngRequestID">The LNG request ID.</param>
            <param name="enmParams">The enm params.</param>
            <returns>
            	<c>true</c> if [is dirty attributes] [the specified LNG request ID]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.GetCriticalEvents">
            <summary>
            Gets the critical events.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.RenderComponentEventAttributes(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IAttributeWriter)">
            <summary>
            Renders the component event attributes.
            </summary>
            <param name="objContext">context.</param>
            <param name="objWriter">writer.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.RenderClientUpdateHandler(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IAttributeWriter)">
            <summary>
            Renders the client update handler.
            </summary>
            <param name="objContext">The current context.</param>
            <param name="objWriter">The attribute writer.</param>
            <remarks>
            When you render a client update handler client UI updating is routed through
            this client method if available. The client method can then decide if it handles
            the client updating or it lets the default renderer do the job.
            </remarks>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.FireEvent(Gizmox.WebGUI.Common.Interfaces.IEvent)">
            <summary>
            Fires an event.
            </summary>
            <param name="objEvent">event.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.InvokeMethod(System.String,System.Object[])">
            <summary>
            Invokes a client side method from the component scope with arguments
            </summary>
            <param name="strMember">The client side method name</param>
            <param name="arrArgs">The arugments to be passed to the method</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.InvokeScript(System.String)">
            <summary>
            Invokes JavaScript code in the client.
            </summary>
            <param name="strJavaScriptCode">The JavaScript code to execute.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.InvokeMethodWithId(System.String,System.Object[])">
            <summary>
            Invokes a client side method from the component scope with arguments (Adds component id as the first parameter)
            </summary>
            <param name="strMember">The client side method name</param>
            <param name="arrArgs">The arugments to be passed to the method</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.DoInvokeMethod(System.String,System.Object[])">
            <summary>
            Does the invoke method.
            </summary>
            <param name="strMember">The STR member.</param>
            <param name="arrArgs">The arr args.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.RegisterSelf">
            <summary>
            Registers the control if needed.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.UnRegisterSelf">
            <summary>
            UnRegisters the self.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.RegisterBatch(System.Collections.ICollection)">
            <summary>
            Registers a batch.
            </summary>
            <param name="objCollection">Obj collection.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.UnRegisterBatch(System.Collections.ICollection)">
            <summary>
            Unregister a batch.
            </summary>
            <param name="objCollection">Obj collection.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.RegisterComponent(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent)">
            <summary>
            Register a component.
            </summary>
            <param name="objComponent">Component.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.UnRegisterComponent(Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent)">
            <summary>
            Unregister a component.
            </summary>
            <param name="objComponent">Component.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.OnUnregisterComponents">
            <summary>
            Called when [unregister components].
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.Gizmox#WebGUI#Common#Interfaces#IRegisteredComponent#RegisterContextMenu">
            <summary>
            Registers the component context menu.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.Gizmox#WebGUI#Common#Interfaces#IRegisteredComponent#UnregisterContextMenu">
            <summary>
            Unregister the component context menu
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.RegisterContextMenu">
            <summary>
            Registers the context menu.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.UnregisterContextMenu">
            <summary>
            Unregisters the context menu.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.RegisteredComponent.IdProperty">
            <summary>
            The long property registration.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.Gizmox#WebGUI#Common#Interfaces#IGatewayComponent#ProcessRequest(Gizmox.WebGUI.Common.Interfaces.IContext,System.String)">
            <summary>
            Provides a way to custom handle requests.
            </summary>
            <param name="objContext">The request context.</param>
            <param name="strAction">The request action.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.ProcessGatewayRequest(System.Web.HttpContext,System.String)">
            <summary>
            Provides a way to handle gateway requests.
            </summary>
            <param name="objHttpContext">The gateway request HTTP context.</param>
            <param name="strAction">The gateway request action.</param>
            <remarks>
            This method is called from the implementation of IGatewayComponent which replaces the 
            IGatewayControl interface. The IGatewayCompoenent is implemented by default in the
            RegisteredComponent class which is the base class of most of the Visual WebGui 
            components.
            
            Referencing a RegisterComponent that overrides this method is done the same way that 
            a control implementing IGatewayControl, which is by using the GatewayReference class.
            </remarks>
            <returns>
            By default this method returns a instance of a class which implements the IGatewayHandler and
            throws a non implemented HttpException.
            </returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredComponent.LastModified">
            <summary>
            Indicates last render identifiers
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredComponent.LastModifiedParams">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredComponent.LastModifiedParamsType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredComponent.IsEventsEnabled">
            <summary>
            This is a recursive function that loop through a control and all of its parents
            cheching if one of the controls(and control containers) is hidden or
            disabled.
            </summary>
            <value>
            	<c>true</c> if this instance is events enabled; otherwise, <c>false</c>.
            </value>        
            <returns>false if one of the controls is hidden or disabled.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredComponent.Context">
            <summary>
            Gets the current application context.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredComponent.Session">
            <summary>
            Gets the application object.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredComponent.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value>
            	<c>true</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredComponent.IsRegistered">
            <summary>
            Gets a value indicating whether this instance is registered.
            </summary>
            <value>
            	<c>true</c> if this instance is registered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredComponent.ID">
            <summary>
            Gets the GUID.
            </summary>
            <value></value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.RegisteredComponent.ClientUpdateHandler">
            <summary>
            Gets the update handler.
            </summary>
            <value>The update handler.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.RegisteredComponent.NotImplementedGateway">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.RegisteredComponent.NotImplementedGateway.ProcessGatewayRequest(Gizmox.WebGUI.Common.Interfaces.IContext,Gizmox.WebGUI.Common.Interfaces.IRegisteredComponent)">
            <summary>
            Processes the gateway request.
            </summary>
            <param name="objContext">The obj context.</param>
            <param name="objComponent">The obj component.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.CheckState">
            <summary>
            Defines Check State
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.CheckState.Checked">
            <summary>
            Checked
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.CheckState.Indeterminate">
            <summary>
            Indeterminate
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.CheckState.Unchecked">
            <summary>
            Unchecked
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.LinkWindowStyle">
            <summary>
            Defines Link Window Style
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.LinkWindowStyle.Normal">
            <summary>
            LinkWindowStyle Normal
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.LinkWindowStyle.ModalWindow">
            <summary>
            LinkWindowStyle ModalWindow
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.LinkWindowStyle.ModalessWindow">
            <summary>
            LinkWindowStyle ModalessWindow
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.ExecutionMode">
            <summary>
            Defines application execution mode
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.ExecutionMode.Client">
            <summary>
            The application is running in client mode
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.ExecutionMode.Web">
            <summary>
            The application is running in web mode
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.DialogResult">
            <summary>
            Defines DialogResult
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.DialogResult.Abort">
            <summary>
            Abort
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.DialogResult.Cancel">
            <summary>
            Cancel
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.DialogResult.Ignore">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.DialogResult.No">
            <summary>
            No
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.DialogResult.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.DialogResult.OK">
            <summary>
            OK
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.DialogResult.Retry">
            <summary>
            Retry
            </summary>        
        </member>
        <member name="F:Gizmox.WebGUI.Forms.DialogResult.Yes">
            <summary>
            Yes
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.KeyFilter">
            <summary>Specifies key codes and modifiers.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.All">
            <summary>KeyFilter enumeration 
            Used to filter event firing for KeyDown, KeyUp and KeyPrees.
            KeyFilter.All fires the key events for any key.
            The other values fires the key events only for the indicated key.
            The values can be combined in a bit mask.
            </summary>
            <filterpriority>1</filterpriority>
            
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Alt">
            <summary>The ALT modifier key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Control">
            <summary>The CTRL modifier key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Delete">
            <summary>The DEL key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Down">
            <summary>The DOWN ARROW key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.End">
            <summary>The END key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Escape">
            <summary>The ESC key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F1">
            <summary>The F1 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F2">
            <summary>The F2 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F3">
            <summary>The F3 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F4">
            <summary>The F4 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F5">
            <summary>The F5 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F6">
            <summary>The F6 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F7">
            <summary>The F7 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F8">
            <summary>The F8 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F9">
            <summary>The F9 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F10">
            <summary>The F10 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F11">
            <summary>The F11 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.F12">
            <summary>The F12 key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Home">
            <summary>The HOME key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Insert">
            <summary>The INS key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Left">
            <summary>The LEFT ARROW key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.PageDown">
            <summary>The PAGE DOWN key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.PageUp">
            <summary>The PAGE UP key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Right">
            <summary>The RIGHT ARROW key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Shift">
            <summary>The SHIFT modifier key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Up">
            <summary>The UP ARROW key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.KeyFilter.Enter">
            <summary>The ENTER key.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Keys">
            <summary>
            Keys enumeration
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.A">
            <summary>
            A Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Add">
            <summary>
            Add Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Alt">
            <summary>
            Alt Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Apps">
            <summary>
            Apps Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Attn">
            <summary>
            Attn Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.B">
            <summary>
            B Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Back">
            <summary>
            Back Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.BrowserBack">
            <summary>
            BrowserBack Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.BrowserFavorites">
            <summary>
            BrowserFavorites Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.BrowserForward">
            <summary>
            BrowserForward Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.BrowserHome">
            <summary>
            BrowserHome Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.BrowserRefresh">
            <summary>
            BrowserRefresh Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.BrowserSearch">
            <summary>
            BrowserSearch Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.BrowserStop">
            <summary>
            BrowserStop Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.C">
            <summary>
            C Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Cancel">
            <summary>
            Cancel Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Capital">
            <summary>
            Capital Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.CapsLock">
            <summary>
            CapsLock Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Clear">
            <summary>
            Clear Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Control">
            <summary>
            Control Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.ControlKey">
            <summary>
            ControlKey Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Crsel">
            <summary>
            Crsel Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D">
            <summary>
            D Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D0">
            <summary>
            D0 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D1">
            <summary>
            D1 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D2">
            <summary>
            D2 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D3">
            <summary>
            D3 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D4">
            <summary>
            D4 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D5">
            <summary>
            D5 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D6">
            <summary>
            D6 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D7">
            <summary>
            D7 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D8">
            <summary>
            D8 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.D9">
            <summary>
            D9 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Decimal">
            <summary>
            Decimal Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Delete">
            <summary>
            Delete Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Divide">
            <summary>
            Divide Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Down">
            <summary>
            Down Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.E">
            <summary>
            E Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.End">
            <summary>
            End Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Enter">
            <summary>
            Enter Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.EraseEof">
            <summary>
            EraseEof Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Escape">
            <summary>
            Escape Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Execute">
            <summary>
            Execute Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Exsel">
            <summary>
            Exsel Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F">
            <summary>
            F Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F1">
            <summary>
            F1 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F10">
            <summary>
            F10 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F11">
            <summary>
            F11 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F12">
            <summary>
            F12 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F13">
            <summary>
            F13 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F14">
            <summary>
            F14 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F15">
            <summary>
            F15 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F16">
            <summary>
            F16Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F17">
            <summary>
            F17 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F18">
            <summary>
            F18 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F19">
            <summary>
            F19 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F2">
            <summary>
            F2 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F20">
            <summary>
            F20 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F21">
            <summary>
            F21 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F22">
            <summary>
            F22 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F23">
            <summary>
            F23 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F24">
            <summary>
            F24 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F3">
            <summary>
            F3 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F4">
            <summary>
            F4 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F5">
            <summary>
            F5 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F6">
            <summary>
            F6 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F7">
            <summary>
            G7 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F8">
            <summary>
            F8 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.F9">
            <summary>
            F9 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.FinalMode">
            <summary>
            FinalMode Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.G">
            <summary>
            G Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.H">
            <summary>
            H Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.HanguelMode">
            <summary>
            HanguelMode Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.HangulMode">
            <summary>
            HangulMode Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.HanjaMode">
            <summary>
            HanjaMode Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Help">
            <summary>
            Help Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Home">
            <summary>
            Home Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.I">
            <summary>
            I Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.IMEAceept">
            <summary>
            IMEAceept Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.IMEConvert">
            <summary>
            IMEConvert Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.IMEModeChange">
            <summary>
            IMEModeChange Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.IMENonconvert">
            <summary>
            IMENonconvert Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Insert">
            <summary>
            Insert Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.J">
            <summary>
            J Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.JunjaMode">
            <summary>
            JunjaMode Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.K">
            <summary>
            K Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.KanaMode">
            <summary>
            KanaMode Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.KanjiMode">
            <summary>
            KanjiMode Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.KeyCode">
            <summary>
            KeyCode Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.L">
            <summary>
            L Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.LaunchApplication1">
            <summary>
            LaunchApplication1 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.LaunchApplication2">
            <summary>
            LaunchApplication2 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.LaunchMail">
            <summary>
            LaunchMail Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.LButton">
            <summary>
            LButton Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.LControlKey">
            <summary>
            LControlKey Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Left">
            <summary>
            Left Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.LineFeed">
            <summary>
            LineFeed Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.LMenu">
            <summary>
            LMenu Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.LShiftKey">
            <summary>
            LShiftKey Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.LWin">
            <summary>
            LWin Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.M">
            <summary>
            M Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.MButton">
            <summary>
            MButton Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.MediaNextTrack">
            <summary>
            MediaNextTrack Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.MediaPlayPause">
            <summary>
            MediaPlayPause Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.MediaPreviousTrack">
            <summary>
            MediaPreviousTrack Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.MediaStop">
            <summary>
            MediaStop Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Menu">
            <summary>
            Menu Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Modifiers">
            <summary>
            Modifiers Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Multiply">
            <summary>
            Multiply Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.N">
            <summary>
            N Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Next">
            <summary>
            Next Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NoName">
            <summary>
            NoName Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.None">
            <summary>
            None Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumLock">
            <summary>
            NumLock Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumPad0">
            <summary>
            NumPad0 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumPad1">
            <summary>
            NumPad1 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumPad2">
            <summary>
            NumPad2 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumPad3">
            <summary>
            NumPad3 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumPad4">
            <summary>
            NumPad4 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumPad5">
            <summary>
            NumPad5 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumPad6">
            <summary>
            NumPad6 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumPad7">
            <summary>
            NumPad7 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumPad8">
            <summary>
            NumPad8 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.NumPad9">
            <summary>
            A Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.O">
            <summary>
            O Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Oem8">
            <summary>
            Oem8 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.OemBackslash">
            <summary>
            OemBackslash Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.OemClear">
            <summary>
            OemClear Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.OemCloseBrackets">
            <summary>
            OemCloseBrackets Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Oemcomma">
            <summary>
            Oemcomma Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.OemMinus">
            <summary>
            OemMinus Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.OemOpenBrackets">
            <summary>
            OemOpenBrackets Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.OemPeriod">
            <summary>
            OemPeriod Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.OemPipe">
            <summary>
            OemPipe Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Oemplus">
            <summary>
            Oemplus Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.OemQuestion">
            <summary>
            OemQuestion Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.OemQuotes">
            <summary>
            OemQuotes Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.OemSemicolon">
            <summary>
            OemSemicolon Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Oemtilde">
            <summary>
            Oemtilde Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.P">
            <summary>
            P Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Pa1">
            <summary>
            Pa1 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.PageDown">
            <summary>
            PageDown Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.PageUp">
            <summary>
            PageUp Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Pause">
            <summary>
            Pause Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Play">
            <summary>
            Play Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Print">
            <summary>
            Print Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.PrintScreen">
            <summary>
            PrintScreen Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Prior">
            <summary>
            Prior Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.ProcessKey">
            <summary>
            ProcessKey Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Q">
            <summary>
            Q Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.R">
            <summary>
            R Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.RButton">
            <summary>
            RButton Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.RControlKey">
            <summary>
            RControlKey Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Return">
            <summary>
            Return  Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Right">
            <summary>
            Right Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.RMenu">
            <summary>
            RMenu Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.RShiftKey">
            <summary>
            RShiftKey Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.RWin">
            <summary>
            RWin Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.S">
            <summary>
            S Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Scroll">
            <summary>
            Scroll Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Select">
            <summary>
            Select Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.SelectMedia">
            <summary>
            SelectMedia Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Separator">
            <summary>
            Separator Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Shift">
            <summary>
            Shift Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.ShiftKey">
            <summary>
            ShiftKey Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Snapshot">
            <summary>
            Snapshot Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Space">
            <summary>
            Space Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Subtract">
            <summary>
            Subtract Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.T">
            <summary>
            T Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Tab">
            <summary>
            Tab Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.U">
            <summary>
            U Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Up">
            <summary>
            Up Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.V">
            <summary>
            V Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.VolumeDown">
            <summary>
            VolumeDown Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.VolumeMute">
            <summary>
            VolumeMute Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.VolumeUp">
            <summary>
            VolumeUp Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.W">
            <summary>
            W Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.X">
            <summary>
            X Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.XButton1">
            <summary>
            XButton1 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.XButton2">
            <summary>
            XButton2 Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Y">
            <summary>
            Y Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Z">
            <summary>
            Z Key
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Keys.Zoom">
            <summary>
            Zoom Key
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.MouseButtons">
            <summary>
            Defines MouseButtons
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.MouseButtons.Left">
            <summary>
            Left button
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.MouseButtons.Middle">
            <summary>
            Middle button
            </summary>        
        </member>
        <member name="F:Gizmox.WebGUI.Forms.MouseButtons.None">
            <summary>
            None button
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.MouseButtons.Right">
            <summary>
            Right button
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.MouseButtons.XButton1">
            <summary>
            XButton1 button
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.MouseButtons.XButton2">
            <summary>
            XButton2 button
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Vitualization.IO.VirtualIO">
            <summary>
            Provides the auxilury methods to implement the FSO api
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualIO.FileTypeId">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualIO.FileContentTypeId">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Vitualization.IO.VirtualIO.DirectoryTypeId">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateDirectory(System.String)">
            <summary>
            Creates a directory.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
            <summary>
            Creates a directory.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="directorySecurity">The directory security.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateSubdirectory(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo,System.String)">
            <summary>
            Creates the subdirectory.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateSubdirectory(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo,System.String,System.Security.AccessControl.DirectorySecurity)">
            <summary>
            Creates the subdirectory.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <param name="path">The path.</param>
            <param name="directorySecurity">The directory security.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.DeleteDirectory(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo)">
            <summary>
            Deletes the directory.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.DeleteDirectory(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo,System.Boolean)">
            <summary>
            Deletes the directory.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <param name="recursive">if set to <c>true</c> the delete will be recursive.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.DeleteDirectory(System.String)">
            <summary>
            Deletes the directory.
            </summary>
            <param name="directoryPath">The directory path.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.DeleteDirectory(System.String,System.Boolean)">
            <summary>
            Deletes the directory.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="recursive">if set to <c>true</c> [recursive].</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryExists(System.String)">
            <summary>
            Gets the directory exists.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenDirectory(System.String)">
            <summary>
            Opens the directory.
            </summary>
            <param name="strDirectoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenDirectory(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Opens the directory.
            </summary>
            <param name="objDirectoryReference">The directory reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenDirectory(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo)">
            <summary>
            Opens the directory.
            </summary>
            <param name="objVirtualDirectoryInfo">The virtual directory info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryExists(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo)">
            <summary>
            Gets the directory exists.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryCreationTime(System.String)">
            <summary>
            Gets the directory creation time.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryCreationTimeUtc(System.String)">
            <summary>
            Gets the directory creation time UTC.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectories(System.String)">
            <summary>
            Gets the directories.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectories(System.String,System.String)">
            <summary>
            Gets the directories.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="searchPattern">The search pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectories(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Gets the directories.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="searchPattern">The search pattern.</param>
            <param name="searchOption">The search option.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectories(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo)">
            <summary>
            Gets the directories.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectories(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo,System.String)">
            <summary>
            Gets the directories.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <param name="searchPattern">The search pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectories(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo,System.String,System.IO.SearchOption)">
            <summary>
            Gets the directories.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <param name="searchPattern">The search pattern.</param>
            <param name="searchOption">The search option.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryFiles(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo)">
            <summary>
            Gets the directory files.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryFiles(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo,System.String)">
            <summary>
            Gets the directory files.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <param name="searchPattern">The search pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryFiles(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo,System.String,System.IO.SearchOption)">
            <summary>
            Gets the directory files.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <param name="searchPattern">The search pattern.</param>
            <param name="searchOption">The search option.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryRoot(System.String)">
            <summary>
            Gets the directory root.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryRoot(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo)">
            <summary>
            Gets the directory root.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryFiles(System.String)">
            <summary>
            Gets the directory files.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryFiles(System.String,System.String)">
            <summary>
            Gets the directory files.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="searchPattern">The search pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Gets the directory files.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="searchPattern">The search pattern.</param>
            <param name="searchOption">The search option.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryLastAccessTime(System.String)">
            <summary>
            Gets the directory last access time.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryLastAccessTimeUtc(System.String)">
            <summary>
            Gets the directory last access time UTC.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryLastWriteTime(System.String)">
            <summary>
            Gets the directory last write time.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryLastWriteTimeUtc(System.String)">
            <summary>
            Gets the directory last write time UTC.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryParent(System.String)">
            <summary>
            Gets the directory parent.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryParent(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo)">
            <summary>
            Gets the directory parent.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.MoveDirectory(System.String,System.String)">
            <summary>
            Moves the directory.
            </summary>
            <param name="sourceDirectoryName">Name of the source directory.</param>
            <param name="destDirectoryName">Name of the dest directory.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.SetDirectoryCreationTime(System.String,System.DateTime)">
            <summary>
            Sets the directory creation time.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="creationTime">The creation time.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.SetDirectoryCreationTimeUtc(System.String,System.DateTime)">
            <summary>
            Sets the directory creation time UTC.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="creationTimeUtc">The creation time UTC.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectory(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Gets the directory.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryName(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Gets the name of the directory.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetRootDirectory(Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo)">
            <summary>
            Gets the root directory.
            </summary>
            <param name="virtualDriveInfo">The virtual drive info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateFile(System.String)">
            <summary>
            Creates the file.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateFile(Gizmox.WebGUI.Virtualization.VirtualReference,System.String,System.IO.FileMode)">
            <summary>
            Creates the file.
            </summary>
            <param name="objVirtualReference">The virtual reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateTextFile(System.String)">
            <summary>
            Creates the text file.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateFile(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Creates the file.
            </summary>
            <param name="objVirtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateFile(System.String,System.Int32)">
            <summary>
            Creates the file.
            </summary>
            <param name="path">The path.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateFile(System.String,System.Int32,System.IO.FileOptions)">
            <summary>
            Creates the file.
            </summary>
            <param name="path">The path.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateFile(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
            <summary>
            Creates the file.
            </summary>
            <param name="path">The path.</param>
            <param name="bufferSize">Size of the buffer.</param>
            <param name="options">The options.</param>
            <param name="fileSecurity">The file security.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.ReadContentStream(Gizmox.WebGUI.Vitualization.IO.VirtualFileStream,System.IO.FileMode)">
            <summary>
            Gets the content of the file.
            </summary>
            <param name="virtualFileStream">The virtual file stream.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.ReadContentStream(Gizmox.WebGUI.Virtualization.VirtualReference,System.IO.FileMode)">
            <summary>
            Gets the content of the file.
            </summary>
            <param name="virtualReference">The virtual reference.</param>
            <param name="enmFileMode">The file mode.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.SetFileStream(Gizmox.WebGUI.Vitualization.IO.VirtualFileStream)">
            <summary>
            Sets the content of the file.
            </summary>
            <param name="virtualFileStream">The virtual file stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.SetFileStream(Gizmox.WebGUI.Virtualization.VirtualReference,System.IO.Stream)">
            <summary>
            Sets the content of the file.
            </summary>
            <param name="virtualReference">The virtual reference.</param>
            <param name="contentStream">The content stream.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.AppendAllText(System.String,System.String)">
            <summary>
            Appends all text.
            </summary>
            <param name="path">The path.</param>
            <param name="contents">The contents.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends all text.
            </summary>
            <param name="path">The path.</param>
            <param name="contents">The contents.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetStreamWriterForAppendText(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Appends the text.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileStreamForWrite(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Opens the write.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetStreamWriterForAppendText(System.String)">
            <summary>
            Appends the text.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileStream(System.String,System.IO.FileMode)">
            <summary>
            Opens the file.
            </summary>
            <param name="path">The path.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileStream(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens the file.
            </summary>
            <param name="path">The path.</param>
            <param name="mode">The mode.</param>
            <param name="access">The access.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileStream(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens the file.
            </summary>
            <param name="path">The path.</param>
            <param name="mode">The mode.</param>
            <param name="access">The access.</param>
            <param name="share">The share.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileStream(System.String)">
            <summary>
            Opens the read file.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFileText(System.String)">
            <summary>
            Opens the file text.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFileWrite(System.String)">
            <summary>
            Opens the file write.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.ReadAllFileText(System.String)">
            <summary>
            Reads all file text.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.ReadAllFileText(System.String,System.Text.Encoding)">
            <summary>
            Reads all file text.
            </summary>
            <param name="path">The path.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.ReadAllFileBytes(System.String)">
            <summary>
            Reads all file bytes.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.ReadAllFileLines(System.String)">
            <summary>
            Reads all file lines.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.ReadAllFileLines(System.String,System.Text.Encoding)">
            <summary>
            Reads all file lines.
            </summary>
            <param name="path">The path.</param>
            <param name="encoding">The encoding.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.WriteAllFileBytes(System.String,System.Byte[])">
            <summary>
            Writes all file bytes.
            </summary>
            <param name="path">The path.</param>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.WriteAllFileLines(System.String,System.String[])">
            <summary>
            Writes all file lines.
            </summary>
            <param name="path">The path.</param>
            <param name="contents">The contents.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.WriteAllFileLines(System.String,System.String[],System.Text.Encoding)">
            <summary>
            Writes all file lines.
            </summary>
            <param name="path">The path.</param>
            <param name="contents">The contents.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.WriteAllFileText(System.String,System.String)">
            <summary>
            Writes all file text.
            </summary>
            <param name="path">The path.</param>
            <param name="contents">The contents.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.WriteAllFileText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Writes all file text.
            </summary>
            <param name="path">The path.</param>
            <param name="contents">The contents.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateFileStreamWriter(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Creates the file stream writer.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFileStream(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo,System.IO.FileMode)">
            <summary>
            Opens the file stream.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <param name="mode">The mode.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFileStream(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens the file stream.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <param name="mode">The mode.</param>
            <param name="access">The access.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFileStream(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens the file stream.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <param name="mode">The mode.</param>
            <param name="access">The access.</param>
            <param name="share">The share.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFileStreamForRead(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Opens the file stream for read.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFileStreamReader(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Opens the file stream reader.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFileForRead(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Opens the file.
            </summary>
            <param name="objFileReference">The obj file reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFile(Gizmox.WebGUI.Virtualization.VirtualReference,Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions)">
            <summary>
            Opens the file.
            </summary>
            <param name="objFileReference">The file reference.</param>
            <param name="objOptions">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFileForRead(System.String)">
            <summary>
            Opens the file.
            </summary>
            <param name="strFilePath">The STR file path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFile(System.String,Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions)">
            <summary>
            Opens the file.
            </summary>
            <param name="strFilePath">The file path.</param>
            <param name="objOptions">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFileForRead(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Opens the file.
            </summary>
            <param name="objFileInfo">The file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.OpenFile(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo,Gizmox.WebGUI.Vitualization.IO.VirtualFileOpenOptions)">
            <summary>
            Opens the file.
            </summary>
            <param name="objFileInfo">The file info.</param>
            <param name="objOptions">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CopyFile(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo,System.String,System.Boolean)">
            <summary>
            Copies the file.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <param name="destFileName">Name of the dest file.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CopyFile(System.String,System.String)">
            <summary>
            Copies the file.
            </summary>
            <param name="sourceFileName">Name of the source file.</param>
            <param name="destFileName">Name of the dest file.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CopyFile(System.String,System.String,System.Boolean)">
            <summary>
            Copies the file.
            </summary>
            <param name="sourceFileName">Name of the source file.</param>
            <param name="destFileName">Name of the dest file.</param>
            <param name="overwrite">if set to <c>true</c> [overwrite].</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.MoveFile(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo,System.String)">
            <summary>
            Moves the file to.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <param name="destFileName">Name of the dest file.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.MoveFile(System.String,System.String)">
            <summary>
            Moves the file.
            </summary>
            <param name="sourceFileName">Name of the source file.</param>
            <param name="destFileName">Name of the dest file.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.DeleteFile(System.String)">
            <summary>
            Deletes the file.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.Delete(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Deletes the specified virtual file info.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileReadOnly(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Gets the is read only.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileCreationTime(System.String)">
            <summary>
            Gets the file creation time.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileCreationTimeUtc(System.String)">
            <summary>
            Gets the file creation time UTC.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileLastAccessTime(System.String)">
            <summary>
            Gets the file last access time.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileLastAccessTimeUtc(System.String)">
            <summary>
            Gets the file last access time UTC.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileLastWriteTime(System.String)">
            <summary>
            Gets the file last write time.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileLastWriteTimeUtc(System.String)">
            <summary>
            Gets the file last write time UTC.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileExists(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Gets the file exists.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileLength(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Gets the length of the file.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetVirtualNodeFromFileSystemInfo(Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo)">
            <summary>
            Gets the virtual node from file info.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileName(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Gets the name of the file.
            </summary>
            <param name="objFileReference">The file reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileName(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Gets the name of the file.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileExists(System.String)">
            <summary>
            Files the exists.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileSystemEntries(System.String)">
            <summary>
            Gets the file system entries.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileSystemEntries(System.String,System.String)">
            <summary>
            Gets the file system entries.
            </summary>
            <param name="path">The path.</param>
            <param name="searchPattern">The search pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileSystemInfos(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo)">
            <summary>
            Gets the file system infos.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileSystemInfos(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo,System.String)">
            <summary>
            Gets the file system infos.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <param name="searchPattern">The search pattern.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.RefreshFile(Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo)">
            <summary>
            Refreshes the file.
            </summary>
            <param name="objVirtualFileSystemInfo">The virtual file system info.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileCreationTimeUtc(Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo)">
            <summary>
            Gets the file creation time UTC.
            </summary>
            <param name="virtualFileSystemInfo">The virtual file system info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileExtension(Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo)">
            <summary>
            Gets the file extension.
            </summary>
            <param name="virtualFileSystemInfo">The virtual file system info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFullName(Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo)">
            <summary>
            Gets the full name.
            </summary>
            <param name="virtualFileSystemInfo">The virtual file system info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetLastAccessTime(Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo)">
            <summary>
            Gets the last access time.
            </summary>
            <param name="virtualFileSystemInfo">The virtual file system info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetLastAccessTimeUtc(Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo)">
            <summary>
            Gets the last access time UTC.
            </summary>
            <param name="virtualFileSystemInfo">The virtual file system info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetLastWriteTime(Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo)">
            <summary>
            Gets the last write time.
            </summary>
            <param name="virtualFileSystemInfo">The virtual file system info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetLastWriteTimeUtc(Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo)">
            <summary>
            Gets the last write time UTC.
            </summary>
            <param name="virtualFileSystemInfo">The virtual file system info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetCreationTime(Gizmox.WebGUI.Vitualization.IO.VirtualFileSystemInfo)">
            <summary>
            Gets the creation time.
            </summary>
            <param name="virtualFileSystemInfo">The virtual file system info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetLogicalDrives">
            <summary>
            Gets the logical drives.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.CreateDrive(System.String)">
            <summary>
            Creates the drive.
            </summary>
            <param name="driveName">Name of the drive.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDrives">
            <summary>
            Gets the drives.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.SetDriveName(Gizmox.WebGUI.Vitualization.IO.VirtualDriveInfo,System.String)">
            <summary>
            Sets the name of the drive.
            </summary>
            <param name="virtualDriveInfo">The virtual drive info.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryAccessControl(System.String)">
            <summary>
            Gets the directory access control.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryAccessControl(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo)">
            <summary>
            Gets the directory access control.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryAccessControl(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo,System.Security.AccessControl.AccessControlSections)">
            <summary>
            Gets the directory access control.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <param name="includeSections">The include sections.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
            <summary>
            Gets the directory access control.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <param name="includeSections">The include sections.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryReference(Gizmox.WebGUI.Vitualization.IO.VirtualDirectoryInfo)">
            <summary>
            Gets the directory reference.
            </summary>
            <param name="virtualDirectoryInfo">The virtual directory info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryReference(System.String)">
            <summary>
            Gets the directory reference.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileReference(System.String)">
            <summary>
            Gets the file reference.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetDirectoryReference(Gizmox.WebGUI.Virtualization.VirtualReference)">
            <summary>
            Gets the directory reference.
            </summary>
            <param name="virtualFileReference">The virtual file reference.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileReference(System.String,System.Boolean)">
            <summary>
            Gets the file reference.
            </summary>
            <param name="path">The path.</param>
            <param name="includeFileName">if set to <c>true</c> [include file name].</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFileReference(Gizmox.WebGUI.Vitualization.IO.VirtualFileInfo)">
            <summary>
            Gets the file reference.
            </summary>
            <param name="virtualFileInfo">The virtual file info.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetSafeDirectoryPath(System.String)">
            <summary>
            Gets the safe directory path.
            </summary>
            <param name="directoryPath">The directory path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetSafeDriveName(System.String)">
            <summary>
            Gets the name of the safe drive.
            </summary>
            <param name="driveName">Name of the drive.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetSafePathName(System.String)">
            <summary>
            Gets the name of the safe path.
            </summary>
            <param name="strPathName">Name of the STR path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetFullPathIfRelative(System.String)">
            <summary>
            Gets the full path if relative.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.GetCurrentDirectory">
            <summary>
            Gets the current directory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Vitualization.IO.VirtualIO.SetCurrentDirectory(System.String)">
            <summary>
            Sets the current directory.
            </summary>
            <param name="directoryPath">The directory path.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Vitualization.IO.VirtualIO.FileNotFoundErrorMessage">
            <summary>
            Gets the file not found error message.
            </summary>
            <value>The file not found error message.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.StringResource">
            <summary>
            
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Skins.Resources.StringResource.mstrValue">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.StringResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.StringResource"/> class.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.StringResource.Value">
            <summary>
            Gets or sets the string value
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.StringResource.Presentation">
            <summary>
            Gets or sets the presentation.
            </summary>
            <value>The presentation.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.StringResource.PresentationEngine">
            <summary>
            Gets or sets the presentation engine.
            </summary>
            <value>The presentation engine.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource">
            <summary>
            Represents a HTML Resource
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource"/> class.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource"/> class.
            </summary>
            <param name="objResource">The resource.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource.Filter">
            <summary>
            Gets the filter.
            </summary>
            <value>The filter.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource.CompilerCollectorType">
            <summary>
            Gets the type of the compiler collector.
            </summary>
            <value>The type of the compiler collector.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource.CompilerContentType">
            <summary>
            Gets the type of the content compiler.
            </summary>
            <value>The type of the content compiler.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Skins.Resources.HtmlResource.NewFileExtension">
            <summary>
            Gets the new file extension.
            </summary>
            <value>The new file extension.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Skins.Resources.ImageCollector">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ImageCollector.#ctor(Gizmox.WebGUI.Forms.Skins.Resources.Compiler.GlobalScope,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Skins.Resources.ImageCollector"/> class.
            </summary>
            <param name="objGlobalScope">The global scope.</param>
            <param name="strCollectorName">The collector name.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ImageCollector.Write(System.Web.HttpResponse,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the resources to response.
            </summary>
            <param name="objResponse">The current response.</param>
            <param name="objController">The current controller.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Skins.Resources.ImageCollector.Write(System.IO.Stream,Gizmox.WebGUI.Forms.Skins.Resources.SkinCollectorControllerBase)">
            <summary>
            Writes the specified obj stream.
            </summary>
            <param name="objStream">The obj stream.</param>
            <param name="objController">The obj controller.</param>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IResponse">
            <summary>
            Summary description for IResponse.
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IServerResponse">
            <summary>
            Summary description for IResponse.
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IServerResponse.End(Gizmox.WebGUI.Common.Interfaces.IResponseWriter)">
            <summary>
            
            </summary>
            <param name="objXmlWriter"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IServerResponse.Start(System.Int64,System.Int32,Gizmox.WebGUI.Common.Interfaces.IResponseWriter@,System.Boolean,System.Int64)">
            <summary>
            Starts the specified LNG last render.
            </summary>
            <param name="lngLastRender">The LNG last render.</param>
            <param name="intNextInvokationTime">The int next invokation time.</param>
            <param name="objXmlWriter">The obj XML writer.</param>
            <param name="blnRenderParams">if set to <c>true</c> [BLN render params].</param>
            <param name="intActiveFormGuid">The int active form GUID.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IServerResponse.StartMenus(System.Int64,Gizmox.WebGUI.Common.Interfaces.IResponseWriter@)">
            <summary>
            
            </summary>
            <param name="lngLastRender"></param>
            <param name="objXmlWriter"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IServerResponse.WriteError(System.String,System.String,Gizmox.WebGUI.Common.Interfaces.IResponseWriter@)">
            <summary>
            Writes the error.
            </summary>
            <param name="strSource">The STR source.</param>
            <param name="strMessage">The STR message.</param>
            <param name="objXmlWriter">The obj XML writer.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IServerResponse.WriteClosed(Gizmox.WebGUI.Common.Interfaces.IResponseWriter@)">
            <summary>
            Write closed form message
            </summary>
            <param name="objXmlWriter"></param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Interfaces.IServerResponse.WriteRefresh(Gizmox.WebGUI.Common.Interfaces.IResponseWriter@)">
            <summary>
            Write refresh message
            </summary>
            <param name="objXmlWriter"></param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IServerResponse.GeneralNamespacePrefix">
            <summary>
            Returns the WebGUI general namespace prefix
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IServerResponse.GeneralNamespaceUrl">
            <summary>
            Returns the WebGUI general namespace url
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponentContainer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponentContainer.ContainedComponents">
            <summary>
            Gets the contained components.
            </summary>
            <value>The contained components.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponentMember">
            <summary>
            
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponentMember.IsRegistered">
            <summary>
            Gets or sets a value indicating whether this instance is registered.
            </summary>
            <value>
            	<c>true</c> if this instance is registered; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponentMember.MemberID">
            <summary>
            Gets or sets the member ID.
            </summary>
            <value>The member ID.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IRegisteredComponentMember.OwnerID">
            <summary>
            Gets the owner ID.
            </summary>
            <value>The owner ID.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IArgumentsProvider">
            <summary>
            Summary description for IArguments.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IArgumentsProvider.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.Object"/> with the specified STR argument name.
            </summary>
            <value></value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.MashupType">
            <summary>
            The mashup type
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.MashupType.None">
            <summary>
            Not a mashup
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.MashupType.ModalDialog">
            <summary>
            Modal mashup
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.MashupType.ModalessDialog">
            <summary>
            Modaless mashup
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Interfaces.MashupType.Frame">
            <summary>
            Frame mashup
            </summary>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IMashupArguments">
            <summary>
            Summary description for IMashupArguments (for mashup).
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IMashupArguments.Token">
            <summary>
            Gets the mashup token.
            </summary>
            <value>The mashup token.</value>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IMashupArguments.Type">
            <summary>
            Gets the mashup type.
            </summary>
            <value>The mashup type.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Interfaces.IArgumentsWriterProvider">
            <summary>
            Summary description for IArgumentsWriterProvider.
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Interfaces.IArgumentsWriterProvider.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified STR argument name.
            </summary>
            <value></value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper">
            <summary>
            Provides a serializable wrapper for font family
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper.mstrFontFamily">
            <summary>
            The serializable font family name
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper.#ctor(System.Drawing.FontFamily)">
            <summary>
            Initializes a new instance of the <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper"/> class.
            </summary>
            <param name="objFontFamily">The font family.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper.ToArray(System.Drawing.FontFamily[])">
            <summary>
            Gets the font family wrapper array.
            </summary>
            <param name="objArray">The array.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper.GetInstanceFromData(System.Object)">
            <summary>
            Gets the instance from data.
            </summary>
            <param name="objInstance">The instance.</param>
            <returns></returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper.SaveInstanceData(System.Object)">
            <summary>
            Saves the instance data.
            </summary>
            <param name="objInstance">The instance.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper.op_Implicit(System.Drawing.FontFamily)~Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Drawing.FontFamily"/> to <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper"/>.
            </summary>
            <param name="objFontFamily">The font family.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper.op_Implicit(Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper)~System.Drawing.FontFamily">
            <summary>
            Performs an implicit conversion from <see cref="T:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper"/> to <see cref="T:System.Drawing.FontFamily"/>.
            </summary>
            <param name="objFontFamilyWrapper">The font family wrapper.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="P:Gizmox.WebGUI.Forms.Serialization.SerializableFontFamilyWrapper.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Gizmox.WebGUI.Forms.IDataObject">
            <summary>Provides a format-independent mechanism for transferring data.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.GetData(System.String)">
            <summary>Retrieves the data associated with the specified data format.</summary>
            <returns>The data associated with the specified format, or null.</returns>
            <param name="format">The format of the data to retrieve. See <see cref="T:Gizmox.WebGUI.Forms.DataFormats"></see> for predefined formats. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.GetData(System.Type)">
            <summary>Retrieves the data associated with the specified class type format.</summary>
            <returns>The data associated with the specified format, or null.</returns>
            <param name="format">A <see cref="T:System.Type"></see> representing the format of the data to retrieve. See <see cref="T:Gizmox.WebGUI.Forms.DataFormats"></see> for predefined formats. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.GetData(System.String,System.Boolean)">
            <summary>Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</summary>
            <returns>The data associated with the specified format, or null.</returns>
            <param name="autoConvert">true to convert the data to the specified format; otherwise, false. </param>
            <param name="format">The format of the data to retrieve. See <see cref="T:Gizmox.WebGUI.Forms.DataFormats"></see> for predefined formats. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.GetDataPresent(System.String)">
            <summary>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</summary>
            <returns>true if data stored in this instance is associated with, or can be converted to, the specified format; otherwise false.</returns>
            <param name="format">The format for which to check. See <see cref="T:Gizmox.WebGUI.Forms.DataFormats"></see> for predefined formats. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.GetDataPresent(System.Type)">
            <summary>Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</summary>
            <returns>true if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, false.</returns>
            <param name="format">A <see cref="T:System.Type"></see> representing the format for which to check. See <see cref="T:Gizmox.WebGUI.Forms.DataFormats"></see> for predefined formats. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)">
            <summary>Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</summary>
            <returns>true if the data is in, or can be converted to, the specified format; otherwise, false.</returns>
            <param name="autoConvert">true to determine whether data stored in this instance can be converted to the specified format; false to check whether the data is in the specified format. </param>
            <param name="format">The format for which to check. See <see cref="T:Gizmox.WebGUI.Forms.DataFormats"></see> for predefined formats. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.GetFormats">
            <summary>Returns a list of all formats that data stored in this instance is associated with or can be converted to.</summary>
            <returns>An array of the names that represents a list of all formats that are supported by the data stored in this object.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.GetFormats(System.Boolean)">
            <summary>Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</summary>
            <returns>An array of the names that represents a list of all formats that are supported by the data stored in this object.</returns>
            <param name="autoConvert">true to retrieve all formats that data stored in this instance is associated with or can be converted to; false to retrieve only native data formats. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.SetData(System.Object)">
            <summary>Stores the specified data in this instance, using the class of the data for the format.</summary>
            <param name="data">The data to store. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.SetData(System.String,System.Object)">
            <summary>Stores the specified data and its associated format in this instance.</summary>
            <param name="data">The data to store. </param>
            <param name="format">The format associated with the data. See <see cref="T:Gizmox.WebGUI.Forms.DataFormats"></see> for predefined formats. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.SetData(System.Type,System.Object)">
            <summary>Stores the specified data and its associated class type in this instance.</summary>
            <param name="data">The data to store. </param>
            <param name="format">A <see cref="T:System.Type"></see> representing the format associated with the data. See <see cref="T:Gizmox.WebGUI.Forms.DataFormats"></see> for predefined formats. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:Gizmox.WebGUI.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)">
            <summary>Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</summary>
            <param name="autoConvert">true to allow the data to be converted to another format; otherwise, false. </param>
            <param name="data">The data to store. </param>
            <param name="format">The format associated with the data. See <see cref="T:Gizmox.WebGUI.Forms.DataFormats"></see> for predefined formats. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:Gizmox.WebGUI.Common.Extensibility.WebCompilerPagesAttribute">
            <summary>
            Defines a component exposed pages that can be retrieved using the resources mechanism.
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Extensibility.WebCompilerPagesAttribute.mobjAssembly">
            <summary>
            The resources assembly
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Extensibility.WebCompilerPagesAttribute.mstrNamespace">
            <summary>
            The resources namespace
            </summary>
        </member>
        <member name="F:Gizmox.WebGUI.Common.Extensibility.WebCompilerPagesAttribute.marrResources">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.WebCompilerPagesAttribute.#ctor(System.Type,System.String)">
            <summary>
            Defines resources location by the reference type namespace and component type name.
            </summary>
            <param name="objReference">The reference to retrieve its namespace and assembly where the resources are located.</param>
            <param name="strResources">The resource names seperated with a ';'.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.WebCompilerPagesAttribute.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="strNamespace">The namespace where the resources is located.</param>
            <param name="strResources">The resource names seperated with a ';'.</param>
        </member>
        <member name="M:Gizmox.WebGUI.Common.Extensibility.WebCompilerPagesAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            Defines resources location by the reference type namespace and component type name.
            </summary>
            <param name="strNamespace">The namespace where the resource is located.</param>
            <param name="strAssembly">The assembly where the resource is located.</param>
            <param name="strResources">The resource names seperated with a ';'.</param>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Extensibility.WebCompilerPagesAttribute.Assembly">
            <summary>
            Returns the resources assembly
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Extensibility.WebCompilerPagesAttribute.Namespace">
            <summary>
            Returns the resources namesapce
            </summary>
        </member>
        <member name="P:Gizmox.WebGUI.Common.Extensibility.WebCompilerPagesAttribute.Resoruces">
            <summary>
            The resource names
            </summary>
        </member>
    </members>
</doc>
